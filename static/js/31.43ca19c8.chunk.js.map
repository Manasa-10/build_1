{"version":3,"sources":["containers/Dashboard/components/Timestamp/index.js","containers/SalesModule/components/Table/index.js","containers/SalesModule/action.js","containers/SalesModule/index.js"],"names":["timestampFilter","filter","row","_original","id","String","getDateTime","toLocaleLowerCase","includes","value","Timestamp","props","Table","React","Component","userDetails","rowInfo","original","name","email","contact","additionalFeatures","key","index","style","display","alignItems","type","className","onChange","event","this","handleChange","Number","inbound","checked","for","is_ticketing","is_escalation","getPodLeader","pod_leader_email","otherActions","to","login_id","is_active","onClick","activateOrDeactivateMember","payload","uploadEditMemberData","window","confirm","fieldName","target","fieldValue","render","data","Button","label","filterable","minRows","pageSize","PaginationComponent","NoDataComponent","defaultFilterMethod","columns","Header","maxWidth","Cell","accessor","minWidth","filterMethod","width","getSalesMembersAction","dispatch","showLoader","getSalesMembers","then","response","hideLoader","status","GET_SALES_MEMBERS_SUCCESS","catch","error","handleError","resetSalesData","RESET_SALES_MEMBERS_DATA","editSalesMember","EDIT_SALES_MEMBERS_SUCCESS","uploadEditMemberDataSuccess","toast","success","SalesModule","componentDidMount","componentWillUnmount","membersData","PageHeader","header","connect","state","ownProps","salesData","members","bindActionCreators"],"mappings":"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","file":"static/js/31.43ca19c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { getDateTime } from '../../../../config/time';\r\n\r\nconst Timestamp = (props) => {\r\n    if (props.value) {\r\n        return <div>{getDateTime(props.value)}</div>\r\n    }\r\n    return \"\"\r\n}\r\n\r\nexport const timestampFilter = (filter, row) => {\r\n    return row._original[filter.id] && String(getDateTime(String(row._original[filter.id]))).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nexport default Timestamp;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport './style.scss';\r\nimport Timestamp, { timestampFilter } from '../../../Dashboard/components/Timestamp';\r\nimport Button from '../../../../components/Button';\r\n\r\nclass Table extends React.Component {\r\n\r\n    userDetails = (props) => {\r\n        let rowInfo = props.original;\r\n        return <div>\r\n            <div>{rowInfo.name}</div>\r\n            <div>{rowInfo.email}</div>\r\n            <div>{rowInfo.contact}</div>\r\n        </div>\r\n    }\r\n\r\n    additionalFeatures = (props) => {\r\n        let rowInfo = props.original;\r\n        return <div key={`additional-features-${props.index}`}>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"inbound\" type=\"checkbox\"\r\n                    id={`inbound-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.inbound) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.inbound) === 1}\r\n                />\r\n                <label for={`inbound-${props.index}`} className=\"custom-label\"> Allow Inbound Calls</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_ticketing\" type=\"checkbox\"\r\n                    id={`is_ticketing-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_ticketing) === 1 ? 0 : 1}\r\n                    checked={rowInfo.is_ticketing}\r\n                />\r\n                <label for={`is_ticketing-${props.index}`} className=\"custom-label\"> Helpdesk Tickets</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_escalation\" type=\"checkbox\"\r\n                    id={`is_escalation-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_escalation) === 1 ? 0 : 1}\r\n                    checked={rowInfo.is_escalation}\r\n                />\r\n                <label for={`is_escalation-${props.index}`} className=\"custom-label\"> Escaltion Team</label>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    getPodLeader = (props) => {\r\n        let rowInfo = props.original;\r\n        return <div>\r\n            <div>{rowInfo.pod_leader_email || \"nakul@wakefit.co\"}</div>\r\n        </div>\r\n    }\r\n\r\n    otherActions = (props) => {\r\n        let rowInfo = props.original;\r\n        return <div>\r\n            <div className=\"cursor-pointer\"><Link to={`/reset-password/${rowInfo.login_id}`} >Reset Password</Link></div>\r\n            <div className=\"cursor-pointer\">{Number(rowInfo.is_active) === 1 ?\r\n                <div onClick={() => this.activateOrDeactivateMember(rowInfo, 0)}>De-Activate</div> :\r\n                <div onClick={() => this.activateOrDeactivateMember(rowInfo, 1)}>Activate</div>}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    activateOrDeactivateMember = (rowInfo, value) => {\r\n        let payload = {};\r\n        payload.login_id = rowInfo.login_id;\r\n        payload.is_active = value;\r\n        this.props.uploadEditMemberData(payload);\r\n    }\r\n\r\n    handleChange = (event, rowInfo) => {\r\n        let Check = window.confirm(\"Are you sure want to update the status?\");\r\n        if (Check) {\r\n            let fieldName = event.target.name;\r\n            let fieldValue = event.target.value;\r\n            let payload = {};\r\n            payload.login_id = rowInfo.login_id;\r\n            payload[fieldName] = Number(fieldValue);\r\n            this.props.uploadEditMemberData(payload);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { data } = this.props;\r\n        return (\r\n            <div className=\"sales-table-container\">\r\n                <div className=\"additional-feature\">\r\n                    <Link to={\"/create-member\"}>\r\n                        <Button label=\"Create Member\" />\r\n                    </Link>\r\n                </div>\r\n                <ReactTable\r\n                    data={data} // verify once API is ready\r\n                    filterable\r\n                    minRows={0}\r\n                    pageSize={999}\r\n                    // PaginationComponent={() =>\r\n                    //     <PaginationComponent\r\n                    //         dropDownValues={dropDownValues}\r\n                    //         onLimitChange={this.onLimitChange}\r\n                    //         offset={this.state.offset}\r\n                    //         total={this.state.total}\r\n                    //         limit={this.state.limit}\r\n                    //         onPrevClick={this.handleClick}\r\n                    //         onNextClick={this.handleClick}\r\n                    //     />\r\n                    // }\r\n                    PaginationComponent={() => null}\r\n                    NoDataComponent={() => null}\r\n                    defaultFilterMethod={(filter, row) =>\r\n                        String(row[filter.id]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())}\r\n                    columns={[{\r\n                        Header: 'S.No',\r\n                        id: 'row',\r\n                        maxWidth: 50,\r\n                        filterable: false,\r\n                        Cell: (row) => <div>{row.index + 1}</div>\r\n                    }, {\r\n                        Header: \"User Details\",\r\n                        accessor: \"email\",\r\n                        minWidth: 200,\r\n                        Cell: this.userDetails\r\n                    }, {\r\n                        Header: \"Inbound/Ticketing/Escalation\",\r\n                        filterable: false,\r\n                        minWidth: 220,\r\n                        Cell: this.additionalFeatures\r\n                    }, {\r\n                        Header: \"Pod Leader\",\r\n                        accessor: \"pod_leader_email\",\r\n                        minWidth: 180,\r\n                        Cell: this.getPodLeader\r\n                    }, {\r\n                        Header: \"Create Timestamp\",\r\n                        accessor: \"create_timestamp\",\r\n                        minWidth: 180,\r\n                        Cell: Timestamp,\r\n                        filterMethod: timestampFilter\r\n                    }, {\r\n                        Header: \"Last Login Time\",\r\n                        accessor: \"last_login_timestamp\",\r\n                        minWidth: 180,\r\n                        Cell: Timestamp,\r\n                        filterMethod: timestampFilter\r\n                    }, {\r\n                        Header: \"Actions\",\r\n                        filterable: false,\r\n                        width: 180,\r\n                        Cell: this.otherActions\r\n                    }]}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;\r\n","import { GET_SALES_MEMBERS_SUCCESS, RESET_SALES_MEMBERS_DATA, EDIT_SALES_MEMBERS_SUCCESS } from \"./constants\";\r\nimport { showLoader, hideLoader } from \"../../components/Loader/action\";\r\nimport handleError from \"../../errorHandler\";\r\nimport { getSalesMembers, editSalesMember } from \"../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport function getSalesMembersAction() {\r\n    return (dispatch) => {\r\n        dispatch(showLoader());\r\n        getSalesMembers()\r\n            .then(response => {\r\n                dispatch(hideLoader());\r\n                if (response.status === 200) {\r\n                    dispatch(getSalesMembersSuccess(response.data));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                handleError(error, dispatch);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getSalesMembersSuccess(data) {\r\n    return {\r\n        type: GET_SALES_MEMBERS_SUCCESS,\r\n        data\r\n    }\r\n}\r\n\r\nexport function resetSalesData() {\r\n    return {\r\n        type: RESET_SALES_MEMBERS_DATA\r\n    }\r\n}\r\n\r\nexport function uploadEditMemberData(data) {\r\n    return (dispatch) => {\r\n        dispatch(showLoader());\r\n        editSalesMember(data)\r\n            .then(response => {\r\n                dispatch(hideLoader());\r\n                dispatch(uploadEditMemberDataSuccess(data));\r\n                toast.success(\"Successfully Updated!\");\r\n            })\r\n            .catch(error => {\r\n                handleError(error, dispatch);\r\n            });\r\n    }\r\n}\r\n\r\nexport function uploadEditMemberDataSuccess(data) {\r\n    return {\r\n        type: EDIT_SALES_MEMBERS_SUCCESS,\r\n        data\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport Table from './components/Table';\r\nimport { getSalesMembersAction, uploadEditMemberData, resetSalesData } from './action';\r\n\r\nclass SalesModule extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getSalesMembersAction();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetSalesData();\r\n    }\r\n\r\n    render() {\r\n        const title = \"Sales Team Members\";\r\n        const { membersData } = this.props;\r\n        return (\r\n            <div className=\"sales-team-container\">\r\n                <PageHeader\r\n                    header={title}\r\n                // count={orders && orders.count}\r\n                />\r\n                <Table\r\n                    data={membersData}\r\n                    uploadEditMemberData={this.props.uploadEditMemberData}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        membersData: state.salesData.members\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ getSalesMembersAction, uploadEditMemberData, resetSalesData }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SalesModule);"],"sourceRoot":""}