{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js","components/Alert/index.js","../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","containers/MissingItems/action.js","containers/MissingItems/index.js"],"names":["createSvgIcon","path","displayName","Component","React","props","ref","SvgIcon","_extends","muiName","CustomAlert","state","toggle","handleCollapse","this","setState","callbackOnClose","componentDidMount","render","message","title","type","in","style","width","severity","action","aria-label","color","size","onClick","fontSize","defaultProps","useControlled","_ref","controlled","defaultProp","default","isControlled","name","undefined","current","_React$useState","valueState","setValue","newValue","_slicedToArray","arr","i","arrayWithHoles","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","_s","_i","next","done","push","value","length","err","nonIterableRest","_arrayWithHoles","Array","isArray","_nonIterableRest","TypeError","missingItemAction","data","dispatch","showLoader","createMissingItems","then","response","hideLoader","CREATE_MISSING_ITEM_SUCCSESS","createSuccess","toast","success","catch","error","handleError","resetMissingItem","RESET_MISSING_ITEM_DATA","productsHas3Dimensions","productsHas2Dimensions","productDetails","label","sku","sleepingPillow","id","key","availableColors","availableModels","productTypes","types","MissingItems","selectedProduct","order_id","item_sku","item_dimensions","item_quantity","pillowCover","maxQty","stock","stockData","note","errors","enableSubmit","componentWillReceiveProps","console","log","resetData","resetMissingData","product","breath","height","modal","getQuantityOptions","options","getProductDetails","payload","productDetailsAPI","Number","setTimeout","detail","checkValidity","event","preventDefault","hasRequiredFields","every","field","hasDimensionOrType","dimension","includes","handleSubmit","handleChange","fieldName","target","fieldValue","dimensionRegex","test","dimensionArray","split","regexToCheckCharAtEnd","map","replace","numberRegex","checked","String","join","cart","componentWillUnmount","className","PageHeader","header","onChange","placeholder","item","FormControlLabel","control","Checkbox","Button","CircularProgress","connect","ownProps","userDetails","missingItemDetails","onCreateItemSuccess","bindActionCreators"],"mappings":"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","file":"static/js/18.519fef0f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport SvgIcon from '../../SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({}, props, {\n      ref: ref\n    }), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React, { Component } from 'react';\r\n// import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nclass CustomAlert extends Component {\r\n\r\n    state = {\r\n        toggle: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { toggle } = this.props;\r\n        this.setState({ toggle });\r\n    }\r\n\r\n    handleCollapse = (toggle) => this.setState({ toggle }, () => this.props.callbackOnClose && this.props.callbackOnClose());\r\n\r\n    render() {\r\n        let { message, title, type } = this.props;\r\n        let { toggle } = this.state;\r\n        return (\r\n            <Collapse in={toggle} style={{ width: '100%' }}>\r\n                <Alert\r\n                    severity={type}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => this.handleCollapse(false)}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {title && <AlertTitle>{title}</AlertTitle>}\r\n                    {message}\r\n                </Alert>\r\n            </Collapse>\r\n        );\r\n    }\r\n}\r\n\r\nCustomAlert.defaultProps = {\r\n    message: '',        //  message needs to be shown in Alert.\r\n    title: '',          //  message Title default will be blank.\r\n    toggle: true,       //  default set to true to open Alert.\r\n    type: 'info'        //  in ['error', 'warning', 'info', 'success']\r\n}\r\n\r\nCustomAlert.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    title: PropTypes.string,\r\n    toggle: PropTypes.bool,\r\n    type: PropTypes.string,\r\n    callbackOnClose: PropTypes.func\r\n}\r\n\r\nexport default CustomAlert;","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default value of an uncontrolled \".concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import { CREATE_MISSING_ITEM_SUCCSESS, RESET_MISSING_ITEM_DATA } from \"./constants\";\r\nimport { showLoader, hideLoader } from \"../../components/Loader/action\";\r\nimport handleError from \"../../errorHandler\";\r\nimport { createMissingItems } from \"../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nexport function missingItemAction(data) {\r\n    return (dispatch) => {\r\n        dispatch(showLoader());\r\n        createMissingItems(data)\r\n            .then(response => {\r\n                dispatch(hideLoader());\r\n                dispatch(createSuccess(response.data));\r\n                toast.success(response.data.message)\r\n            })\r\n            .catch(error => {\r\n                handleError(error, dispatch);\r\n            });\r\n    }\r\n}\r\n\r\nexport function createSuccess(data) {\r\n    return {\r\n        type: CREATE_MISSING_ITEM_SUCCSESS,\r\n        data\r\n    }\r\n}\r\n\r\nexport function resetMissingItem() {\r\n    return {\r\n        type: RESET_MISSING_ITEM_DATA\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport './style.scss'\r\nimport PageHeader from '../../components/PageHeader';\r\nimport { dimensionRegex, numberRegex } from '../../config/regex';\r\nimport Button from '../../components/Button';\r\nimport { missingItemAction, resetMissingItem } from \"./action\";\r\nimport { FormControlLabel, Checkbox, CircularProgress } from '@material-ui/core';\r\nimport { productDetailsAPI } from '../../api';\r\nimport CustomAlert from '../../components/Alert';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst productsHas3Dimensions = [\"WFPACK\", \"WFT\", \"WFOCOVER\"];\r\nconst productsHas2Dimensions = [\"WFB\", \"WMP\"];\r\n\r\nconst productDetails = [\r\n    { label: \"Topper\", sku: \"WFT\" },\r\n    { label: \"Outer Cover\", sku: \"WFOCOVER\" },\r\n    { label: \"Sleeping Pillow\", sku: \"WSP\" },\r\n    { label: \"Mattress Protector\", sku: \"WMP\" },\r\n    { label: \"Back Support Cushion\", sku: \"WBSC\" },\r\n    { label: \"Travel Neck Pillow\", sku: \"WTNP\" },\r\n    { label: \"Fitted Bedsheets\", sku: \"WFB\" },\r\n    { label: \"Packaging Material\", sku: \"WFPACK\" }\r\n];\r\n\r\nconst sleepingPillow = [{\r\n    id: 1,\r\n    label: \"Single Piece\",\r\n    key: \"S\"\r\n}, {\r\n    id: 2,\r\n    label: \"Set of 2\",\r\n    key: \"D\"\r\n}];\r\n\r\nconst availableColors = {\r\n    \"WMP\": [{\r\n        id: 1,\r\n        label: \"White\",\r\n        key: \"\"\r\n    }, {\r\n        id: 2,\r\n        label: \"Maroon\",\r\n        key: \"MAROON\"\r\n    }, {\r\n        id: 3,\r\n        label: \"Grey\",\r\n        key: \"GREY\"\r\n    }],\r\n    \"WFOCOVER\": [{\r\n        id: 1,\r\n        label: \"Select\",\r\n        key: \"\"\r\n    }, {\r\n        id: 2,\r\n        label: \"Grey\",\r\n        key: \"G\"\r\n    }, {\r\n        id: 3,\r\n        label: \"White\",\r\n        key: \"W\"\r\n    }],\r\n}\r\n\r\nconst availableModels = {\r\n    \"WFB\": [{\r\n        id: 1,\r\n        label: \"Serene Flora\",\r\n        key: \"FLORA\"\r\n    }, {\r\n        id: 2,\r\n        label: \"Leafy Bliss\",\r\n        key: \"LEAFY\"\r\n    }, {\r\n        id: 3,\r\n        label: \"Dreamy Bubbles\",\r\n        key: \"BUBBLES\"\r\n    }]\r\n}\r\n\r\nconst productTypes = {\r\n    \"WFT\": {\r\n        types: [{\r\n            label: \"HR Foam\",\r\n            key: \"HR\"\r\n        }, {\r\n            label: \"Memory Foam\",\r\n            key: \"MF\"\r\n        }, {\r\n            label: \"Super Soft Foam\",\r\n            key: \"SF\"\r\n        }, {\r\n            label: \"Cool Fit Foam Topper\",\r\n            key: \"CF\"\r\n        }]\r\n    }\r\n}\r\nclass MissingItems extends React.Component {\r\n    state = {\r\n        selectedProduct: {\r\n            order_id: \"\",\r\n            item_sku: \"\",\r\n            item_dimensions: \"\",\r\n            item_quantity: \"\",\r\n            pillowCover: \"\"\r\n        },\r\n        maxQty: 0,\r\n        stock: null,\r\n        stockData: \"notvalid\",  //  It should be in [\"loading\", \"notvalid\", \"valid\"]\r\n        note: \"\",\r\n        errors: {},\r\n        enableSubmit: false\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.setState({\r\n        //     selectedProduct: {\r\n        //         order_id: \"\",\r\n        //         item_sku: \"\",\r\n        //         item_dimensions: \"\",\r\n        //         item_quantity: \"\",\r\n        //     }\r\n        // });\r\n        // this.props.resetMissingItem();\r\n        this.resetMissingData();\r\n    }\r\n    componentWillReceiveProps = (props) => {\r\n        console.log(props)\r\n        if (props.resetData) {\r\n            this.resetMissingData();\r\n        }\r\n    }\r\n\r\n    resetMissingData = () => {\r\n        this.setState({\r\n            selectedProduct: {\r\n                order_id: \"\",\r\n                product: \"\",\r\n                item_sku: \"\",\r\n                length: \"\",\r\n                breath: \"\",\r\n                height: \"\",\r\n                modal: \"\",\r\n                type: \"\",\r\n                item_dimensions: \"\",\r\n                item_quantity: \"\",\r\n                pillowCover: \"\"\r\n            },\r\n            maxQty: 0,\r\n            stock: null,\r\n            stockData: \"notvalid\",  //  It should be in [\"loading\", \"notvalid\", \"valid\"]\r\n            note: \"\",\r\n            errors: {},\r\n            enableSubmit: false\r\n        }, () => {\r\n            this.props.resetMissingItem();\r\n        });\r\n    }\r\n    getQuantityOptions = () => {\r\n        let options = [];\r\n        let { maxQty } = this.state;\r\n        for (let i = 1; i <= maxQty; i++) options.push(<option>{i}</option>)\r\n        return options;\r\n    }\r\n\r\n    getProductDetails = () => {\r\n        let { selectedProduct, errors, maxQty, stockData } = this.state;\r\n        console.log(\"Getting...\", this.state);\r\n        let payload = {\r\n            \"item_sku\": selectedProduct.item_sku,\r\n            \"item_dimensions\": selectedProduct.item_dimensions ? selectedProduct.item_dimensions : \"\",\r\n            // \"affiliate_id\": \"\",\r\n            // \"cart_pri_id\": \"\",\r\n            \"request_type\": 1\r\n        };\r\n\r\n        this.setState({ stockData: \"loading\" }, () => {\r\n            productDetailsAPI(payload)\r\n                .then((response) => {\r\n                    // console.log(response);\r\n                    if (Number(response.data.stock) === 0) {\r\n                        maxQty = 0;\r\n                        errors.note = \"Out of Stock\";\r\n                        stockData = \"notvalid\";\r\n                    } else if (Number(response.data.stock) < 5) {\r\n                        maxQty = Number(response.data.stock);\r\n                        stockData = \"valid\";\r\n                        errors.note = \"\";\r\n                    } else if (Number(response.data.stock) >= 5) {\r\n                        maxQty = 5;\r\n                        stockData = \"valid\";\r\n                        errors.note = \"\";\r\n                    }\r\n                    setTimeout(() => this.setState({ selectedProduct, errors, maxQty: maxQty, stockData: stockData, stock: response.data }), 1000);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response);\r\n                    if (error.response && error.response.data && error.response.data.detail) {\r\n                        toast.error(error.response.data.detail)\r\n                    }\r\n                    errors.note = error.response && error.response.data && error.response.data.message;\r\n                    setTimeout(() => this.setState({ selectedProduct, errors, maxQty: 5, stockData: \"notvalid\" }), 1000);\r\n                });\r\n        });\r\n    }\r\n\r\n    checkValidity = (event) => {\r\n        event.preventDefault();\r\n        let { selectedProduct, errors } = this.state;\r\n        let requiredFields = [\"order_id\", \"product\", \"item_quantity\"];\r\n        let hasRequiredFields = requiredFields.every(field => selectedProduct[field]);\r\n        let hasDimensionOrType = false;\r\n        errors.dimension = \"\";\r\n\r\n        if (!selectedProduct[\"order_id\"]) {\r\n            errors[\"order_id\"] = \"Please enter Order ID!\";\r\n        }\r\n        if (!selectedProduct[\"product\"]) {\r\n            errors[\"product\"] = \"Please select the Product!\";\r\n        }\r\n        if (!selectedProduct[\"item_quantity\"]) {\r\n            errors[\"item_quantity\"] = \"Item Qty is Required!\";\r\n            hasRequiredFields = false;\r\n        } else if (this.state.stock && Number(this.state.stock.stock) < Number(selectedProduct[\"item_quantity\"])) {\r\n            errors[\"item_quantity\"] = \"Should be <= stock\";\r\n            hasRequiredFields = false;\r\n        }\r\n\r\n        if (productsHas3Dimensions.includes(selectedProduct[\"product\"])) {\r\n            if ([\"WFOCOVER\", \"WFT\"].includes(selectedProduct[\"product\"])) {\r\n                if (selectedProduct.length && selectedProduct.breath && selectedProduct.height && selectedProduct.modal) {\r\n                    hasDimensionOrType = true;\r\n                } else {\r\n                    if (!selectedProduct.modal) {\r\n                        errors.modal = \"Please select the Modal!\";\r\n                    }\r\n                }\r\n            } else {\r\n                if (selectedProduct.length && selectedProduct.breath && selectedProduct.height) {\r\n                    hasDimensionOrType = true;\r\n                }\r\n            }\r\n            if (!selectedProduct.length) {\r\n                errors.length = \"Required!\";\r\n            }\r\n            if (!selectedProduct.breath) {\r\n                errors.breath = \"Required!\";\r\n            }\r\n            if (!selectedProduct.height) {\r\n                errors.height = \"Required!\";\r\n            }\r\n        } else if (productsHas2Dimensions.includes(selectedProduct[\"product\"])) {\r\n            if ([\"WFB\"].includes(selectedProduct[\"product\"])) {\r\n                if (selectedProduct.length && selectedProduct.breath && selectedProduct.modal) {\r\n                    hasDimensionOrType = true;\r\n                } else {\r\n                    if (!selectedProduct.modal) {\r\n                        errors.modal = \"Please select the Modal!\";\r\n                    }\r\n                }\r\n            } else {\r\n                if (selectedProduct.length && selectedProduct.breath) {\r\n                    hasDimensionOrType = true;\r\n                }\r\n            }\r\n            if (!selectedProduct.length) {\r\n                errors.length = \"Required!\";\r\n            }\r\n            if (!selectedProduct.breath) {\r\n                errors.breath = \"Required!\";\r\n            }\r\n        } else if ([\"WSP\"].includes(selectedProduct[\"product\"])) {\r\n            //  products having type imp\r\n            if (selectedProduct.type) {\r\n                hasDimensionOrType = true;\r\n                errors.type = \"\";\r\n            } else {\r\n                errors.type = \"Please select the Type!\";\r\n            }\r\n        }\r\n        else if ([\"WBSC\", \"WTNP\"].includes(selectedProduct[\"product\"])) {\r\n            //  products only required don't have dimension or modal or type\r\n            hasDimensionOrType = true;\r\n        }\r\n\r\n        this.setState({ errors, enableSubmit: hasRequiredFields && hasDimensionOrType, note: \"\" },\r\n            () => {\r\n                console.log(hasRequiredFields, hasDimensionOrType, this.state)\r\n                // let { errors } = this.state;\r\n                if (hasDimensionOrType) {\r\n                    console.log(\"Valid...\");\r\n                    if (hasRequiredFields && this.state.stockData === 'valid') {\r\n                        this.handleSubmit();\r\n                        // this.saveProduct();\r\n                    } else if (this.state.stockData === 'notvalid') {\r\n                        this.getProductDetails();\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let fieldName = event.target.name;\r\n        let fieldValue = event.target.value;\r\n        let { selectedProduct, errors, stock, stockData } = this.state;\r\n\r\n        switch (fieldName) {\r\n            case \"order_id\":\r\n                if (fieldValue) {\r\n                    selectedProduct[fieldName] = fieldValue;\r\n                    errors[fieldName] = \"\"\r\n                }\r\n                else {\r\n                    selectedProduct[fieldName] = \"\";\r\n                    errors[fieldName] = \"Order Id is Required!\"\r\n                }\r\n                break;\r\n\r\n            case \"product\":\r\n                if (fieldValue) {\r\n                    selectedProduct[fieldName] = fieldValue;\r\n                    errors = {};\r\n                    selectedProduct[\"order_id\"] = \"\";\r\n                    selectedProduct[\"item_sku\"] = selectedProduct[\"product\"];\r\n                    selectedProduct[\"item_dimensions\"] = \"\";\r\n                    selectedProduct[\"item_quantity\"] = 1;\r\n                    selectedProduct[\"dimension\"] = \"\";\r\n                    selectedProduct[\"modal\"] = \"\";\r\n                    selectedProduct[\"type\"] = \"\";\r\n                    selectedProduct[\"length\"] = \"\";\r\n                    selectedProduct[\"breath\"] = \"\";\r\n                    selectedProduct[\"height\"] = \"\";\r\n                    selectedProduct[\"pillowCover\"] = \"\";\r\n                    stock = null;\r\n                    stockData = \"notvalid\";\r\n                    errors.note = \"\";\r\n                } else {\r\n                    selectedProduct[fieldName] = fieldValue;\r\n                    errors[fieldName] = \"Please select the Product\";\r\n                }\r\n                break;\r\n\r\n            case \"length\":\r\n            case \"breath\":\r\n            case \"height\":\r\n                if (fieldValue) {\r\n                    selectedProduct[fieldName] = fieldValue !== \"\" ?\r\n                        dimensionRegex.test(fieldValue) ? fieldValue : selectedProduct[fieldName]\r\n                        : \"\";\r\n                    errors[fieldName] = \"\";\r\n                } else {\r\n                    selectedProduct[fieldName] = fieldValue;\r\n                    errors[fieldName] = \"Required!\";\r\n                }\r\n                stockData = \"notvalid\";\r\n                stock = null;\r\n                stockData = \"notvalid\";\r\n                errors.note = \"\";\r\n                // selectedProduct.item_price = \"\";\r\n                break;\r\n\r\n            case \"dimension\":\r\n                if (fieldValue) {\r\n                    selectedProduct[fieldName] = fieldValue;\r\n                    errors[fieldName] = \"\";\r\n\r\n                    selectedProduct[fieldName] = fieldValue;\r\n                    let dimensionArray = fieldValue.split(\"x\");\r\n                    let regexToCheckCharAtEnd = /[a-zA-Z]*$/;\r\n                    dimensionArray.length > 0 && dimensionArray.map(dimension => {\r\n                        if (regexToCheckCharAtEnd.test(dimension)) {\r\n                            selectedProduct[\"modal\"] = dimension.replace(/[^a-zA-Z]+/g, '')\r\n                        }\r\n                        return \"\";\r\n                    })\r\n                    selectedProduct[\"length\"] = (dimensionArray.length > 1 && (dimensionArray[0].replace(/[^\\d]/g, ''))) || \"\";\r\n                    selectedProduct[\"breath\"] = (dimensionArray.length >= 2 && (dimensionArray[1].replace(/[^\\d]/g, ''))) || \"\";\r\n                    selectedProduct[\"height\"] = (dimensionArray.length >= 3 && (dimensionArray[2].replace(/[^\\d]/g, ''))) || \"\";\r\n\r\n                    stock = null;\r\n                    stockData = \"notvalid\";\r\n                    errors.note = \"\";\r\n                } else {\r\n                    selectedProduct[fieldName] = fieldValue;\r\n                    errors[fieldName] = \"Please select the Dimension\";\r\n                }\r\n                break;\r\n\r\n            case \"item_quantity\":\r\n                if (fieldValue && numberRegex.test(fieldValue) && fieldValue.length < 4) {\r\n                    selectedProduct[fieldName] = fieldValue;\r\n                    errors[fieldName] = this.state.stock && Number(this.state.stock.stock) >= Number(fieldValue) ? \"\" : \"Should be <= stock\";\r\n                } else if (!fieldValue) {\r\n                    selectedProduct[fieldName] = \"\";\r\n                    errors[fieldName] = \"Item Qty is Required!\";\r\n                }\r\n                break;\r\n\r\n            case \"pillowCover\":\r\n                selectedProduct[fieldName] = event.target.checked ? fieldValue : '';\r\n                stock = null;\r\n                stockData = \"notvalid\";\r\n                errors.note = \"\";\r\n                break;\r\n\r\n            case \"modal\":\r\n                selectedProduct[fieldName] = fieldValue;\r\n                errors[fieldName] = !selectedProduct[\"product\"].includes(\"WMP\") && (fieldValue ? \"\" : \"Required!\");\r\n                stock = null;\r\n                stockData = \"notvalid\";\r\n                errors.note = \"\";\r\n                break;\r\n\r\n            case \"type\":\r\n                selectedProduct[fieldName] = fieldValue;\r\n                errors[fieldName] = fieldValue ? \"\" : \"Required!\";\r\n                stock = null;\r\n                stockData = \"notvalid\";\r\n                errors.note = \"\";\r\n                break;\r\n\r\n            default: selectedProduct[fieldName] = fieldValue;\r\n                break;\r\n        }\r\n\r\n        selectedProduct[\"item_dimensions\"] = `${selectedProduct[\"length\"]}${selectedProduct[\"breath\"] ? (\"x\" + selectedProduct[\"breath\"]) : \"\"}${selectedProduct[\"height\"] ? \"x\" + selectedProduct[\"height\"] : \"\"}` + (![\"WSP\", \"WBSC\", \"WTNP\"].includes(String(selectedProduct[\"product\"])) ? \" inch\" : \"\");\r\n\r\n        if ([\"WFT\", \"WMP\", \"WFOCOVER\"].includes(selectedProduct[\"product\"])) {\r\n            selectedProduct[\"item_sku\"] = selectedProduct[\"product\"] + selectedProduct[\"modal\"] + (selectedProduct[\"length\"] && selectedProduct[\"length\"].split(\".\").join(\"\")) + (selectedProduct[\"breath\"] && selectedProduct[\"breath\"].split(\".\").join(\"\")) + (selectedProduct[\"height\"] && selectedProduct[\"height\"].split(\".\").join(\"\"));\r\n        } else {\r\n            selectedProduct[\"item_sku\"] = selectedProduct[\"product\"] + (selectedProduct[\"length\"] && selectedProduct[\"length\"].split(\".\").join(\"\")) + (selectedProduct[\"breath\"] && selectedProduct[\"breath\"].split(\".\").join(\"\")) + (selectedProduct[\"height\"] && selectedProduct[\"height\"].split(\".\").join(\"\")) + selectedProduct[\"modal\"] + selectedProduct[\"type\"];\r\n        }\r\n        if (['item_quantity'].includes(fieldName)) {\r\n            errors.note = \"\";\r\n        }\r\n\r\n        this.setState({ selectedProduct, stock, stockData, errors }, () => {\r\n            // this.checkValidity();\r\n            console.log(this.state)\r\n        });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        // event.preventDefault();\r\n        let { selectedProduct } = this.state;\r\n        // let { userDetails } = this.props;\r\n        let cart = {\r\n            \"item_sku\": selectedProduct.item_sku + selectedProduct[\"pillowCover\"],\r\n            \"item_dimensions\": selectedProduct.item_dimensions,\r\n            \"item_quantity\": selectedProduct.item_quantity,\r\n            \"item_price\": 0,\r\n            \"order_type\": 5\r\n        }\r\n        let payload = {\r\n            \"order_id\": selectedProduct.order_id,\r\n            // \"created_by_id\": userDetails.login_id,\r\n            // \"created_by\": \"OPS\",\r\n            \"carts\": [cart]\r\n        }\r\n        this.props.missingItemAction(payload);\r\n        // console.log(\"payload\", payload)\r\n\r\n    }\r\n\r\n    render() {\r\n        let { selectedProduct, errors } = this.state;\r\n        let title = \"Missing Items\";\r\n\r\n        return (\r\n            <div className=\"missing-items-container\">\r\n                <PageHeader\r\n                    header={title}\r\n                />\r\n                <div className=\"missing-items-content\">\r\n                    {errors.note && <CustomAlert type={\"error\"} message={errors.note} toggle={true} callbackOnClose={() => this.setState({ errors: { ...errors, note: \"\" } })} />}\r\n                    {/* {this.state.stockData === 'valid' && <div className=\"field-container\">\r\n                        <div className=\"label\">Order ID :</div>\r\n                        <div className=\"dimension-input-container\">\r\n                            <input name=\"order_id\"\r\n                                type=\"text\"\r\n                                className=\"input-field\"\r\n                                onChange={this.handleChange}\r\n                                value={selectedProduct.order_id}\r\n                                placeholder=\"Order ID\" />\r\n                        </div>\r\n                        {errors.order_id && <div className=\"error-text\">{errors.order_id}</div>}\r\n                    </div>\r\n                    } */}\r\n\r\n                    <div className=\"field-container\">\r\n                        <div className=\"label\">Choose Missing Item :</div>\r\n                        <select\r\n                            name=\"product\"\r\n                            className=\"custom-dropdown\"\r\n                            value={selectedProduct.product}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <option value=\"\">Select Missing Item</option>\r\n                            {productDetails.map((product) =>\r\n                                <option key={product.sku} value={product.sku}>{product.label}</option>)}\r\n                        </select>\r\n                        {errors.product && <div className=\"error-text\">{errors.product}</div>}\r\n                    </div>\r\n\r\n                    {[\"WBSC\", \"WTNP\"].includes(selectedProduct[\"product\"]) &&\r\n                        <div className=\"field-container\">\r\n                            <div className=\"label\">Product SKU :</div>\r\n                            <select\r\n                                name=\"product\"\r\n                                className=\"custom-dropdown\"\r\n                                value={selectedProduct.product}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <option value=\"\">{selectedProduct.product}</option>\r\n                            </select>\r\n                            {/* {errors.product && <div className=\"error-text\">{errors.product}</div>} */}\r\n                        </div>\r\n                    }\r\n                    {(selectedProduct[\"dimension\"] ||\r\n                        (productsHas3Dimensions.includes(selectedProduct.product) ||\r\n                            productsHas2Dimensions.includes(selectedProduct.product))\r\n                    ) &&\r\n                        <div className=\"field-container\">\r\n                            <div className=\"label\">Customize Dimensions :</div>\r\n                            <div className=\"dimension-input-container\">\r\n                                <div className=\"input-field-container\">\r\n                                    <input name=\"length\" type=\"text\" className=\"input-field\" onChange={this.handleChange} value={selectedProduct.length} placeholder=\"L\" />\r\n                                    {errors.length && <div className=\"error-text\">{errors.length}</div>}\r\n                                </div>\r\n                                <div className=\"input-field-container\">\r\n                                    <input name=\"breath\" type=\"text\" className=\"input-field\" onChange={this.handleChange} value={selectedProduct.breath} placeholder=\"B\" />\r\n                                    {errors.breath && <div className=\"error-text\">{errors.breath}</div>}\r\n                                </div>\r\n                                {productsHas3Dimensions.includes(selectedProduct.product) &&\r\n                                    <div className=\"input-field-container\">\r\n                                        <input name=\"height\" type=\"text\" className=\"input-field\" onChange={this.handleChange} value={selectedProduct.height} placeholder=\"H\" />\r\n                                        {errors.height && <div className=\"error-text\">{errors.height}</div>}\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {selectedProduct[\"product\"] === \"WSP\" &&\r\n                        <div className=\"field-container\">\r\n                            <div className=\"label\">Type :</div>\r\n                            <select\r\n                                name=\"type\"\r\n                                className=\"custom-dropdown\"\r\n                                value={selectedProduct.type}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <option value=\"\">Select Type</option>\r\n                                {sleepingPillow.map((item) =>\r\n                                    <option key={`type-${item.key}`} value={item.key}>{item.label}</option>)}\r\n                            </select>\r\n                            {errors.type && <div className=\"error-text\">{errors.type}</div>}\r\n                        </div>\r\n                    }\r\n\r\n                    {availableModels[selectedProduct[\"product\"]] &&\r\n                        <div className=\"field-container\">\r\n                            <div className=\"label\">Modal :</div>\r\n                            <select\r\n                                name=\"modal\"\r\n                                className=\"custom-dropdown\"\r\n                                value={selectedProduct.modal}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <option value=\"\">Select Modal</option>\r\n                                {availableModels[selectedProduct[\"product\"]].map((item) =>\r\n                                    <option key={`modal-${item.key}`} value={item.key}>{item.label}</option>)}\r\n                            </select>\r\n                            {errors.modal && <div className=\"error-text\">{errors.modal}</div>}\r\n                        </div>\r\n                    }\r\n\r\n                    {[\"WMP\", \"WFOCOVER\"].includes(selectedProduct[\"product\"]) &&\r\n                        <div className=\"field-container\">\r\n                            <div className=\"label\">Color :</div>\r\n                            <select\r\n                                name=\"modal\"\r\n                                className=\"custom-dropdown\"\r\n                                value={selectedProduct.modal}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                {availableColors[selectedProduct[\"product\"]].map((item) =>\r\n                                    <option key={`modal-${item.key}`} value={item.key}>{item.label}</option>)}\r\n                            </select>\r\n                            {errors.modal && <div className=\"error-text\">{errors.modal}</div>}\r\n\r\n                        </div>\r\n                    }\r\n\r\n                    {productTypes[selectedProduct[\"product\"]] &&\r\n                        <div className=\"field-container\">\r\n                            <div className=\"label\">Modal :</div>\r\n                            <select\r\n                                name=\"modal\"\r\n                                className=\"custom-dropdown\"\r\n                                value={selectedProduct.modal}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <option value=\"\">Select Modal</option>\r\n                                {productTypes[selectedProduct[\"product\"]].types.map((item) =>\r\n                                    <option key={`modal-${item.key}`} value={item.key}>{item.label}</option>)}\r\n                            </select>\r\n                            {errors.modal && <div className=\"error-text\">{errors.modal}</div>}\r\n                        </div>\r\n                    }\r\n\r\n                    {[\"WFB\"].includes(selectedProduct[\"product\"]) &&\r\n                        <div className=\"field-container\">\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        name=\"pillowCover\"\r\n                                        onChange={this.handleChange}\r\n                                        checked={selectedProduct.pillowCover === \"-COVER\"}\r\n                                        value={\"-COVER\"}\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Pillow Cover\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {this.state.stockData === 'valid' && this.state.stock && <div className=\"stock-details\">\r\n                        <div className=\"field-container\"><b className=\"label\">Stock :</b> {this.state.stock.stock} items</div>\r\n                        {/* <div><b className=\"label\">MRP:</b> {this.state.stock.item_price.mrp}</div> */}\r\n                        {/* <div><b className=\"label\">Price:</b> {this.state.stock.item_price.price} (per Unit)</div> */}\r\n                    </div>}\r\n\r\n                    {this.state.stockData === 'valid' && <div className=\"field-container\">\r\n                        <div className=\"label\">Quantity :</div>\r\n                        <select\r\n                            name=\"item_quantity\"\r\n                            className=\"custom-dropdown\"\r\n                            value={selectedProduct.item_quantity}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <option value=\"\">Select Quantity</option>\r\n                            {this.getQuantityOptions()}\r\n                        </select>\r\n                        {errors.item_quantity && <div className=\"error-text\">{errors.item_quantity}</div>}\r\n                    </div>\r\n                    }\r\n\r\n                    {this.state.stockData === 'valid' && <div className=\"field-container\">\r\n                        <div className=\"label\">Order ID :</div>\r\n                        <div className=\"dimension-input-container\">\r\n                            <input name=\"order_id\"\r\n                                type=\"text\"\r\n                                className=\"input-field\"\r\n                                onChange={this.handleChange}\r\n                                value={selectedProduct.order_id}\r\n                                placeholder=\"Order ID\" />\r\n                        </div>\r\n                        {errors.order_id && <div className=\"error-text\">{errors.order_id}</div>}\r\n                    </div>\r\n                    }\r\n                    <div className=\"add-product-footer\">\r\n                        {this.state.stockData !== 'loading' ?\r\n                            <Button\r\n                                label={this.state.stockData === \"notvalid\" ? \"Check Product Availability\" : \"Create Missing Items\"}\r\n                                onClick={this.checkValidity}\r\n                            // disabled={!this.state.enableSubmit}\r\n                            />\r\n                            : <CircularProgress className=\"progress\" />\r\n                        }\r\n                    </div>\r\n                    <div className=\"note\"><b><u>NOTE</u> :</b>\r\n                        <div className=\"note-text\">* <span className=\"break-word\">Here, Items will be created with amount zero.</span></div>\r\n                        <div className=\"note-text\">Ex: <span className=\"break-word\">If in case, the logistic partner has lost that item and payment type is COD, this is not recommended to create as missing item here.</span></div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        userDetails: state.userDetails,\r\n        resetData: state.missingItemDetails.onCreateItemSuccess\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        missingItemAction,\r\n        resetMissingItem\r\n    }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MissingItems);"],"sourceRoot":""}