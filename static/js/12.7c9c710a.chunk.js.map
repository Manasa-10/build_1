{"version":3,"sources":["containers/Dashboard/components/Timestamp/index.js","components/PaginationComponent/index.js","../node_modules/@material-ui/core/esm/utils/useControlled.js","config/constants.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","config/platforms.js","config/helpdeskTicketStatuses.js","containers/Dashboard/components/CustomerComments/index.js","config/holdReasons.js","containers/OcModule/Component/TableOC.js","containers/OcModule/index.js"],"names":["timestampFilter","filter","row","_original","id","String","getDateTime","toLocaleLowerCase","includes","value","Timestamp","props","PaginationComponent","Component","render","this","offset","limit","total","onPrevClick","onNextClick","dropDownValues","onLimitChange","filtered","filteredData","className","disabled","onClick","aria-hidden","Array","isArray","length","onChange","map","option","index","key","defaultProps","useControlled","_ref","controlled","defaultProp","default","isControlled","name","React","undefined","current","_React$useState","valueState","setValue","newValue","paginationDropdownValues","paginationDefaultSize","_slicedToArray","arr","i","arrayWithHoles","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","_s","_i","next","done","push","err","nonIterableRest","_arrayWithHoles","_nonIterableRest","TypeError","platforms","label","slug","role","getPlatformsByRole","platform","helpDeskTickets","isActive","CustomerCommentsDetails","rowInfo","original","tickets","ticket","Tooltip","title","placement","arrow","href","process","target","without","rel","status","getHelpdeskTicketStatusById","reasons","getHoldReasons","TableOC","constructor","super","resetTable","setState","enableSubmit","bulkOrder","isUpdatingBulk","paymentTrackId","orderStatusData","currentStatusData","urgentDelivery","editingCartIndex","errors","orm_order_status","hold_reason_id","status_comments","status_date","resetPagination","data","count","event","Number","handleClick","type","state","activePlatform","ActiveTab","userRole","cetId","userDetails","getAllOrdersByRole","getAllOrdersByRoleByCet","handlechangeCurrentStatus","Check","window","confirm","console","log","fieldName","fieldValue","affiliate_id","order_random_id","submitCurrentStatus","orderStatusFormatter","requestDataForComments","order_id","cart_id","possibleStatusUserCanUpdate","order_confirmed_on","getHoldPossibleStatusWithOrderConfirmed","getPossibleStatusCanBeUpdated","getAllHoldReasons","getShipmentStatus","getLockedStatus","getOrderStatusById","preferred_shipping","shippingPartnerDetail","preferred_warehouse","wareHouseDetail","invoice_detail","invoiceDetails","docket_number","style","paddingBottom","getTrackOrderDetails","shipping_id","estimated_delivery_timestamp","display","paddingLeft","getDate","is_instock","color","fontSize","handleOrderStatusChange","reason","rows","cols","placeholder","status_detail","Button","handleSubmitOrderStatus","keys","getCommentsByOrder","submitOrderStatus","handleChangeUrgentDelivery","checked","updateUrgentDeliveryStatus","ShipPartner","shippingPartner","getShippingPartnerId","warehouse","wareHouse","getWareHouseById","handleOrderIdChange","searchOrderId","searchByOrderId","preventDefault","serachByOrderId","componentWillReceiveProps","refreshOrders","currentRole","results","componentWillUnmount","orderIdSearch","tableData","getNoOrders","filterable","minRows","pageSize","NoDataComponent","defaultFilterMethod","columns","Header","width","Cell","accessor","show","affiliateIdFormatter","filterMethod","affiliateIdFilter","minWidth","OrderId","activeTab","updateCustomer","orderIdColumnFilter","CartDetails","allOrders","getMoreModifiedHistoryByOrder","cartDetailsFilter","CustomerDetails","clickToCall","showPopup","customerDetailFilter","OCModule","changePlatform","changeTab","tabs","history","resetOrders","getPlatformTabs","tab","orders","Badge","badgeContent","getTabs","componentDidMount","getStatusTabsByRole","newPlatform","iterationPlatform","newTab","iterationtab","platformSlug","tabSlug","PageHeader","header","clickToCallAction","TrackOrderDetails","submitPaymentTrackId","UrgentDeliveryStatus","connect","ownProps","general","ordersData","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/12.7c9c710a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { getDateTime } from '../../../../config/time';\r\n\r\nconst Timestamp = (props) => {\r\n    if (props.value) {\r\n        return <div>{getDateTime(props.value)}</div>\r\n    }\r\n    return \"\"\r\n}\r\n\r\nexport const timestampFilter = (filter, row) => {\r\n    return row._original[filter.id] && String(getDateTime(String(row._original[filter.id]))).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nexport default Timestamp;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nclass PaginationComponent extends Component {\r\n    render() {\r\n        let { offset, limit, total, onPrevClick, onNextClick, dropDownValues, onLimitChange, filtered, filteredData } = this.props;\r\n        return (\r\n            <div className=\"pagination-container\">\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset === 0 ? true : false}\r\n                    onClick={() => onPrevClick(\"prev\")}>\r\n                    <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <div className=\"pagination-text\">{offset} to {offset + limit <= total ? offset + limit : total} of {total}</div>\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset + limit >= total ? true : false}\r\n                    onClick={() => onNextClick(\"next\")}>\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                {Array.isArray(dropDownValues) && dropDownValues.length > 0 && <select className=\"custom-dropdown\" onChange={onLimitChange} value={limit}>\r\n                    {dropDownValues.map((option, index) => <option key={index} value={option}>{option}</option>)}\r\n                </select>}\r\n\r\n                {Array.isArray(filtered) &&\r\n                    filtered.length > 0 &&\r\n                    Array.isArray(filteredData) &&\r\n                    filteredData.length > 0 &&\r\n                    <div className=\"matched-records-data\"><b>Matched Records :</b> {filteredData.length}</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPaginationComponent.defaultProps = {\r\n    offset: 0,\r\n    limit: 0,\r\n    total: 0,\r\n    dropDownValues: []\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n    offset: PropTypes.number.isRequired,\r\n    limit: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    onPrevClick: PropTypes.func.isRequired,\r\n    onNextClick: PropTypes.func.isRequired,\r\n    dropDownValues: PropTypes.array,\r\n    onLimitChange: PropTypes.func\r\n}\r\n\r\nexport default PaginationComponent;","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default value of an uncontrolled \".concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","export const paginationDropdownValues = [10, 25, 50, 75, 100];\r\nexport const paginationDefaultSize = 25;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export const platforms = [{\r\n    label: \"Wakefit\",\r\n    slug: \"wakefit\",\r\n    role: [\"OC\", \"RT\", \"C\"]\r\n}, {\r\n    label: \"Affiliate\",\r\n    slug: \"affiliate\",\r\n    role: [\"OC\", \"RT\", \"C\"]\r\n}, {\r\n    label: \"Affiliate FBA\",\r\n    slug: \"affiliate_fba\",\r\n    role: [\"RT\"]\r\n}];\r\n\r\nexport const getPlatforms = () => {\r\n    return platforms;\r\n}\r\n\r\nexport const getPlatformsByRole = (role) => {\r\n    return platforms.filter((platform) => platform.role.includes(role));\r\n}","export const helpDeskTickets = [{\r\n    id: 1,\r\n    label: \"Open\",\r\n    isActive: 1\r\n}, {\r\n    id: 2,\r\n    label: \"Re-Open\",\r\n    isActive: 1\r\n}, {\r\n    id: 3,\r\n    label: \"Resolved\",\r\n    isActive: 1\r\n}, {\r\n    id: 4,\r\n    label: \"Closed\",\r\n    isActive: 1\r\n}, {\r\n    id: 5,\r\n    label: \"Duplicate\",\r\n    isActive: 1\r\n}, {\r\n    id: 6,\r\n    label: \"Inprogress\",\r\n    isActive: 1\r\n}, {\r\n    id: 7,\r\n    label: \"Pending\",\r\n    isActive: 1\r\n}, {\r\n    id: 8,\r\n    label: \"Internal\",\r\n    isActive: 1\r\n}];\r\n\r\nexport const getHelpdeskTicketStatuses = () => {\r\n    return helpDeskTickets;\r\n}\r\n\r\nexport const getHelpdeskTicketStatusById = (id) => {\r\n    let status = helpDeskTickets.filter(status => status.id === id);\r\n    status = status.length > 0 ? status[0] : {};\r\n    return status;\r\n}","import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { getHelpdeskTicketStatusById } from '../../../../config/helpdeskTicketStatuses';\r\nconst helpdeskUrl = process.env.REACT_APP_HELPDESK_URL;\r\n\r\nexport const CustomerCommentsDetails = (props) => {\r\n    let rowInfo = props.original;\r\n    return (\r\n        <div>\r\n            <div className=\"break-word comment-color\">{props.value}</div>\r\n            <div className=\"tickets-container\">\r\n                {rowInfo.tickets && Array.isArray(rowInfo.tickets) && rowInfo.tickets.map((ticket, index) =>\r\n                    <Tooltip title={ticket.title || \"\"} placement=\"top\" arrow>\r\n                        <a\r\n                            className=\"custom-badge\"\r\n                            key={`ticket-${index}-id-${ticket.id}`}\r\n                            href={`${helpdeskUrl}helpdesk/tickets/${ticket.id}`}\r\n                            target=\"_blank\"\r\n                            without rel=\"noopener noreferrer\"\r\n                        >Wakefit - {ticket.id} - {getHelpdeskTicketStatusById(ticket.status).label}</a>\r\n                    </Tooltip>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}","export const reasons = [{\r\n    id: 1,\r\n    label: \"Awaiting Confirm dimensions from CX\",\r\n    isActive: true\r\n}, {\r\n    id: 2,\r\n    label: \"Due to no communication with COD customer in 3 days\",\r\n    isActive: true\r\n}, {\r\n    id: 3,\r\n    label: \"Customer number is incorrect\",\r\n    isActive: true\r\n}, {\r\n    id: 4,\r\n    label: \"Future delivery\",\r\n    isActive: true\r\n}, {\r\n    id: 5,\r\n    label: \"Service is not available on given pin code\",\r\n    isActive: true\r\n}, {\r\n    id: 6,\r\n    label: \"Others\",\r\n    isActive: true\r\n}, {\r\n    id: 7,\r\n    label: \"COD amount is more than 20K\",\r\n    isActive: true\r\n}, {\r\n    id: 8,\r\n    label: \"Auto - Cancel To Hold\",\r\n    isActive: true\r\n}, {\r\n    id: 9,\r\n    label: \"Item Price is Zero\",\r\n    isActive: true\r\n}];\r\n\r\nexport const getHoldReasons = () => reasons;\r\n\r\nexport const getHoldReasonById = (id) => {\r\n    let reason = reasons.filter(reason => reason.id === id);\r\n    return reason.length > 0 ? reason[0] : {};\r\n}\r\n","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport './style.scss';\r\n\r\n// import { getCurrentStatus } from '../../../config/CurrentStatus';\r\nimport { getShippingPartnerId, getWareHouseById } from '../../../config/ShippingPartner';\r\n\r\nimport Button from '../../../components/Button';\r\nimport PaginationComponent from '../../../components/PaginationComponent';\r\n\r\nimport { getPossibleStatusCanBeUpdated, getOrderStatusById, getHoldPossibleStatusWithOrderConfirmed } from '../../../config/orderStatus';\r\nimport { getDate } from '../../../config/time';\r\nimport { getHoldReasons } from '../../../config/holdReasons';\r\nimport Timestamp, { timestampFilter } from '../../Dashboard/components/Timestamp';\r\nimport CartDetails, { cartDetailsFilter } from '../../Dashboard/components/CartDetails';\r\nimport CustomerDetails, { customerDetailFilter } from '../../Dashboard/components/CustomerDetails';\r\nimport affiliateIdFormatter, { affiliateIdFilter } from '../../Dashboard/components/AffiliateId';\r\nimport OrderId, { orderIdColumnFilter } from '../../Dashboard/components/OrderId';\r\nimport { CustomerCommentsDetails } from '../../Dashboard/components/CustomerComments';\r\nimport { getShipmentStatus, getLockedStatus } from '../../../utilities/common';\r\nimport { paginationDropdownValues, paginationDefaultSize } from '../../../config/constants';\r\n\r\nclass TableOC extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // For Pagination\r\n            offset: 0,\r\n            limit: paginationDefaultSize,\r\n            total: 0,\r\n\r\n            enableSubmit: false,\r\n            bulkOrder: [],\r\n            urgentDelivery: {},\r\n            isUpdatingBulk: false,\r\n            paymentTrackId: {},\r\n            orderStatusData: {},\r\n            currentStatusData: {},\r\n            searchOrderId: '',\r\n            editingCartIndex: -1,\r\n            errors: {\r\n                orm_order_status: \"\",\r\n                hold_reason_id: \"\",\r\n                status_comments: \"\",\r\n                status_date: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    resetTable = () => {\r\n        this.setState({\r\n            // offset: 1,\r\n            // limit: paginationDefaultSize,\r\n            // total: this.props.data.count || 0,\r\n\r\n            enableSubmit: false,\r\n            bulkOrder: [],\r\n            isUpdatingBulk: false,\r\n            paymentTrackId: {},\r\n            orderStatusData: {},\r\n            currentStatusData: {},\r\n            urgentDelivery: {},\r\n            // searchOrderId: '',\r\n            editingCartIndex: -1,\r\n            errors: {\r\n                orm_order_status: \"\",\r\n                hold_reason_id: \"\",\r\n                status_comments: \"\",\r\n                status_date: \"\"\r\n            }\r\n        });\r\n    }\r\n\r\n    resetPagination = () => {\r\n        this.setState({\r\n            offset: 0,\r\n            limit: paginationDefaultSize,\r\n            total: this.props.data.count || 0,\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (((this.props.activePlatform && this.props.activePlatform.slug !== props.activePlatform.slug) && (this.props.ActiveTab && this.props.ActiveTab.id !== props.ActiveTab.id)) || props.refreshOrders) {\r\n            console.log(\"Reseting...\");\r\n            this.resetTable();\r\n            !this.props.cetId && this.props.activePlatform && this.props.ActiveTab &&\r\n                this.props.getAllOrdersByRole(props.activePlatform.slug, props.ActiveTab.slug, this.props.userRole, this.state.limit, this.state.offset);\r\n            this.props.cetId &&\r\n                this.props.getAllOrdersByRoleByCet(this.props.cetId, props.activePlatform.slug, props.ActiveTab.slug, this.props.userDetails.role.includes(\"TEAML\") ? \"TEAML\" : this.props.currentRole, this.state.limit, this.state.offset);\r\n        } else if ((this.props.activePlatform && this.props.activePlatform.slug !== props.activePlatform.slug) || (this.props.ActiveTab && this.props.ActiveTab.id !== props.ActiveTab.id)) {\r\n            this.resetPagination();\r\n            this.resetTable();\r\n        }\r\n        if (props.data.results) {\r\n            this.setState({\r\n                total: props.data.count\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.resetTable();\r\n    }\r\n\r\n    onLimitChange = (event) => {\r\n        this.setState({ limit: Number(event.target.value) }, () => this.handleClick(\"reset\"));\r\n    }\r\n\r\n    // handleClick = (type) => {\r\n    //     let { limit, offset, total } = this.state;\r\n    //     let { userRole } = this.props;\r\n\r\n    //     this.setState({\r\n    //         offset: type === \"next\" ?\r\n    //             offset + limit < total ? offset + limit : offset\r\n    //             :\r\n    //             type === \"prev\" && offset - limit >= 0 ? offset - limit : 0\r\n    //     }, () => {\r\n    //         let { limit, offset } = this.state;\r\n    //         console.log(this.props.activePlatform.slug, this.props.ActiveTab.slug, userRole, limit, offset, this.state, this.props);\r\n    //         this.props.getAllOrdersByRole(this.props.activePlatform.slug, this.props.ActiveTab.slug, userRole, limit, offset);\r\n    //     });\r\n    // }\r\n\r\n    handleClick = (type) => {\r\n        let { limit, offset, total } = this.state;\r\n        let { activePlatform, ActiveTab, userRole, cetId, userDetails } = this.props;\r\n        this.setState({\r\n            offset: type === \"next\" ?\r\n                offset + limit < total ? offset + limit : offset\r\n                :\r\n                type === \"prev\" && offset - limit >= 0 ? offset - limit : 0\r\n        }, () => {\r\n            let { limit, offset } = this.state;\r\n            // console.log(this.props.activePlatform.slug, this.props.ActiveTab.slug, userRole, limit, offset, this.state, this.props);\r\n            // this.props.getAllOrdersByRole(this.props.activePlatform.slug, this.props.ActiveTab.slug, userRole, limit, offset);\r\n            !cetId && this.props.getAllOrdersByRole(activePlatform.slug, ActiveTab.slug, userRole, limit, offset);\r\n            cetId && this.props.getAllOrdersByRoleByCet(cetId, activePlatform.slug, ActiveTab.slug, userDetails.role.includes(\"TEAML\") ? \"TEAML\" : userRole, limit, offset);\r\n        });\r\n    }\r\n\r\n    // CurrentStatusFormatter = (props) => {\r\n    //     let { currentStatusData } = this.state;\r\n    //     let row = props.original;\r\n    //     let currentStatuses = getCurrentStatus();\r\n    //     return <div>\r\n    //         <div>\r\n    //             <select\r\n    //                 className=\"change-order-dropdown\"\r\n    //                 name=\"current_status\"\r\n    //                 value={(currentStatusData.editing === props.index && currentStatusData.current_status) || row.current_status}\r\n    //                 onChange={(event) => this.handlechangeCurrentStatus(event, props)}\r\n    //             >\r\n    //                 <option key={0} value={0}>Add Current Status</option>\r\n    //                 {currentStatuses.map((status, index) => {\r\n    //                     return <option key={index} value={status.id}>{status.label}</option>\r\n    //                 })}\r\n    //             </select>\r\n    //         </div>\r\n    //     </div>\r\n    // }\r\n\r\n    handlechangeCurrentStatus = (event, rowInfo) => {\r\n        let Check = window.confirm(\"Are you sure want to change the status?\");\r\n        console.log(Check);\r\n        if (Check) {\r\n            let fieldName = event.target.name;\r\n            let fieldValue = event.target.value;\r\n            let { currentStatusData } = this.state;\r\n            currentStatusData[fieldName] = fieldValue;\r\n            currentStatusData[\"affiliate_id\"] = rowInfo.original.affiliate_id;\r\n            currentStatusData[\"order_random_id\"] = rowInfo.original.order_random_id;\r\n            currentStatusData[\"editing\"] = rowInfo.index;\r\n            this.setState({ currentStatusData }, () =>\r\n                fieldValue && this.state.currentStatusData &&\r\n                this.props.submitCurrentStatus(this.props.userRole, this.state.currentStatusData));\r\n        }\r\n    }\r\n    orderStatusFormatter = (props) => {\r\n        // let { userDetails } = this.props;\r\n        let {\r\n            orderStatusData,\r\n            errors,\r\n            // urgentDelivery\r\n        } = this.state;\r\n        let row = props.original;\r\n        // let today = getTodayDate();\r\n\r\n        let requestDataForComments = {\r\n            affiliate_id: row.affiliate_id,\r\n            order_id: row.order_random_id,\r\n            cart_id: row.id\r\n        };\r\n\r\n        let possibleStatusUserCanUpdate = (Number(row.orm_order_status) === 14 && row.order_confirmed_on) ?\r\n            getHoldPossibleStatusWithOrderConfirmed(row.orm_order_status) :\r\n            getPossibleStatusCanBeUpdated(row.orm_order_status);\r\n        let getAllHoldReasons = getHoldReasons();\r\n        // console.log(possibleStatusUserCanUpdate, getAllHoldReasons)\r\n\r\n        // let is_urgent_delivery = (urgentDelivery.index === props.index && urgentDelivery.is_urgent_delivery ? true : false) ||\r\n        //     (urgentDelivery.index !== props.index && row.is_urgent_delivery ? true : false)\r\n\r\n        return (this.props.ActiveTab ? <div>\r\n            {getShipmentStatus(row)}\r\n\r\n            {getLockedStatus(row)}\r\n\r\n            {(row.orm_order_status === 5 || row.orm_order_status === 6) ?\r\n                <div className=\"orderstatus\">\r\n                    {/* <div>{this.props.ActiveTab.label}</div> */}\r\n                    <div>{row.orm_order_status && getOrderStatusById(row.orm_order_status).label}</div>\r\n\r\n                    {this.props.activePlatform.slug === 'wakefit' && (\r\n                        (row.orm_order_status === 5 || row.orm_order_status === 6) && row.preferred_shipping !== 0 &&\r\n                        <div><span className=\"bold-text\">Shipping Partner : </span>{row.preferred_shipping &&\r\n                            this.shippingPartnerDetail(row.preferred_shipping)}</div>)\r\n                    }\r\n\r\n                    {this.props.activePlatform.slug === 'wakefit' &&\r\n                        ((row.orm_order_status === 5 || row.orm_order_status === 6) && row.preferred_warehouse !== 0 &&\r\n                            <div><span className=\"bold-text\">Warehouse : </span>{this.wareHouseDetail(row.preferred_warehouse)}</div>)\r\n                    }\r\n\r\n                    {/* {(this.props.ActiveTab.slug === 'in-production' || this.props.ActiveTab.slug === 'invoiced') && */}\r\n                    {(row.orm_order_status === 5 || row.orm_order_status === 6) &&\r\n                        Array.isArray(row.invoice_detail) && row.invoice_detail.map((invoiceDetails, index) => {\r\n                            return <div key={`invoice-oc-${index}`}>\r\n                                {invoiceDetails.docket_number && <div>\r\n                                    <hr />\r\n                                    {invoiceDetails.docket_number && <div style={{ paddingBottom: \"5px\" }}><b>Docket Number:</b> {invoiceDetails.docket_number}</div>}\r\n                                    {/* {invoiceDetails.invoice_number && <div><b>Invoice Number:</b> {invoiceDetails.invoice_number}</div>} */}\r\n                                    {invoiceDetails.docket_number && <div\r\n                                        className=\"custom-badge\"\r\n                                        onClick={() => this.props.getTrackOrderDetails({\r\n                                            docket_number: invoiceDetails.docket_number,\r\n                                            shipping_id: row.preferred_shipping\r\n                                        })}\r\n                                    >Track Order</div>}\r\n                                </div>}\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n                :\r\n                <div className=\"status-formatter\">\r\n                    {row.estimated_delivery_timestamp &&\r\n                        <div style={{ display: \"flex\", paddingBottom: \"7px\" }}><b>EDD : </b>\r\n                            <div style={{ paddingLeft: \"7px\" }}>{getDate(row.estimated_delivery_timestamp)}</div>\r\n                        </div>\r\n                    }\r\n                    {/* {(this.props.ActiveTab.slug === 'new' ||\r\n                        this.props.ActiveTab.slug === 'confirmed' ||\r\n                        this.props.ActiveTab.slug === \"confirmed-with-customization\") &&\r\n                        <div className=\"custom-checkbox\">\r\n                            <label className=\"container\">Urgent Delivery\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"is_urgent_delivery\"\r\n                                    checked={is_urgent_delivery}\r\n                                    onChange={(event) => this.handleChangeUrgentDelivery(event, props)}\r\n                                />\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </div>\r\n                    } */}\r\n                    {row.is_instock !== 0 && (row.orm_order_status === 2 || row.orm_order_status === 3) &&\r\n                        <div style={{ paddingBottom: \"5px\", color: \"red\", fontSize: \"11px\" }}><b>Product Under Manufacturing</b></div>\r\n                    }\r\n                    <select\r\n                        className=\"change-order-dropdown\"\r\n                        name=\"orm_order_status\"\r\n                        value={(orderStatusData.index === props.index && orderStatusData.orm_order_status) || row.orm_order_status}\r\n                        onChange={(event) => this.handleOrderStatusChange(event, props)}\r\n                    >\r\n                        {possibleStatusUserCanUpdate.map((status, index) => <option key={index} value={status.id}>{status.label}</option>)}\r\n                    </select>\r\n                    {\r\n                        ((orderStatusData.index === props.index && orderStatusData.orm_order_status &&\r\n                            Number(orderStatusData.orm_order_status) === 14) ||\r\n                            (orderStatusData.index !== props.index && row.orm_order_status === 14)) &&\r\n                        <div className=\"hold-reason-dropdown\">\r\n                            <select\r\n                                className=\"change-order-dropdown\"\r\n                                name=\"hold_reason_id\"\r\n                                value={(orderStatusData.index === props.index && orderStatusData.hold_reason_id) || row.hold_reason_id}\r\n                                onChange={(event) => this.handleOrderStatusChange(event, props)}\r\n                            >\r\n                                <option value={0}>Select Hold Reason</option>\r\n                                {getAllHoldReasons.map((reason, index) => <option key={`HoldReason-${index}`} value={reason.id}>{reason.label}</option>)}\r\n                            </select>\r\n                            {orderStatusData.index === props.index &&\r\n                                errors.hold_reason_id &&\r\n                                <div className=\"hold-error\">{errors.hold_reason_id}</div>}\r\n                        </div>\r\n                    }\r\n                    {/* {(\r\n                        (orderStatusData.index === props.index &&\r\n                            orderStatusData.orm_order_status &&\r\n                            Number(orderStatusData.orm_order_status) === 14 &&\r\n                            orderStatusData.hold_reason_id &&\r\n                            Number(orderStatusData.hold_reason_id) === 4) ||\r\n                        (orderStatusData.index !== props.index && row.orm_order_status === 14 && row.hold_reason_id === 4)\r\n                    ) &&\r\n                        <div className=\"date-field\">\r\n                            <input\r\n                                name=\"future_date\"\r\n                                className=\"input-field\"\r\n                                type=\"date\"\r\n                                min={today}\r\n                                onChange={(event) => this.handleOrderStatusChange(event, props)}\r\n                                value={(orderStatusData.index === props.index && orderStatusData.future_date) || row.future_date}\r\n                            />\r\n                        </div>\r\n                    } */}\r\n                    <textarea\r\n                        name=\"status_comments\"\r\n                        className=\"input-field comments\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        placeholder=\"Comments\"\r\n                        onChange={(event) => this.handleOrderStatusChange(event, props)}\r\n                        value={(orderStatusData.index === props.index ? orderStatusData.status_comments : row.status_detail[\"status_comments\"] || \"\")}\r\n                    />\r\n                    <Button\r\n                        label=\"Update\"\r\n                        onClick={(event) => this.handleSubmitOrderStatus(event, props)}\r\n                        disabled={Object.keys(orderStatusData).length === 0 || orderStatusData.index !== props.index}\r\n                    />\r\n\r\n                    <div\r\n                        className=\"custom-badge\"\r\n                        onClick={() => this.props.getCommentsByOrder(requestDataForComments)}\r\n                    >Comments</div>\r\n                </div>}\r\n        </div> : '')\r\n    }\r\n\r\n    handleSubmitOrderStatus = (event, rowInfo) => {\r\n        let row = rowInfo.original;\r\n        let { userDetails } = this.props;\r\n        let { orderStatusData, errors } = this.state;\r\n        if (orderStatusData && Number(orderStatusData.orm_order_status) === 14 && (!orderStatusData.hold_reason_id || Number(orderStatusData.hold_reason_id) === 0)) {\r\n            errors[\"hold_reason_id\"] = \"Hold Reason is required!\";\r\n            this.setState({ errors });\r\n            return;\r\n        } else {\r\n            errors[\"hold_reason_id\"] = \"\";\r\n            let Check = window.confirm(\"Are you sure want to change Order Status?\");\r\n            if (Check) {\r\n                this.props.submitOrderStatus({\r\n                    \"role\": userDetails.role.includes(\"TEAML\") ? \"TEAML\" : this.props.userRole,\r\n                    \"orders\": [{\r\n                        \"order_id\": row.order_random_id,\r\n                        \"cart_id\": row.id,\r\n                        \"affiliate_id\": row.affiliate_id,\r\n                        \"orm_order_status\": row.orm_order_status,\r\n                        \"status_comments\": row.status_detail.status_comments || \"\",\r\n                        ...this.state.orderStatusData\r\n                    }]\r\n                });\r\n            } else {\r\n                this.setState({ orderStatusData: {}, errors });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeUrgentDelivery = (event, rowInfo) => {\r\n        let Check = window.confirm(\"Are you sure want to change?\");\r\n        if (Check) {\r\n            let { urgentDelivery } = this.state;\r\n            let fieldName = event.target.name;\r\n            let fieldValue = event.target.value;\r\n            urgentDelivery[fieldName] = fieldValue;\r\n\r\n            urgentDelivery[\"index\"] = rowInfo.index;\r\n            urgentDelivery[\"is_urgent_delivery\"] = event.target.checked ? 1 : 0;\r\n            urgentDelivery[\"cart_id\"] = rowInfo.original.id;\r\n            urgentDelivery[\"affiliate_id\"] = rowInfo.original.affiliate_id;\r\n\r\n            this.setState({ urgentDelivery },\r\n                () =>\r\n                    this.state.urgentDelivery &&\r\n                    this.props.updateUrgentDeliveryStatus(this.props.userRole, this.state.urgentDelivery));\r\n        }\r\n    }\r\n\r\n    handleOrderStatusChange = (event, rowInfo) => {\r\n        let { orderStatusData, errors } = this.state;\r\n        let fieldName = event.target.name;\r\n        let fieldValue = event.target.value;\r\n        if (orderStatusData.index === rowInfo.index) {\r\n            switch (fieldName) {\r\n                case \"hold_reason_id\":\r\n                    errors[\"hold_reason_id\"] = Number(fieldValue) === 0 ? \"Hold Reason is required!\" : \"\";\r\n                    orderStatusData[fieldName] = fieldValue\r\n                    break;\r\n\r\n                default:\r\n                    orderStatusData[fieldName] = fieldValue;\r\n                    break;\r\n            }\r\n            if (fieldName === \"orm_order_status\" && Number(rowInfo.original.orm_order_status) !== 14) {\r\n                orderStatusData[\"hold_reason_id\"] = 0;\r\n                errors[\"hold_reason_id\"] = \"\";\r\n            }\r\n        } else {\r\n            orderStatusData = {};\r\n            orderStatusData[\"index\"] = rowInfo.index;\r\n            orderStatusData[\"orm_order_status\"] = rowInfo.original.orm_order_status;\r\n            if (Number(rowInfo.original.orm_order_status) === 14) {\r\n                orderStatusData[\"hold_reason_id\"] = rowInfo.original.hold_reason_id;\r\n            }\r\n            orderStatusData[\"status_comments\"] = rowInfo.original.status_detail.status_comments;\r\n            switch (fieldName) {\r\n                default: orderStatusData[fieldName] = fieldValue;\r\n            }\r\n        }\r\n        this.setState({ orderStatusData, index: rowInfo.index, errors });\r\n    }\r\n\r\n    shippingPartnerDetail = (ShipPartner) => {\r\n        let shippingPartner = getShippingPartnerId(ShipPartner)\r\n        var Divstyle = {\r\n            display: 'inline'\r\n        };\r\n        return <div style={Divstyle}>{shippingPartner &&\r\n            shippingPartner.label}\r\n        </div>\r\n    }\r\n\r\n    wareHouseDetail = (warehouse) => {\r\n        let wareHouse = getWareHouseById(warehouse);\r\n        var Divstyle = {\r\n            display: 'inline'\r\n        };\r\n        return <div style={Divstyle}>{wareHouse &&\r\n            wareHouse.label}\r\n        </div>\r\n    }\r\n\r\n    handleOrderIdChange = (event) => {\r\n        this.setState({ searchOrderId: event.target.value });\r\n    }\r\n\r\n    searchByOrderId = (event) => {\r\n        event.preventDefault();\r\n        let { searchOrderId } = this.state;\r\n        let { activePlatform, userDetails, userRole } = this.props;\r\n        this.resetTable();\r\n        this.props.serachByOrderId(activePlatform.slug, searchOrderId, userDetails.role.includes(\"TEAML\") ? \"TEAML\" : userRole);\r\n    }\r\n\r\n    render() {\r\n        let { data, ActiveTab, activePlatform, orderIdSearch } = this.props;\r\n        let tableData = data.results || [];\r\n        // let totalRecords = data.count;\r\n        // let { bulkOrder } = this.state;\r\n        return (\r\n            <div className=\"oc-module-table1\">\r\n                <form className=\"search-box\">\r\n                    <input className=\"input-field\" placeholder=\"Order ID / Phone Number / [A] Phone Number \" onChange={this.handleOrderIdChange} />\r\n                    <Button\r\n                        label=\"Search\"\r\n                        type=\"submit\"\r\n                        disabled={!this.state.searchOrderId}\r\n                        onClick={this.searchByOrderId}\r\n                    />\r\n                </form>\r\n                {tableData.length === 0 ? this.props.getNoOrders() :\r\n                    <ReactTable\r\n                        data={tableData}\r\n                        filterable\r\n                        minRows={0}\r\n                        pageSize={999}\r\n                        PaginationComponent={() =>\r\n                            <PaginationComponent\r\n                                dropDownValues={paginationDropdownValues}\r\n                                onLimitChange={this.onLimitChange}\r\n                                offset={this.state.offset}\r\n                                total={this.state.total}\r\n                                limit={this.state.limit}\r\n                                onPrevClick={this.handleClick}\r\n                                onNextClick={this.handleClick}\r\n                            />\r\n                        }\r\n                        NoDataComponent={() => null}\r\n                        defaultFilterMethod={(filter, row) =>\r\n                            String(row[filter.id]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())}\r\n                        columns={[{\r\n                            Header: 'S.No',\r\n                            id: 'row',\r\n                            width: 50,\r\n                            filterable: false,\r\n                            Cell: (row) => <div>{row.index + 1}</div>\r\n                        }, {\r\n                            Header: 'Affiliate',\r\n                            width: 100,\r\n                            accessor: 'affiliate_id',\r\n                            show: activePlatform && activePlatform.slug === \"affiliate\",\r\n                            Cell: affiliateIdFormatter,\r\n                            filterMethod: affiliateIdFilter\r\n                        }, {\r\n                            Header: 'Order ID',\r\n                            accessor: 'order_random_id',\r\n                            minWidth: 225,\r\n                            Cell: (props) =>\r\n                                <OrderId\r\n                                    rowInfo={props}\r\n                                    userRole={this.props.userRole}\r\n                                    orderIdSearch={orderIdSearch}\r\n                                    activePlatform={this.props.activePlatform}\r\n                                    activeTab={this.props.ActiveTab}\r\n                                    userDetails={this.props.userDetails}\r\n                                    updateCustomer={this.props.updateCustomer}\r\n                                />,\r\n                            filterMethod: orderIdColumnFilter\r\n                        }, {\r\n                            Header: 'Cart Details',\r\n                            accessor: 'item_name',\r\n                            minWidth: 230,\r\n                            Cell: (props) =>\r\n                                <CartDetails\r\n                                    rowInfo={props}\r\n                                    allOrders={tableData}\r\n                                    userDetails={this.props.userDetails}\r\n                                    getMoreModifiedHistoryByOrder={this.props.getMoreModifiedHistoryByOrder}\r\n                                />,\r\n                            filterMethod: cartDetailsFilter\r\n                        }, {\r\n                            Header: 'User Details',\r\n                            accessor: 'customer_details',\r\n                            minWidth: 240,\r\n                            Cell: (props) =>\r\n                                <CustomerDetails\r\n                                    rowInfo={props}\r\n                                    userDetails={this.props.userDetails}\r\n                                    clickToCall={this.props.clickToCall}\r\n                                    showPopup={this.props.showPopup}\r\n                                    updateCustomer={this.props.updateCustomer}\r\n                                />,\r\n                            filterMethod: customerDetailFilter\r\n                        }, {\r\n                            Header: \"Customer Comments\",\r\n                            accessor: \"additional_comments\",\r\n                            width: 230,\r\n                            Cell: CustomerCommentsDetails\r\n                            // }, {\r\n                            //     Header: 'Current Status',\r\n                            //     accessor: 'current_status',\r\n                            //     minWidth: 210,\r\n                            //     show: !orderIdSearch && ActiveTab && (ActiveTab.slug === 'new'),\r\n                            //     Cell: (ActiveTab && activePlatform) && this.CurrentStatusFormatter,\r\n                            //     filterMethod: (filter, row) =>\r\n                            //         String(row[filter.id]).toLowerCase().includes(filter.value.toLowerCase()),\r\n                        }, {\r\n                            Header: 'Order Status',\r\n                            accessor: 'orm_order_status',\r\n                            minWidth: 235,\r\n                            Cell: (ActiveTab && activePlatform) && this.orderStatusFormatter,\r\n                            // filterMethod: this.orderStatusFilter\r\n                        }, {\r\n                            Header: 'Create Time Stamp',\r\n                            accessor: 'create_timestamp',\r\n                            minWidth: 175,\r\n                            Cell: Timestamp,\r\n                            filterMethod: timestampFilter\r\n                        }, {\r\n                            Header: 'Last Update Time',\r\n                            accessor: 'update_timestamp',\r\n                            minWidth: 175,\r\n                            Cell: Timestamp,\r\n                            filterMethod: timestampFilter\r\n                        }]}\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableOC;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport './style.scss';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport OCTable from './Component/TableOC';\r\nimport {\r\n    getAllOrdersByRole,\r\n    getAllOrdersByRoleByCet,\r\n    resetOrders,\r\n    clickToCallAction,\r\n    submitPaymentTrackId,\r\n    serachByOrderId,\r\n    getCommentsByOrder,\r\n    submitOrderStatus,\r\n    TrackOrderDetails\r\n} from '../Dashboard/action';\r\n\r\nimport { submitCurrentStatus, getMoreModifiedHistoryByOrder, UrgentDeliveryStatus } from './action';\r\nimport { getPlatformsByRole } from '../../config/platforms';\r\nimport { getStatusTabsByRole } from '../../config/orderStatus';\r\nimport { showPopup } from '../../components/Popup/action';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport { paginationDefaultSize } from '../../config/constants';\r\n\r\nconst currentRole = \"OC\";\r\n\r\nclass OCModule extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            platforms: [],\r\n            tabs: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(\"Something\",this.props);\r\n        let { platform, slug, cetId } = this.props;\r\n        let platforms = getPlatformsByRole(\"OC\");\r\n        let tabs = getStatusTabsByRole(currentRole);\r\n\r\n        let newPlatform = platforms.filter(iterationPlatform => iterationPlatform.slug === platform);\r\n\r\n        let newTab = tabs.filter(iterationtab => iterationtab.slug === slug);\r\n\r\n        if (cetId) {\r\n            if (newPlatform.length === 0 || newTab.length === 0) {\r\n                let platformSlug = newPlatform.length > 0 ?\r\n                    newPlatform[0].slug : platforms.length > 0 ?\r\n                        platforms[0].slug : \"\";\r\n\r\n                let tabSlug = newTab.length > 0 ?\r\n                    newTab[0].slug : tabs.length > 0 ?\r\n                        tabs[0].slug : \"\";\r\n\r\n                this.props.history.push(`/order-confirmation-team/${cetId}/${platformSlug}/${tabSlug}`);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            platforms,\r\n            tabs,\r\n            activePlatform: newPlatform[0] || platforms[0],\r\n            activeTab: newTab[0] || tabs[0]\r\n        }, () => this.changeTab(this.state.activeTab));\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.refreshOrders) {\r\n            console.log(\"Reload orders...\");\r\n            // let { cetId, userDetails } = this.props;\r\n            // let { activePlatform, activeTab } = this.state;\r\n            // !cetId && this.props.getAllOrdersByRole(activePlatform.slug, activeTab.slug, currentRole);\r\n            //   cetId && this.props.getAllOrdersByRoleByCet(cetId, activePlatform.slug, activeTab.slug, userDetails.role.includes(\"TEAML\") ? \"TEAML\" : currentRole);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetOrders();\r\n    }\r\n\r\n    changePlatform = (activePlatform) => {\r\n        this.setState({ activePlatform }, () => this.changeTab(this.state.tabs[0]));\r\n    }\r\n\r\n    changeTab = (activeTab) => {\r\n        let { platform, slug, cetId, userDetails } = this.props;\r\n        let { activePlatform } = this.state;\r\n        if (activePlatform.slug !== platform || activeTab.slug !== slug) {\r\n            if (cetId)\r\n                this.props.history.push(`/order-confirmation-team/${cetId}/${activePlatform.slug}/${activeTab.slug}`);\r\n            else\r\n                this.props.history.push(`/order-confirmation-team/${activePlatform.slug}/${activeTab.slug}`);\r\n        }\r\n        this.setState({ activeTab }, () => {\r\n            this.props.resetOrders();\r\n            !cetId && this.props.getAllOrdersByRole(this.state.activePlatform.slug, activeTab.slug, currentRole, paginationDefaultSize, 0);\r\n            cetId && this.props.getAllOrdersByRoleByCet(cetId, this.state.activePlatform.slug, activeTab.slug, userDetails.role.includes(\"TEAML\") ? \"TEAML\" : currentRole, paginationDefaultSize, 0);\r\n        });\r\n    }\r\n\r\n    getPlatformTabs = () =>\r\n        <div className=\"platform-tabs\">\r\n            {this.state.platforms.map((tab, index) =>\r\n                <div\r\n                    key={index}\r\n                    className={this.state.activePlatform && this.state.activePlatform.slug === tab.slug ? \"tab-invert pointer active\" : \"tab-invert pointer\"}\r\n                    onClick={() => this.changePlatform(tab)}\r\n                >\r\n                    {tab.label}\r\n                    {this.props.orders.count && this.props.orderIdSearch &&\r\n                        this.state.activePlatform && this.state.activePlatform.slug === tab.slug &&\r\n                        <Badge\r\n                            className=\"custom-badge search-badge\"\r\n                            color=\"secondary\"\r\n                            badgeContent={this.props.orders.count}></Badge>\r\n                    }\r\n                </div>)\r\n            }\r\n        </div>\r\n\r\n    getTabs = () =>\r\n        <div className=\"menu-container\">\r\n            {this.state.tabs.map((tab, index) =>\r\n                <div\r\n                    key={index}\r\n                    className={this.state.activeTab && this.state.activeTab.slug === tab.slug ? \"tab pointer active\" : \"tab pointer\"}\r\n                    onClick={() => this.changeTab(tab)}\r\n                >\r\n                    {tab.label}\r\n                </div>)\r\n            }\r\n        </div>\r\n\r\n    getNoOrders = () => <div className=\"no-orders\">There is No Orders, Please Try After Some Time...</div>\r\n\r\n    render() {\r\n        let { activePlatform, activeTab } = this.state;\r\n        let { orders, orderIdSearch } = this.props;\r\n        let title = `Order ${orderIdSearch ? \"Id Search\" : `List  ${activeTab && `- ${activeTab.label}`}`}`;\r\n        return (\r\n            <div className=\"ocmodule-container\">\r\n                <PageHeader\r\n                    header={title}\r\n                    count={orders && orders.count}\r\n                />\r\n                {this.getPlatformTabs()}\r\n                {!orderIdSearch && this.getTabs()}\r\n                {/* {this.getTabs()} */}\r\n                {orders ?\r\n                    <OCTable\r\n                        userRole={currentRole}\r\n                        cetId={this.props.cetId}\r\n                        orderIdSearch={orderIdSearch}\r\n                        getAllOrdersByRole={this.props.getAllOrdersByRole}\r\n                        getAllOrdersByRoleByCet={this.props.getAllOrdersByRoleByCet}\r\n                        activePlatform={activePlatform}\r\n                        ActiveTab={activeTab}\r\n                        data={orders}\r\n                        userDetails={this.props.userDetails}\r\n                        clickToCall={this.props.clickToCallAction}\r\n                        getCommentsByOrder={this.props.getCommentsByOrder}\r\n                        getTrackOrderDetails={this.props.TrackOrderDetails}\r\n                        updateCustomer={this.props.submitPaymentTrackId}\r\n                        submitCurrentStatus={this.props.submitCurrentStatus}\r\n                        updateUrgentDeliveryStatus={this.props.UrgentDeliveryStatus}\r\n                        submitOrderStatus={this.props.submitOrderStatus}\r\n                        serachByOrderId={this.props.serachByOrderId}\r\n                        getMoreModifiedHistoryByOrder={this.props.getMoreModifiedHistoryByOrder}\r\n                        showPopup={this.props.showPopup}\r\n                        refreshOrders={this.props.refreshOrders}\r\n                        getNoOrders={this.getNoOrders}\r\n                    /> :\r\n                    this.getNoOrders()\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        userDetails: state.userDetails,\r\n        refreshOrders: state.general.refreshOrders,\r\n        orders: state.general.ordersData,\r\n        orderIdSearch: state.general.orderIdSearch\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        getAllOrdersByRole,\r\n        getAllOrdersByRoleByCet,\r\n        resetOrders,\r\n        clickToCallAction,\r\n        getMoreModifiedHistoryByOrder,\r\n        submitPaymentTrackId,\r\n        submitCurrentStatus,\r\n        submitOrderStatus,\r\n        getCommentsByOrder,\r\n        UrgentDeliveryStatus,\r\n        serachByOrderId,\r\n        TrackOrderDetails,\r\n        showPopup\r\n    }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OCModule);\r\n"],"sourceRoot":""}