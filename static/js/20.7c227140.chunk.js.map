{"version":3,"sources":["containers/Dashboard/components/Timestamp/index.js","components/PaginationComponent/index.js","containers/ListAllCets/components/Table/index.js","containers/ListAllCets/action.js","containers/ListAllCets/index.js"],"names":["timestampFilter","filter","row","_original","id","String","getDateTime","toLocaleLowerCase","includes","value","Timestamp","props","PaginationComponent","Component","render","this","offset","limit","total","onPrevClick","onNextClick","dropDownValues","onLimitChange","filtered","filteredData","className","disabled","onClick","aria-hidden","Array","isArray","length","onChange","map","option","index","key","defaultProps","adminTeamLead","Table","React","state","frequencyChange","selectedCets","selectedPod","isUpdatingBulk","resetData","setState","resetPagination","data","count","userIdDetails","rowInfo","original","cet_uid","target","to","style","display","alignItems","name","type","event","handleChange","Number","inbound","checked","for","is_ticketing","is_escalation","userDetails","email","contact","cetRolesFormatter","is_oc_team","is_relationship_team","is_query_team","is_concerns_team","is_logistics_team","is_ops_team","is_qa_team","getPodLeader","pod_leader_email","noOfOrdersFormatter","wakefit_total_count","affiliate_total_count","ordersCountFormmatter","orders_count","wakefit","new","affiliate","confirmed","cancelled","hold","closed","followup","assignmentDetails","login_id","assign_frequency","Button","label","handleFrequencyUpdate","is_wf_cet","is_amazon_cet","is_pepperfry_cet","is_flipkart_cet","otherActions","is_active","activateOrDeactivateMember","selectMultipleCets","push","cet","cet_login_id","console","log","selectBulk","selectedCet","selectPod","updateCetsPodLeader","preventDefault","window","confirm","updateCetsPodLeaderAction","payload","uploadEditMemberData","fieldName","fieldValue","getNoDataComponent","handleClick","getAllCetMembersAction","componentDidMount","componentWillReceiveProps","refreshCetMembers","podLeaders","pod","results","filterable","minRows","pageSize","NoDataComponent","defaultFilterMethod","columns","Header","maxWidth","Cell","accessor","minWidth","show","filterMethod","width","dispatch","showLoader","getAllCetMembers","then","response","hideLoader","GET_ALL_CET_MEMBERS","catch","error","handleError","getAllPodLeadersAction","getAllPodLeaders","GET_ALL_POD_LEADERS","UPDATE_MEMBERS_POD_LEADERS","updateCetsPodLeaderSuccess","toast","success","message","editCetMemberAction","editCetMember","EDIT_CET_MEMBER_SUCCESS","editCetMemberuccess","resetAllCetsData","RESET_ALL_CETS_DATA","ImportSheets","componentWillMount","componentWillUnmount","cetsMembers","PageHeader","header","connect","ownProps","cetDetails","bindActionCreators"],"mappings":"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","file":"static/js/20.7c227140.chunk.js","sourcesContent":["import React from 'react';\r\nimport { getDateTime } from '../../../../config/time';\r\n\r\nconst Timestamp = (props) => {\r\n    if (props.value) {\r\n        return <div>{getDateTime(props.value)}</div>\r\n    }\r\n    return \"\"\r\n}\r\n\r\nexport const timestampFilter = (filter, row) => {\r\n    return row._original[filter.id] && String(getDateTime(String(row._original[filter.id]))).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nexport default Timestamp;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nclass PaginationComponent extends Component {\r\n    render() {\r\n        let { offset, limit, total, onPrevClick, onNextClick, dropDownValues, onLimitChange, filtered, filteredData } = this.props;\r\n        return (\r\n            <div className=\"pagination-container\">\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset === 0 ? true : false}\r\n                    onClick={() => onPrevClick(\"prev\")}>\r\n                    <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <div className=\"pagination-text\">{offset} to {offset + limit <= total ? offset + limit : total} of {total}</div>\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset + limit >= total ? true : false}\r\n                    onClick={() => onNextClick(\"next\")}>\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                {Array.isArray(dropDownValues) && dropDownValues.length > 0 && <select className=\"custom-dropdown\" onChange={onLimitChange} value={limit}>\r\n                    {dropDownValues.map((option, index) => <option key={index} value={option}>{option}</option>)}\r\n                </select>}\r\n\r\n                {Array.isArray(filtered) &&\r\n                    filtered.length > 0 &&\r\n                    Array.isArray(filteredData) &&\r\n                    filteredData.length > 0 &&\r\n                    <div className=\"matched-records-data\"><b>Matched Records :</b> {filteredData.length}</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPaginationComponent.defaultProps = {\r\n    offset: 0,\r\n    limit: 0,\r\n    total: 0,\r\n    dropDownValues: []\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n    offset: PropTypes.number.isRequired,\r\n    limit: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    onPrevClick: PropTypes.func.isRequired,\r\n    onNextClick: PropTypes.func.isRequired,\r\n    dropDownValues: PropTypes.array,\r\n    onLimitChange: PropTypes.func\r\n}\r\n\r\nexport default PaginationComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport './style.scss';\r\nimport Timestamp, { timestampFilter } from '../../../Dashboard/components/Timestamp';\r\nimport Button from '../../../../components/Button';\r\nimport PaginationComponent from '../../../../components/PaginationComponent';\r\n\r\nconst adminTeamLead = [\"support@wakefit.co\", \"vikata.kavi@wakefit.co\"];\r\nconst dropDownValues = [100, 150, 200, 250, 300, 400];\r\n\r\nclass Table extends React.Component {\r\n\r\n    state = {\r\n        frequencyChange: null,\r\n        selectedCets: [],\r\n        selectedPod: \"\",\r\n        isUpdatingBulk: false,\r\n        offset: 0,\r\n        limit: 100,\r\n        total: 0,\r\n\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            frequencyChange: null,\r\n            selectedCets: [],\r\n            selectedPod: \"\",\r\n            isUpdatingBulk: false\r\n        });\r\n    }\r\n\r\n    resetPagination = () => {\r\n        this.setState({\r\n            offset: 0,\r\n            limit: 100,\r\n            total: this.props.data.count || 0,\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.getAllCetMembersAction()\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        console.log(props)\r\n        if (props.refreshCetMembers) {\r\n            this.props.getAllCetMembersAction(this.state.limit, this.state.offset);\r\n            // this.resetPagination();\r\n            this.resetData();\r\n        }\r\n        if (props.data) {\r\n            this.setState({\r\n                total: props.data.count\r\n            });\r\n        }\r\n    }\r\n\r\n    userIdDetails = (props) => {\r\n        let rowInfo = props.original;\r\n        return <div key={`user-id-details-${props.index}`} className=\"user-id-details\">\r\n            <div>{rowInfo.cet_uid}</div>\r\n            <hr />\r\n            <div><Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/wakefit/new`}>Online CRM Orders</Link> </div>\r\n            <hr />\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"inbound\" type=\"checkbox\"\r\n                    id={`inbound-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.inbound) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.inbound) === 1}\r\n                />\r\n                <label for={`inbound-${props.index}`} className=\"custom-label\"> Allow Inbound Calls</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_ticketing\" type=\"checkbox\"\r\n                    id={`is_ticketing-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_ticketing) === 1 ? 0 : 1}\r\n                    checked={rowInfo.is_ticketing}\r\n                />\r\n                <label for={`is_ticketing-${props.index}`} className=\"custom-label\"> Helpdesk Tickets</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_escalation\" type=\"checkbox\"\r\n                    id={`is_escalation-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_escalation) === 1 ? 0 : 1}\r\n                    checked={rowInfo.is_escalation}\r\n                />\r\n                <label for={`is_escalation-${props.index}`} className=\"custom-label\"> Escaltion Team</label>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    userDetails = (props) => {\r\n        let rowInfo = props.original;\r\n        return <div className=\"cet-user-details\">\r\n            <div>{rowInfo.name}</div>\r\n            <div>{rowInfo.email}</div>\r\n            <div>{rowInfo.contact}</div>\r\n        </div>\r\n    }\r\n\r\n    cetRolesFormatter = (props) => {\r\n        let rowInfo = props.original;\r\n        return <div key={`additional-features-${props.index}`} className=\"cet-roles\">\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_oc_team\" type=\"checkbox\"\r\n                    id={`is_oc_team-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_oc_team) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.is_oc_team) === 1}\r\n                />\r\n                <label for={`is_oc_team-${props.index}`} className=\"custom-label\"> OC Team</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_relationship_team\" type=\"checkbox\"\r\n                    id={`is_relationship_team-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_relationship_team) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.is_relationship_team) === 1}\r\n                />\r\n                <label for={`is_relationship_team-${props.index}`} className=\"custom-label\"> Relation Team</label>\r\n            </div>\r\n\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_query_team\" type=\"checkbox\"\r\n                    id={`is_query_team-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_query_team) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.is_query_team) === 1}\r\n                />\r\n                <label for={`is_query_team-${props.index}`} className=\"custom-label\"> Queries Team</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_concerns_team\" type=\"checkbox\"\r\n                    id={`is_concerns_team-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_concerns_team) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.is_concerns_team) === 1}\r\n                />\r\n                <label for={`is_concerns_team-${props.index}`} className=\"custom-label\"> Concerns Team</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_logistics_team\" type=\"checkbox\"\r\n                    id={`is_logistics_team-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_logistics_team) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.is_logistics_team) === 1}\r\n                />\r\n                <label for={`is_logistics_team-${props.index}`} className=\"custom-label\"> Logistics Team</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_ops_team\" type=\"checkbox\"\r\n                    id={`is_ops_team-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_ops_team) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.is_ops_team) === 1}\r\n                />\r\n                <label for={`is_ops_team-${props.index}`} className=\"custom-label\"> OPs Team</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_qa_team\" type=\"checkbox\"\r\n                    id={`is_qa_team-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_qa_team) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.is_qa_team) === 1}\r\n                />\r\n                <label for={`is_qa_team-${props.index}`} className=\"custom-label\"> TQ Team</label>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    getPodLeader = (props) => {\r\n        let rowInfo = props.original;\r\n        return <div>\r\n            <div>{rowInfo.pod_leader_email}</div>\r\n        </div>\r\n    }\r\n\r\n    noOfOrdersFormatter = (props) => {\r\n        let rowInfo = props.original;\r\n        return (\r\n            <div className=\"no-of-orders-formmatter\">\r\n                {/* <b>Old Orders</b> : {rowInfo.old_orders}\r\n                <div className=\"note\">Prior to Mar 26, 2019</div> \r\n                <hr />*/}\r\n                <div className=\"note\">After Mar 26, 2019</div>\r\n                <b>New Orders</b> : {rowInfo.wakefit_total_count} / {rowInfo.affiliate_total_count}\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    ordersCountFormmatter = (props) => {\r\n        let rowInfo = props.original;\r\n        return <div className=\"orders-count-formmatter\">\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">New </div>\r\n                <div>: {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/wakefit/new`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit.new) || 0}</Link>} / {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/affiliate/new`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate.new) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Confirmed </div>\r\n                <div>: {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/wakefit/confirmed`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit.confirmed) || 0}</Link>} / {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/affiliate/confirmed`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate.confirmed) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Customization </div>\r\n                <div>: {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/wakefit/confirmed-with-customization`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit[\"confirmed-with-customization\"]) || 0}</Link>} / {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/affiliate/confirmed-with-customization`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate[\"confirmed-with-customization\"]) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Cancelled </div>\r\n                <div>: {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/wakefit/cancelled`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit.cancelled) || 0}</Link>} / {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/affiliate/cancelled`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate.cancelled) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Hold </div>\r\n                <div>: {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/wakefit/hold`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit.hold) || 0}</Link>} / {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/affiliate/hold`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate.hold) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Docketed </div>\r\n                <div>: {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/wakefit/in-production`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit[\"in-production\"]) || 0}</Link>} / {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/affiliate/in-production`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate[\"in-production\"]) || 0}</Link>}</div>\r\n            </div>\r\n            {/* <div className=\"flex-container\">\r\n                <div className=\"status-label\">Dispatch Call Due </div>\r\n                <div>: 0 / 0</div>\r\n                <div>: {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/wakefit/dispatch-call-due`}>{(rowInfo.orders_count &&rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit[\"dispatch-call-due\"]) || 0}</Link>} / {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/affiliate/dispatch-call-due`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate[\"dispatch-call-due\"]) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Dispatch Call Done </div>\r\n                <div>: 0 / 0</div>\r\n                <div>: {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/wakefit/dispatch-call-done`}>{(rowInfo.orders_count &&rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit[\"dispatch-call-done\"]) || 0}</Link>} / {<Link target=\"_blank\" to={`order-confirmation-team/${rowInfo.cet_uid}/affiliate/dispatch-call-done`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate[\"dispatch-call-done\"]) || 0}</Link>}</div>\r\n            </div> */}\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Instruction Call Due </div>\r\n                <div>: {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/wakefit/instructions-due`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit[\"instructions-due\"]) || 0}</Link>} / {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/affiliate/instructions-due`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate[\"instructions-due\"]) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Instruction Call Done </div>\r\n                <div>: {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/wakefit/instructions-done`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit[\"instructions-done\"]) || 0}</Link>} / {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/affiliate/instructions-done`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate[\"instructions-done\"]) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Feedback Call Done </div>\r\n                <div>: {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/wakefit/feedback-call-done`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit[\"feedback-call-done\"]) || 0}</Link>} / {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/affiliate/feedback-call-done`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate[\"feedback-call-done\"]) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Review Call Done </div>\r\n                <div>: {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/wakefit/review-received`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit[\"review-received\"]) || 0}</Link>} / {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/affiliate/review-received`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate[\"review-received\"]) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">P&P END </div>\r\n                <div>: {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/wakefit/pp-end`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit[\"pp-end\"]) || 0}</Link>} / {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/affiliate/pp-end`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate[\"pp-end\"]) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Closed </div>\r\n                <div>: {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/wakefit/closed`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit.closed) || 0}</Link>} / {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/affiliate/closed`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate.closed) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Follow-up </div>\r\n                <div>: {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/wakefit/followup`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit.followup) || 0}</Link>} / {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/affiliate/followup`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate.followup) || 0}</Link>}</div>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div className=\"status-label\">Sale Orders </div>\r\n                <div>: {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/wakefit/sale-orders`}>{(rowInfo.orders_count && rowInfo.orders_count.wakefit && rowInfo.orders_count.wakefit[\"sale-orders\"]) || 0}</Link>} / {<Link target=\"_blank\" to={`relationship-team/${rowInfo.cet_uid}/affiliate/sale-orders`}>{(rowInfo.orders_count && rowInfo.orders_count.affiliate && rowInfo.orders_count.affiliate[\"sale-orders\"]) || 0}</Link>}</div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    assignmentDetails = (props) => {\r\n        let rowInfo = props.original;\r\n        let { frequencyChange } = this.state;\r\n        return <div className=\"assignment-details-container\">\r\n            <form className=\"assignment-frequency-form\">\r\n                <input\r\n                    name=\"assign_frequency\"\r\n                    className=\"input-field\"\r\n                    type=\"text\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={frequencyChange && frequencyChange.login_id === rowInfo.login_id ? frequencyChange.assign_frequency : rowInfo.assign_frequency}\r\n                />\r\n                <Button\r\n                    label={\"Update\"}\r\n                    disabled={frequencyChange ? frequencyChange.login_id !== rowInfo.login_id || (frequencyChange.login_id === rowInfo.login_id && frequencyChange.assign_frequency === \"\") : true}\r\n                    onClick={this.handleFrequencyUpdate}\r\n                />\r\n            </form>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_wf_cet\" type=\"checkbox\"\r\n                    id={`is_wf_cet-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_wf_cet) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.is_wf_cet) === 1}\r\n                />\r\n                <label for={`is_wf_cet-${props.index}`} className=\"custom-label\"> Wakefit CET</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_amazon_cet\" type=\"checkbox\"\r\n                    id={`is_amazon_cet-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_amazon_cet) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.is_amazon_cet) === 1}\r\n                />\r\n                <label for={`is_amazon_cet-${props.index}`} className=\"custom-label\"> Amazon CET</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_pepperfry_cet\" type=\"checkbox\"\r\n                    id={`is_pepperfry_cet-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_pepperfry_cet) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.is_pepperfry_cet) === 1}\r\n                />\r\n                <label for={`is_pepperfry_cet-${props.index}`} className=\"custom-label\"> Pepperfry CET</label>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input name=\"is_flipkart_cet\" type=\"checkbox\"\r\n                    id={`is_flipkart_cet-${props.index}`}\r\n                    className=\"custom-check\"\r\n                    onChange={(event) => this.handleChange(event, rowInfo)}\r\n                    value={Number(rowInfo.is_flipkart_cet) === 1 ? 0 : 1}\r\n                    checked={Number(rowInfo.is_flipkart_cet) === 1}\r\n                />\r\n                <label for={`is_flipkart_cet-${props.index}`} className=\"custom-label\"> Flipkart CET</label>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    otherActions = (props) => {\r\n        let rowInfo = props.original;\r\n        return <div className=\"other-actions\">\r\n            <div className=\"cursor-pointer\"><Link to={`/reset-password/${rowInfo.login_id}`} >Reset Password</Link></div>\r\n            <div className=\"custom-badge\">{Number(rowInfo.is_active) === 1 ?\r\n                <div onClick={() => this.activateOrDeactivateMember(rowInfo, 0)}>De-Activate</div> :\r\n                <div onClick={() => this.activateOrDeactivateMember(rowInfo, 1)}>Activate</div>}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    selectMultipleCets = (event, row) => {\r\n        let { selectedCets, selectedPod } = this.state;\r\n        if (event.target.checked) {\r\n            selectedCets.push({\r\n                \"cet_login_id\": row.login_id,\r\n                \"pod_leader_id\": selectedPod\r\n            });\r\n        } else {\r\n            selectedCets = selectedCets.filter(cet => cet.cet_login_id !== row.login_id);\r\n        }\r\n        this.setState({ selectedCets, isUpdatingBulk: selectedCets.length > 0 }, () => console.log(this.state));\r\n    }\r\n\r\n    selectBulk = (props) => {\r\n        let { selectedCets } = this.state;\r\n        let row = props.original;\r\n        let selectedCet = selectedCets.filter(cet => cet.cet_login_id === row.login_id);\r\n        return (\r\n            <div className=\"select-bulk\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    onChange={(event) => this.selectMultipleCets(event, row)}\r\n                    checked={selectedCet.length > 0}\r\n                    value={row.login_id}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    selectPod = (event) => {\r\n        this.setState({ selectedPod: event.target.value }, () => {\r\n            let { selectedCets, selectedPod } = this.state;\r\n            selectedCets = selectedCets.map((cet) => {\r\n                return { ...cet, \"pod_leader_id\": selectedPod };\r\n            });\r\n\r\n            this.setState({ selectedCets, isUpdatingBulk: selectedCets.length > 0 });\r\n        });\r\n    }\r\n\r\n    updateCetsPodLeader = (event) => {\r\n        event.preventDefault();\r\n        let check = window.confirm(\"Are you sure want to update?\")\r\n        if (check) {\r\n            let { selectedCets } = this.state;\r\n            this.props.updateCetsPodLeaderAction(selectedCets);\r\n            // this.resetData();\r\n        }\r\n    }\r\n\r\n    activateOrDeactivateMember = (rowInfo, value) => {\r\n        let check = window.confirm(\"Are you sure want to update?\");\r\n        if (check) {\r\n            let payload = {};\r\n            payload.login_id = rowInfo.login_id;\r\n            payload.is_active = value;\r\n            this.props.uploadEditMemberData(payload);\r\n        }\r\n    }\r\n\r\n    handleChange = (event, rowInfo) => {\r\n        let fieldName = event.target.name;\r\n        let fieldValue = event.target.value;\r\n        if (fieldName === \"assign_frequency\") {\r\n            let data = {};\r\n            data.login_id = rowInfo.login_id;\r\n            data[fieldName] = fieldValue;\r\n            this.setState({ frequencyChange: data });\r\n        } else {\r\n            let check = window.confirm(\"Are you sure want to update?\");\r\n            if (check) {\r\n                let payload = {};\r\n                payload.login_id = rowInfo.login_id;\r\n                payload[fieldName] = Number(fieldValue);\r\n                this.props.uploadEditMemberData(payload);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFrequencyUpdate = (event) => {\r\n        event.preventDefault();\r\n        let check = window.confirm(\"Are you sure want to update?\");\r\n        if (check) {\r\n            console.log(\"Submitting...\", this.state);\r\n            this.props.uploadEditMemberData(this.state.frequencyChange);\r\n            // reset\r\n        }\r\n    }\r\n\r\n    getNoDataComponent = () => <div className=\"no-orders\">There is No Data, Please Try After Some Time...</div>\r\n\r\n\r\n    onLimitChange = (event) => {\r\n        this.setState({ limit: Number(event.target.value) }, () => this.handleClick(\"reset\"));\r\n    }\r\n\r\n    handleClick = (type) => {\r\n        let { limit, offset, total } = this.state;\r\n        // let { activePlatform, ActiveTab, userRole, cetId, userDetails } = this.props;\r\n        this.setState({\r\n            offset: type === \"next\" ?\r\n                offset + limit < total ? offset + limit : offset\r\n                :\r\n                type === \"prev\" && offset - limit >= 0 ? offset - limit : 0\r\n        }, () => {\r\n            let { limit, offset } = this.state;\r\n            this.props.getAllCetMembersAction(limit, offset);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { selectedCets, selectedPod } = this.state;\r\n        let { data, podLeaders, userDetails } = this.props;\r\n        return (\r\n            <div className=\"list-cet-table-container\">\r\n                <div className=\"additional-feature\">\r\n                    <Link to={\"/create-member\"}>\r\n                        <Button label=\"Create Member\" />\r\n                    </Link>\r\n                    {userDetails && userDetails.email && adminTeamLead.includes(userDetails.email) &&\r\n                        <div className=\"pod-updates\">\r\n                            <b className=\"select-pod-text\">Select POD Leader:</b>\r\n                            <select\r\n                                name=\"orm_order_status\"\r\n                                className=\"custom-dropdown\"\r\n                                value={selectedPod}\r\n                                onChange={this.selectPod}\r\n                            >\r\n                                <option value={\"\"}>Select Pod Leader</option>\r\n                                {podLeaders.map((pod, index) =>\r\n                                    <option key={`pod-leader-login_id-${index}`} value={pod.login_id}>{pod.name}</option>\r\n                                )}\r\n                            </select>\r\n                            <Button\r\n                                label={\"Update\"}\r\n                                disabled={selectedCets.length === 0}\r\n                                onClick={this.updateCetsPodLeader}\r\n                            />\r\n                        </div>}\r\n                </div>\r\n                {data && Array.isArray(data.results) ? <ReactTable\r\n                    data={data.results} // verify once API is ready\r\n                    filterable\r\n                    minRows={0}\r\n                    pageSize={999}\r\n                    PaginationComponent={() =>\r\n                        <PaginationComponent\r\n                            dropDownValues={dropDownValues}\r\n                            onLimitChange={this.onLimitChange}\r\n                            offset={this.state.offset}\r\n                            total={this.state.total}\r\n                            limit={this.state.limit}\r\n                            onPrevClick={this.handleClick}\r\n                            onNextClick={this.handleClick}\r\n                        />\r\n                    }\r\n                    // PaginationComponent={() => null}\r\n                    NoDataComponent={() => null}\r\n                    defaultFilterMethod={(filter, row) =>\r\n                        String(row[filter.id]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())}\r\n                    columns={[{\r\n                        Header: 'S.No',\r\n                        id: 'row',\r\n                        maxWidth: 50,\r\n                        filterable: false,\r\n                        Cell: (row) => <div>{row.index + 1}</div>\r\n                    }, {\r\n                        Header: \"CET Id\",\r\n                        accessor: \"cet_uid\",\r\n                        minWidth: 200,\r\n                        Cell: this.userIdDetails\r\n                    }, {\r\n                        Header: \"\",\r\n                        accessor: \"selector\",\r\n                        minWidth: 40,\r\n                        show: userDetails && userDetails.email && adminTeamLead.includes(userDetails.email),\r\n                        Cell: this.selectBulk\r\n                    }, {\r\n                        Header: \"CET Roles\",\r\n                        // accessor: \"\",\r\n                        minWidth: 200,\r\n                        Cell: this.cetRolesFormatter\r\n                    }, {\r\n                        Header: \"Pod Leader\",\r\n                        accessor: \"pod_leader_email\",\r\n                        minWidth: 200,\r\n                        Cell: this.getPodLeader\r\n                    }, {\r\n                        Header: \"User Details\",\r\n                        accessor: \"email\",\r\n                        minWidth: 200,\r\n                        Cell: this.userDetails\r\n                    }, {\r\n                        Header: \"No of Assigned Orders\",\r\n                        accessor: \"sample003\",\r\n                        minWidth: 200,\r\n                        Cell: this.noOfOrdersFormatter\r\n                    }, {\r\n                        Header: \"Assigned Orders by Status\",\r\n                        accessor: \"sample001\",\r\n                        minWidth: 245,\r\n                        Cell: this.ordersCountFormmatter\r\n                    }, {\r\n                        Header: \"Assigned Frequency\",\r\n                        accessor: \"sample002\",\r\n                        minWidth: 200,\r\n                        Cell: this.assignmentDetails\r\n                    }, {\r\n                        Header: \"Created\",\r\n                        accessor: \"create_timestamp\",\r\n                        minWidth: 200,\r\n                        Cell: Timestamp,\r\n                        filterMethod: timestampFilter\r\n                    }, {\r\n                        Header: \"Last Login\",\r\n                        accessor: \"last_login_timestamp\",\r\n                        minWidth: 200,\r\n                        Cell: Timestamp,\r\n                        filterMethod: timestampFilter\r\n                    }, {\r\n                        Header: \"Actions\",\r\n                        filterable: false,\r\n                        width: 120,\r\n                        Cell: this.otherActions\r\n                    }]}\r\n                /> :\r\n                    this.getNoDataComponent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;\r\n","import { GET_ALL_CET_MEMBERS, EDIT_CET_MEMBER_SUCCESS, RESET_ALL_CETS_DATA, GET_ALL_POD_LEADERS, UPDATE_MEMBERS_POD_LEADERS } from \"./constants\";\r\nimport { showLoader, hideLoader } from \"../../components/Loader/action\";\r\nimport handleError from \"../../errorHandler\";\r\nimport { getAllCetMembers, editCetMember, getAllPodLeaders, updateCetsPodLeader } from \"../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport function getAllCetMembersAction(limit, offset) {\r\n    return (dispatch) => {\r\n        dispatch(showLoader());\r\n        getAllCetMembers(limit, offset)\r\n            .then(response => {\r\n                dispatch(hideLoader());\r\n                dispatch(getAllCetMemberSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                handleError(error, dispatch);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getAllCetMemberSuccess(data) {\r\n    return {\r\n        type: GET_ALL_CET_MEMBERS,\r\n        data\r\n    }\r\n}\r\n\r\nexport function getAllPodLeadersAction() {\r\n    return (dispatch) => {\r\n        // dispatch(showLoader());\r\n        getAllPodLeaders()\r\n            .then(response => {\r\n                // dispatch(hideLoader());\r\n                dispatch(getAllPodLeadersuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                handleError(error, dispatch);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getAllPodLeadersuccess(data) {\r\n    return {\r\n        type: GET_ALL_POD_LEADERS,\r\n        data\r\n    }\r\n}\r\n\r\nexport function updateCetsPodLeaderAction(data) {\r\n    return (dispatch) => {\r\n        dispatch(showLoader());\r\n        updateCetsPodLeader(data)\r\n            .then(response => {\r\n                dispatch(hideLoader());\r\n                dispatch(updateCetsPodLeaderSuccess(response.data));\r\n                toast.success(response.data.message)\r\n            })\r\n            .catch(error => {\r\n                handleError(error, dispatch);\r\n            });\r\n    }\r\n}\r\n\r\nexport function updateCetsPodLeaderSuccess(data) {\r\n    return {\r\n        type: UPDATE_MEMBERS_POD_LEADERS,\r\n        data\r\n    }\r\n}\r\n\r\nexport function editCetMemberAction(data) {\r\n    return (dispatch) => {\r\n        dispatch(showLoader());\r\n        editCetMember(data)\r\n            .then(response => {\r\n                dispatch(hideLoader());\r\n                dispatch(editCetMemberuccess(response.data));\r\n                toast.success(response.data.message);\r\n            })\r\n            .catch(error => {\r\n                handleError(error, dispatch);\r\n            });\r\n    }\r\n}\r\n\r\nexport function editCetMemberuccess(data) {\r\n    return {\r\n        type: EDIT_CET_MEMBER_SUCCESS,\r\n        data\r\n    }\r\n}\r\n\r\nexport function resetAllCetsData() {\r\n    return {\r\n        type: RESET_ALL_CETS_DATA\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport Table from './components/Table';\r\nimport { getAllCetMembersAction, getAllPodLeadersAction, editCetMemberAction, updateCetsPodLeaderAction, resetAllCetsData } from './action';\r\n\r\n\r\nclass ImportSheets extends Component {\r\n\r\n    componentWillMount() {\r\n        // this.props.getAllCetMembersAction();\r\n        this.props.getAllPodLeadersAction();\r\n    }\r\n\r\n    // componentWillReceiveProps(props) {\r\n    //     if (props.refreshCetMembers) {\r\n    //         this.props.getAllCetMembersAction();\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetAllCetsData();\r\n    }\r\n\r\n    render() {\r\n        const title = \"Customer Experience Team List\";\r\n        const { cetsMembers, podLeaders } = this.props;\r\n        return (\r\n            <div className=\"list-all-cets-container\">\r\n                <PageHeader\r\n                    header={title}\r\n                    count={cetsMembers && cetsMembers.count}\r\n                />\r\n                <Table\r\n                    data={cetsMembers}\r\n                    podLeaders={podLeaders}\r\n                    refreshCetMembers={this.props.refreshCetMembers}\r\n                    userDetails={this.props.userDetails}\r\n                    getAllCetMembersAction={this.props.getAllCetMembersAction}\r\n                    uploadEditMemberData={this.props.editCetMemberAction}\r\n                    updateCetsPodLeaderAction={this.props.updateCetsPodLeaderAction}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        userDetails: state.userDetails,\r\n        cetsMembers: state.cetDetails.cetsMembers,\r\n        podLeaders: state.cetDetails.podLeaders,\r\n        refreshCetMembers: state.cetDetails.refreshCetMembers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ getAllCetMembersAction, getAllPodLeadersAction, editCetMemberAction, updateCetsPodLeaderAction, resetAllCetsData }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportSheets);\r\n"],"sourceRoot":""}