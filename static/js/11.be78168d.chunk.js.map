{"version":3,"sources":["components/PaginationComponent/index.js","containers/FinanceModule/components/commonComponents/ReturnDetails/index.js","containers/FinanceModule/components/commonComponents/ReturnResolution/index.js","containers/FinanceModule/components/commonComponents/RefundDetails/index.js","containers/FinanceModule/components/commonComponents/ProcessRefunds/index.js","containers/FinanceModule/components/commonComponents/CouponDetails/index.js","containers/FinanceModule/components/commonComponents/DocketDetails/index.js","containers/FinanceModule/components/ReturnOrdersTable/index.js","containers/FinanceModule/index.js"],"names":["PaginationComponent","Component","render","this","props","offset","limit","total","onPrevClick","onNextClick","dropDownValues","onLimitChange","filtered","filteredData","className","disabled","onClick","aria-hidden","Array","isArray","length","onChange","value","map","option","index","key","defaultProps","ReturnDetails","rowInfo","original","reason","getReasonById","return_reason_id","rnr_request_type","name","return_comments","return_attachments","split","attachment","rel","target","href","process","return_created_by","getDateTime","return_requested_on","returnDetailsFilter","filter","row","String","_original","toLocaleLowerCase","includes","id","ResolutionDetails","getReturnStatusById","rnr_resolution_type","cet_returns_request_action_comments","rnr_resolution_update_by_email","rnr_resolution_update_timestamp","resolutionDetailsFilter","RefundDetails","refund","refund_details","getRefundStatusById","refund_status","refund_type","convertCurrency","amount","comments","account_holder_name","account_number","ifsc_code","bank_name","created_by_email","create_timestamp","refundDetailsFilter","ProcessRefundsDetails","state","fields","refund_trouble_reason","refund_amount","platform","reference_id","setData","refundDetails","Object","keys","Number","trouble_comments","refund_comments","setState","handleChnage","event","fieldName","fieldValue","submitRefund","preventDefault","userDetails","payload","login_id","editRefundDetailsAction","componentDidMount","componentWillReceiveProps","componentWillUnmount","order_id","getRefundStatuses","status","label","getTroubleReasons","placeholder","getPaymentResourcesToShow","rows","Button","refundCategory","rts_timestamp","reverse_pickup_status","getPaymentResourceById","refund_by_name","refund_timestamp","processRefundsDetailsFilter","CouponDetails","saleBenefitDetails","sale_benefits","old_coupon_details","coupon_code","coupon_percentage","new_coupon_details","issued_by_name","issued_on","applied_on","couponDetailsFilter","DocketDetails","getReturnDocketStatusById","text","refundDocketFilter","ReturnOrdersTable","React","resetTable","console","log","data","count","handleClick","type","getRefundOrdersAction","category","orderId","results","refreshOrders","tableData","filterable","minRows","pageSize","NoDataComponent","defaultFilterMethod","columns","Header","maxWidth","Cell","accessor","show","activePlatform","slug","minWidth","affiliateIdFormatter","filterMethod","affiliateIdFilter","OrderId","orderIdSearch","userRole","updateCustomer","submitPaymentTrackId","orderIdColumnFilter","CartDetails","allOrders","getMoreModifiedHistoryByOrder","cartDetailsFilter","CustomerDetails","showPopup","clickToCall","customerDetailFilter","ProcessRefunds","categories","platforms","showOnly","platformsOthers","statuses","FinanceModule","changePlatform","platformTab","statusesKeys","history","push","changeTab","tab","getPlatformTabs","getTabs","handleOrderIdChange","searchByOrderId","getRefundType","newCategory","getStatusName","newStatus","orderIdSearchComponent","getNoOrders","categoriesKeys","platformKeys","resetRefundDetails","refundOredrs","refreshData","title","item","PageHeader","header","clickToCallAction","connect","ownProps","financeDetails","financeData","dispatch","bindActionCreators"],"mappings":"qGAAA,2BAIA,MAAMA,UAA4BC,YAC9BC,SAAU,IAAD,EAC2GC,KAAKC,MAA/GC,EADD,EACCA,OAAQC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAOC,EADvB,EACuBA,YAAaC,EADpC,EACoCA,YAAaC,EADjD,EACiDA,eAAgBC,EADjE,EACiEA,cAAeC,EADhF,EACgFA,SAAUC,EAD1F,EAC0FA,aAC/F,OACI,yBAAKC,UAAU,wBACX,4BACIA,UAAU,4BACVC,SAAqB,IAAXV,EACVW,QAAS,IAAMR,EAAY,SAC3B,uBAAGM,UAAU,mBAAmBG,cAAY,UAEhD,yBAAKH,UAAU,mBAAmBT,EAAlC,OAA8CA,EAASC,GAASC,EAAQF,EAASC,EAAQC,EAAzF,OAAoGA,GACpG,4BACIO,UAAU,4BACVC,SAAUV,EAASC,GAASC,EAC5BS,QAAS,IAAMP,EAAY,SAC3B,uBAAGK,UAAU,oBAAoBG,cAAY,UAEhDC,MAAMC,QAAQT,IAAmBA,EAAeU,OAAS,GAAK,4BAAQN,UAAU,kBAAkBO,SAAUV,EAAeW,MAAOhB,GAC9HI,EAAea,IAAI,CAACC,EAAQC,IAAU,4BAAQC,IAAKD,EAAOH,MAAOE,GAASA,KAG9EN,MAAMC,QAAQP,IACXA,EAASQ,OAAS,GAClBF,MAAMC,QAAQN,IACdA,EAAaO,OAAS,GACtB,yBAAKN,UAAU,wBAAuB,gDAAtC,IAAgED,EAAaO,UAMjGpB,EAAoB2B,aAAe,CAC/BtB,OAAQ,EACRC,MAAO,EACPC,MAAO,EACPG,eAAgB,IAaLV,O,oWC7Cf,MAAM4B,UAAsB3B,YACxBC,SACI,IAAI2B,EAAU1B,KAAKC,MAAMyB,QAAQC,SAC7BC,EAASC,YAAcH,EAAQI,kBACnC,OACI,yBAAKnB,UAAU,mCACX,yBAAKA,UAAU,cAAa,oCAA5B,IAA0Ce,EAAQK,iBAAlD,YACA,yBAAKpB,UAAU,cAAa,sCAA5B,IAA4CiB,EAAOI,MACnD,yBAAKrB,UAAU,cAAa,wCAA5B,IAA8Ce,EAAQO,iBACtD,yBAAKtB,UAAU,cACX,2CACCe,EAAQQ,oBACLR,EAAQQ,mBAAmBC,MAAM,KAC5Bf,IAAI,CAACgB,EAAYd,IACd,yBAAKC,IAAG,qBAAgBD,GAASX,UAAU,wBAAuB,uBAAGA,UAAU,eAAe0B,IAAI,sBAAsBC,OAAO,SAASC,KAAI,UAhBhFC,2BAgBgF,kCAAqCJ,IAA/G,cAClDd,EAAQ,MAKxC,yBAAKX,UAAU,cAAa,0CAA5B,IAAgDe,EAAQe,mBACxD,yBAAK9B,UAAU,cAAa,yCAA5B,IAA+C+B,YAAYhB,EAAQiB,wBAM5E,MAAMC,EAAsB,CAACC,EAAQC,IACjCC,OAAOD,EAAIE,UAAJ,kBAAmCC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACvFF,OAAOlB,YAAciB,EAAIE,UAAJ,kBAAmChB,MAAMiB,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACxGF,OAAOD,EAAIE,UAAJ,iBAAkCC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACnFF,OAAOD,EAAIE,UAAJ,mBAAoCC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACrFF,OAAOL,YAAYI,EAAIE,UAAJ,sBAAuCC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACpGF,OAAOD,EAAID,EAAOM,KAAKF,oBAAoBC,SAASL,EAAO1B,MAAM8B,qBAO1DxB,Q,OC1Cf,MAAM2B,UAA0BtD,YAC5BC,SACI,IAAI2B,EAAU1B,KAAKC,MAAMyB,QAAQC,SACjC,OACI,yBAAKhB,UAAU,2BACX,yBAAKA,UAAU,cAAa,+CAA5B,IAAqD0C,YAAoB3B,EAAQ4B,qBAAqBtB,MACtG,yBAAKrB,UAAU,cAAa,wCAA5B,IAA8Ce,EAAQ6B,qCACtD,yBAAK5C,UAAU,cAAa,2CAA5B,IAAiDe,EAAQ8B,gCACzD,yBAAK7C,UAAU,cAAa,2CAA5B,IAAiD+B,YAAYhB,EAAQ+B,oCAM9E,MAAMC,EAA0B,CAACb,EAAQC,IACrCC,OAAOM,YAAoBP,EAAIE,UAAUM,qBAAqBtB,MAAMiB,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACjHF,OAAOD,EAAIE,UAAJ,qCAAsDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACvGF,OAAOD,EAAIE,UAAJ,gCAAiDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBAClGF,OAAOL,YAAYI,EAAIE,UAAJ,kCAAmDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,qBAOzGG,Q,kBCxBf,MAAMO,UAAsB7D,YACxBC,SACI,IACI6D,EADU5D,KAAKC,MAAMyB,QAAQC,SACZkC,eACrB,OACI,yBAAKlD,UAAU,kBACX,yBAAKA,UAAU,cAAa,sCAA5B,IAA4CmD,YAAoBF,EAAOG,eAAe/B,MACtF,yBAAKrB,UAAU,cAAa,2CAA5B,IAAiDiD,EAAOI,aACxD,yBAAKrD,UAAU,cAAa,6CAA5B,IAAmDsD,YAAgBL,EAAOM,QAAU,IACpF,yBAAKvD,UAAU,cAAa,+CAA5B,IAAqDiD,EAAOO,WAC1DP,EAAOQ,qBAAuBR,EAAOS,gBAAkBT,EAAOU,WAAaV,EAAOW,YAAc,6BACjGX,EAAOQ,qBAAuB,6BAAK,oDAA6BR,EAAOQ,qBACvER,EAAOS,gBAAkB,6BAAK,+CAAwBT,EAAOS,gBAC7DT,EAAOU,WAAa,6BAAK,0CAAmBV,EAAOU,WACnDV,EAAOW,WAAa,6BAAK,0CAAmBX,EAAOW,WACpD,yBAAK5D,UAAU,cAAa,mDAA5B,IAAyDiD,EAAOY,kBAChE,yBAAK7D,UAAU,cAAa,mDAA5B,IAAyD+B,YAAYkB,EAAOa,qBAMrF,MAAMC,EAAsB,CAAC7B,EAAQC,IACjCC,OAAOe,YAAoBhB,EAAIE,UAAJ,8BAAkDhB,MAAMiB,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBAChIF,OAAOD,EAAIE,UAAJ,4BAAgDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACjGF,OAAOD,EAAIE,UAAJ,uBAA2CC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBAC5FF,OAAOD,EAAIE,UAAJ,yBAA6CC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBAC9FF,OAAOD,EAAIE,UAAJ,iCAAqDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACtGF,OAAOL,YAAYI,EAAIE,UAAJ,kCAAsDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,qBAO5GU,Q,mCClCf,MAAMgB,UAA8B7E,YAAW,eAAD,oBAE1C8E,MAAQ,CACJC,OAAQ,CAEJd,cAAe,IACfI,SAAU,GACVW,sBAAuB,IAEvBC,cAAe,GAEfC,SAAU,GACVC,aAAc,KAZoB,KAuC1CC,QAAWxD,IAAa,IACdmD,EAAW7E,KAAK4E,MAAhBC,OACFM,EAAgBzD,EAAQmC,eACxBsB,GAAiBC,OAAOC,KAAKF,GAAelE,OAAS,IACrD4D,EAAOd,cAAgBoB,EAAcpB,cACrCc,EAAOV,SAAmD,IAAxCmB,OAAOH,EAAcpB,eAAuBoB,EAAcI,iBAAmBJ,EAAcK,gBAC7GX,EAAOC,sBAAwBK,EAAcL,sBAC7CD,EAAOE,cAAgBI,EAAcjB,OACrCW,EAAOG,SAAWG,EAAcnB,YAChCa,EAAOI,aAAeE,EAAcF,cAExCjF,KAAKyF,SAAS,CAAEZ,YAlDsB,KAqD1Ca,aAAgBC,IACZ,IAAIC,EAAYD,EAAMrD,OAAON,KACzB6D,EAAaF,EAAMrD,OAAOnB,MACxB0D,EAAW7E,KAAK4E,MAAhBC,OACN,OAAQe,GACJ,IAAK,gBACDf,EAAOe,GAAaC,EACiB,IAAjCP,OAAOT,EAAOd,eACdc,EAAM,sBAA4B,EAElCA,EAAM,sBAA4B,GAEtC,MAEJ,QACIA,EAAOe,GAAaC,EAI5B7F,KAAKyF,SAAS,CAAEZ,YAxEsB,KA2E1CiB,aAAgBH,IACZA,EAAMI,iBADgB,IAEhBlB,EAAW7E,KAAK4E,MAAhBC,OACAmB,EAAgBhG,KAAKC,MAArB+F,YACFtE,EAAU1B,KAAKC,MAAMyB,QAAQC,SAE7BsE,EAAU,GAEdA,EAAO,GAASvE,EAAQmC,eAAeV,GACvC8C,EAAO,cAAoBX,OAAOT,EAAOd,eACrC,CAAC,EAAG,GAAGb,SAASoC,OAAOT,EAAOd,gBAC9BkC,EAAO,gBAAsBpB,EAAOV,UAAYzC,EAAQmC,eAAeM,SAC/B,IAAjCmB,OAAOT,EAAOd,gBACrBkC,EAAO,sBAA4BpB,EAAOC,uBAAyBpD,EAAQmC,eAAeiB,sBAC1FmB,EAAO,iBAAuBpB,EAAOV,UAAYzC,EAAQmC,eAAeM,UAChC,IAAjCmB,OAAOT,EAAOd,iBACrBkC,EAAO,cAAoBpB,EAAOE,eAAiBrD,EAAQmC,eAAeK,OAC1E+B,EAAO,gBAAsBpB,EAAOV,UAAYzC,EAAQmC,eAAeM,SACvE8B,EAAO,SAAeX,OAAOT,EAAOG,UAAYtD,EAAQmC,eAAemB,UACvEiB,EAAO,aAAmBpB,EAAOI,cAAgBvD,EAAQmC,eAAeoB,aACxEgB,EAAO,UAAgBD,EAAYE,UAGvClG,KAAKC,MAAMkG,wBAAwBF,IAjFvCG,oBACI,IAAI1E,EAAU1B,KAAKC,MAAMyB,QAAQC,SAC7BwD,EAAgBzD,EAAQmC,eACxBsB,GAAiBC,OAAOC,KAAKF,GAAelE,OAAS,GACrDjB,KAAKkF,QAAQxD,GAIrB2E,0BAA0BpG,GACtB,IAAIyB,EAAUzB,EAAMyB,QAAQC,SAC5B,GAAI3B,KAAKC,MAAMyB,SAAW1B,KAAKC,MAAMyB,QAAQC,UAAY3B,KAAKC,MAAMyB,QAAQJ,QAAUrB,EAAMyB,QAAQJ,MAAO,CACvG,IAAI6D,EAAgBzD,EAAQmC,eACxBsB,GAAiBC,OAAOC,KAAKF,GAAelE,OAAS,GACrDjB,KAAKkF,QAAQxD,IAKzB4E,uBACItG,KAAKyF,SAAS,CAAEZ,OAAQ,KAiE5B9E,SACI,IAAI2B,EAAU1B,KAAKC,MAAMyB,QAAQC,SAC3BkD,EAAW7E,KAAK4E,MAAhBC,OACN,OACI,yBAAK1B,GAAE,0BAAqBzB,EAAQ6E,SAA7B,YAAyC7E,EAAQyB,KACnDzB,EAAQmC,gBAAkB,CAAC,EAAG,GAAGX,SAASxB,EAAQmC,eAAeE,eAAiB,yBAAKpD,UAAU,mBAC9F,yBAAKA,UAAU,kBAAkBwC,GAAE,iCAA4BzB,EAAQ6E,SAApC,YAAgD7E,EAAQyB,KACvF,qCACA,yBAAKxC,UAAU,mBACX,4BACIqB,KAAK,gBACLrB,UAAU,kBACVO,SAAWyE,GAAU3F,KAAK0F,aAAaC,EAAOjE,GAC9CP,MAAO0D,EAAOd,eAEbyC,cAAoBpF,IAAI,CAACqF,EAAQnF,IAAU,4BAAQC,IAAG,iBAAYD,GAASH,MAAOsF,EAAOtD,IAAKsD,EAAOC,WAMhF,IAAjCpB,OAAOT,EAAOd,gBAAwB,yBAAKpD,UAAU,mBAClD,oDACA,yBAAKA,UAAU,mBACX,4BACIqB,KAAK,wBACLrB,UAAU,kBACVO,SAAWyE,GAAU3F,KAAK0F,aAAaC,EAAOjE,GAC9CP,MAAO0D,EAAOC,uBAEb6B,cAAoBvF,IAAIQ,GAAU,4BAAQT,MAAOS,EAAOuB,IAAKvB,EAAO8E,WAKvD,MAAzB7B,EAAOd,eAAyB,yBAAKpD,UAAU,mBAC5C,qCACA,2BACIqB,KAAK,gBACLrB,UAAU,cACViG,YAAY,SACZ1F,SAAWyE,GAAU3F,KAAK0F,aAAaC,EAAO3F,KAAKC,MAAMyB,SACzDP,MAAO0D,EAAOE,iBAII,MAAzBF,EAAOd,eAAyB,yBAAKpD,UAAU,mBAC5C,0CACA,yBAAKA,UAAU,mBACX,4BACIqB,KAAK,WACLrB,UAAU,kBACVO,SAAWyE,GAAU3F,KAAK0F,aAAaC,EAAOjE,GAC9CP,MAAO0D,EAAOG,UAEd,4BAAQ7D,MAAM,IAAd,iBACC0F,YAA0B,kBAAkBzF,IAAI,CAAC4D,EAAU1D,IAAU,4BAAQC,IAAG,mBAAcD,GAASH,MAAO6D,EAAS7B,IAAK6B,EAAShD,UAKxH,MAAzB6C,EAAOd,eAAyB,yBAAKpD,UAAU,mBAC5C,2CACA,2BACIqB,KAAK,eACLrB,UAAU,cACViG,YAAY,eACZ1F,SAAWyE,GAAU3F,KAAK0F,aAAaC,EAAO3F,KAAKC,MAAMyB,SACzDP,MAAO0D,EAAOI,gBAItB,yBAAKtE,UAAU,mBACX,uCACA,8BACIwC,GAAE,0BAAqBzB,EAAQ6E,SAA7B,YAAyC7E,EAAQyB,IACnDxC,UAAU,sCACVqB,KAAK,WACL8E,KAAM,EACNF,YAAY,WACZ1F,SAAWyE,GAAU3F,KAAK0F,aAAaC,EAAOjE,GAC9CP,MAAO0D,EAAOV,YAItB,yBAAKxD,UAAU,mBACX,kBAACoG,EAAA,EAAD,CACIL,MAAsC,kBAA9B1G,KAAKC,MAAM+G,gBAAuCtF,EAAQuF,eAAkB,CAAC,EAAG,GAAG/D,SAASxB,EAAQwF,uBAAmD,UAAzB,uBACtItG,SAAyC,kBAA9BZ,KAAKC,MAAM+G,iBAAuCtF,EAAQuF,gBAAkB,CAAC,EAAG,GAAG/D,SAASxB,EAAQwF,uBAC/GrG,QAASb,KAAK8F,iBAItB,yBAAKnF,UAAU,8BACX,yBAAKA,UAAU,cAAa,uCAA5B,IAA6CmD,YAAoBpC,EAAQmC,eAAeE,eAAe2C,OACvG,yBAAK/F,UAAU,cAAa,8CAAuBe,EAAQmC,eAAekB,eAC1E,yBAAKpE,UAAU,cAAa,wCAA5B,IAA8Ce,EAAQmC,eAAe2B,iBACrE,yBAAK7E,UAAU,cAAa,4CAA5B,IAAkDe,EAAQmC,eAAeG,aACzE,yBAAKrD,UAAU,cAAa,yCAA5B,IAA+CwG,YAAuBzF,EAAQmC,eAAemB,UAAUhD,MACvG,yBAAKrB,UAAU,cAAa,6CAA5B,IAAmDe,EAAQmC,eAAeoB,cAC1E,yBAAKtE,UAAU,cAAce,EAAQmC,eAAeuD,gBACnD1F,EAAQmC,gBAAkBnC,EAAQmC,eAAewD,kBAAoB,yBAAK1G,UAAU,cAAc+B,YAAYhB,EAAQmC,eAAewD,sBAQvJ,MAAMC,EAA8B,CAACzE,EAAQC,IACzCC,OAAOe,YAAoBhB,EAAIE,UAAJ,8BAAkD0D,OAAOzD,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACjIF,OAAOD,EAAIE,UAAJ,8BAAkDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACnGF,OAAOD,EAAIE,UAAJ,gCAAoDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACrGF,OAAOD,EAAIE,UAAJ,4BAAgDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACjGF,OAAOoE,YAAuBrE,EAAIE,UAAJ,yBAA6ChB,MAAMiB,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBAC3HF,OAAOD,EAAIE,UAAJ,6BAAiDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBAClGF,OAAOD,EAAIE,UAAJ,+BAAmDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACpGF,OAAOA,OAAOL,YAAYK,OAAOD,EAAIE,UAAJ,oCAAwDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACnIF,OAAOD,EAAID,EAAOM,KAAKF,oBAAoBC,SAASL,EAAO1B,MAAM8B,qBAO1D0B,Q,OCrOf,MAAM4C,UAAsBzH,YACxBC,SACI,IACIyH,EADUxH,KAAKC,MAAMyB,QAAQC,SACA8F,cACjC,OACI,6BACKD,GAAsB,yBAAK7G,UAAU,kBACjC6G,GAAsBpC,OAAOC,KAAKmC,EAAmBE,oBAAoBzG,OAAS,GAAK,6BACpF,yBAAKN,UAAU,cAAa,kDAC5B,yBAAKA,UAAU,cAAa,0CAA5B,IAAgD6G,EAAmBE,oBAAsBF,EAAmBE,mBAAmBC,aAC/H,yBAAKhH,UAAU,cAAa,+CAA5B,IAAqD6G,EAAmBE,oBAAsBF,EAAmBE,mBAAmBE,kBAApI,KACA,8BAEJ,yBAAKjH,UAAU,cAAa,kDAC5B,yBAAKA,UAAU,cAAa,0CAA5B,IAAgD6G,EAAmBK,oBAAsBL,EAAmBK,mBAAmBF,aAC/H,yBAAKhH,UAAU,cAAa,6CAA5B,IAAmD6G,EAAmBK,oBAAsBL,EAAmBK,mBAAmBD,kBAAlI,KACA,yBAAKjH,UAAU,cAAa,iDAC5B,yBAAKA,UAAU,cAAc6G,EAAmBM,gBAChD,yBAAKnH,UAAU,cAAc+B,YAAY8E,EAAmBO,YAC5D,yBAAKpH,UAAU,cAAa,0CAE5B,yBAAKA,UAAU,cAAc+B,YAAY8E,EAAmBQ,gBAOzE,MAAMC,EAAsB,CAACpF,EAAQC,IACjCC,OAAOD,EAAIE,UAAUyE,cAAcC,mBAAmBC,aAAa1E,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBAChHF,OAAOD,EAAIE,UAAUyE,cAAcC,mBAAmBE,mBAAmB3E,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACnHF,OAAOD,EAAIE,UAAUyE,cAAcI,mBAAmBF,aAAa1E,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBAC7GF,OAAOD,EAAIE,UAAUyE,cAAcI,mBAAmBD,mBAAmB3E,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACnHF,OAAOD,EAAIE,UAAJ,8BAAkDC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACnGF,OAAOL,YAAYI,EAAIE,UAAJ,0BAA8CC,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBAC3GF,OAAOL,YAAYI,EAAIE,UAAJ,2BAA+CC,oBAAoBC,SAASL,EAAO1B,MAAM8B,qBAOrGsE,Q,SC5CR,MAAMW,EAAiBjI,IAC1B,IAAIyB,EAAUzB,EAAMyB,SAAWzB,EAAMyB,QAAQC,SAC7C,OACI,yBAAKhB,UAAU,cACVe,IAAYA,EAAQuF,cAAgB,6BACjC,6BAAK,uCAAL,4BACA,yBAAKtG,UAAU,cAAf,sDAA+E,uDAE7E,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGuC,SAASxB,EAAQwF,wBAA0B,6BACzD,6BAAK,uCAAgBiB,YAA0BzG,EAAQwF,uBAAuBR,OAC9E,yBAAK/F,UAAW,CAAC,EAAG,GAAGuC,SAASxB,EAAQwF,uBAAyB,aAAe,YAAaiB,YAA0BzG,EAAQwF,uBAAuBkB,UAM7JC,EAAqB,CAACxF,EAAQC,IAChCC,OACFD,EAAIE,UAAUiE,cAAiB,2BAC/BkB,YAA0BrF,EAAIE,UAAJ,uBAAwC0D,OACrEzD,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBACxCF,OACKD,EAAIE,UAAUiE,cAAiB,uEAC/BkB,YAA0BrF,EAAIE,UAAJ,uBAAwCoF,MACrEnF,oBAAoBC,SAASL,EAAO1B,MAAM8B,sBAC5CF,OAAOD,EAAIE,UAAJ,uBAAwCC,oBAAoBC,SAASL,EAAO1B,MAAM8B,qBCX3F1C,EAAiB,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,KAE9C,MAAM+H,UAA0BC,IAAMzI,UAAW,eAAD,oBAC5C8E,MAAQ,CAEJ1E,OAAQ,EACRC,MAAO,GACPC,MAAO,GALiC,KAQ5CoI,WAAa,KACTC,QAAQC,IAAI,eACZ1I,KAAKyF,SAAS,CACVvF,OAAQ,EACRC,MAAO,GACPC,MAAOJ,KAAKC,MAAM0I,KAAKC,OAAS,KAbI,KAqD5CpI,cAAiBmF,IACb3F,KAAKyF,SAAS,CAAEtF,MAAOmF,OAAOK,EAAMrD,OAAOnB,QAAU,IAAMnB,KAAK6I,YAAY,WAtDpC,KAyD5CA,YAAeC,IAAU,IAAD,EACW9I,KAAK4E,MAA9BzE,EADc,EACdA,MAAOD,EADO,EACPA,OAAQE,EADD,EACCA,MAErBJ,KAAKyF,SAAS,CACVvF,OAAiB,SAAT4I,EACJ5I,EAASC,EAAQC,EAAQF,EAASC,EAAQD,EAEjC,SAAT4I,GAAmB5I,EAASC,GAAS,EAAID,EAASC,EAAQ,GAC/D,KAAO,IAAD,EACmBH,KAAK4E,MAAvBzE,EADD,EACCA,MAAOD,EADR,EACQA,OACbF,KAAKC,MAAM8I,sBAAsB,CAC7BC,SAAUhJ,KAAKC,MAAM+G,eACrBhC,SAAUhF,KAAKC,MAAM+E,SACrByB,OAAQzG,KAAKC,MAAMgJ,SAAWjJ,KAAKC,MAAMwG,OACzCtG,QACAD,cAvDZkG,oBACQpG,KAAKC,MAAM0I,KAAKO,SAChBlJ,KAAKyF,SAAS,CACVrF,MAAOJ,KAAKC,MAAM0I,KAAKC,QAKnCvC,0BAA0BpG,GAQtB,GANID,KAAKC,MAAM+G,iBAAmB/G,EAAM+G,gBACpChH,KAAKC,MAAM+E,WAAa/E,EAAM+E,UAC9BhF,KAAKC,MAAMwG,SAAWxG,EAAMwG,QAE5BzG,KAAKwI,aAGLvI,EAAMkJ,cACR,CAAC,IAAD,EAC0BnJ,KAAK4E,MAAvBzE,EADR,EACQA,MAAOD,EADf,EACeA,OAEbF,KAAKC,MAAM8I,sBAAsB,CAC7BC,SAAU/I,EAAM+G,eAChBhC,SAAU/E,EAAM+E,SAChByB,OAAQxG,EAAMgJ,SAAWhJ,EAAMwG,OAC/BtG,QACAD,WAGJD,EAAM0I,MAAQ1I,EAAM0I,KAAKO,SACzBlJ,KAAKyF,SAAS,CACVrF,MAAOH,EAAM0I,KAAKC,QA6B9B7I,SAAU,IAAD,EACmBC,KAAKC,MAAvB0I,EADD,EACCA,KAAMM,EADP,EACOA,QACRG,EAAYT,GAAQA,EAAKO,QAAUP,EAAKO,QAAU,GACtD,OACI,yBAAKvI,UAAU,2BACX,kBAAC,IAAD,CACIgI,KAAMS,EACNC,YAAU,EACVC,QAAS,EACTC,SAAU,IACV1J,oBAAqB,IACjB,kBAACA,EAAA,EAAD,CACIU,eAAgBA,EAChBC,cAAeR,KAAKQ,cACpBN,OAAQF,KAAK4E,MAAM1E,OACnBE,MAAOJ,KAAK4E,MAAMxE,MAClBD,MAAOH,KAAK4E,MAAMzE,MAClBE,YAAaL,KAAK6I,YAClBvI,YAAaN,KAAK6I,cAG1BW,gBAAiB,IAAM,KACvBC,oBAAqB,CAAC5G,EAAQC,IAC1BC,OAAOD,EAAID,EAAOM,KAAKF,oBAAoBC,SAASL,EAAO1B,MAAM8B,qBACrEyG,QAAS,CAAC,CACNC,OAAQ,OACRxG,GAAI,MACJyG,SAAU,GACVP,YAAY,EACZQ,KAAO/G,GAAQ,6BAAMA,EAAIxB,MAAQ,IAClC,CACCqI,OAAQ,YACRG,SAAU,eACVC,KAAM/J,KAAKC,MAAM+J,gBAAqD,cAAnChK,KAAKC,MAAM+J,eAAeC,KAC7DC,SAAU,GACVL,KAAMM,IACNC,aAAcC,KACf,CACCV,OAAQ,WACRG,SAAU,kBACVI,SAAU,IACVL,KAAO5J,GACH,kBAACqK,EAAA,EAAD,CACI5I,QAASzB,EACTsK,cAAetB,EACfuB,SAAUxK,KAAKC,MAAMuK,SACrBR,eAAgBhK,KAAKC,MAAM+J,eAC3BhE,YAAahG,KAAKC,MAAM+F,YACxByE,eAAgBzK,KAAKC,MAAMyK,uBAEnCN,aAAcO,KACf,CACChB,OAAQ,eACRG,SAAU,WACVC,KAAoC,wBAA9B/J,KAAKC,MAAM+G,eACjBkD,SAAU,IACVL,KAAO5J,GACH,kBAAC2K,EAAA,EAAD,CACIC,UAAWzB,EACX1H,QAASzB,EACT+F,YAAahG,KAAKC,MAAM+F,YACxB8E,8BAA+B9K,KAAKC,MAAM6K,gCAElDV,aAAcW,KACf,CACCpB,OAAQ,eACRG,SAAU,mBACVI,SAAU,IACVL,KAAO5J,GACH,kBAAC+K,EAAA,EAAD,CACItJ,QAASzB,EACT+F,YAAahG,KAAKC,MAAM+F,YACxBiF,UAAWjL,KAAKC,MAAMgL,UACtBC,YAAalL,KAAKC,MAAMiL,cAEhCd,aAAce,KACf,CACCxB,OAAQ,iBACRG,SAAU,WACVC,KAAoC,wBAA9B/J,KAAKC,MAAM+G,eACjBkD,SAAU,IACVL,KAAO5J,GACH,kBAAC,EAAD,CACIyB,QAASzB,IAEjBmK,aAAcnC,GACf,CACC0B,OAAQ,yBACRG,SAAU,0BACVI,SAAU,IACVH,KAAoC,kBAA9B/J,KAAKC,MAAM+G,eACjB6C,KAAO5J,GACH,kBAAC,EAAD,CACIyB,QAASzB,IAEjBmK,aAAcxH,GACf,CACC+G,OAAQ,qBACRG,SAAU,qBACVI,SAAU,IACVH,KAAoC,kBAA9B/J,KAAKC,MAAM+G,eACjB6C,KAAO5J,GACH,kBAAC,EAAD,CACIyB,QAASzB,IAEjBmK,aAAc1G,GACf,CACCiG,OAAQ,yBACRG,SAAU,yBACVI,SAAU,IACVL,KAAO5J,GACH,kBAAC,EAAD,CACIyB,QAASzB,IAEjBmK,aAAc1F,GACf,CACCiF,OAAQ,cACRG,SAAU,sBACVI,SAAU,IACVH,KAAoC,kBAA9B/J,KAAKC,MAAM+G,eACjB6C,KAAO5J,GACH,kBAACiI,EAAD,CACIxG,QAASzB,IAEjBmK,aAAc/B,GACf,CACCsB,OAAQ,kBACRG,SAAU,iBACVI,SAAU,IACVL,KAAO5J,GACH,kBAACmL,EAAD,CACI1J,QAASzB,EACT+F,YAAahG,KAAKC,MAAM+F,YACxBgB,eAAgBhH,KAAKC,MAAM+G,eAC3Bb,wBAAyBnG,KAAKC,MAAMkG,0BAE5CiE,aAAc9C,QAQvBgB,Q,mCCpOf,MAAM+C,EAAa,CAAC,CAChB3E,MAAO,iBACPuD,KAAM,iBACP,CACCvD,MAAO,uBACPuD,KAAM,uBACP,CACCvD,MAAO,uBACPuD,KAAM,oBACP,CACCvD,MAAO,qBACPuD,KAAM,qBACP,CACCvD,MAAO,wBACPuD,KAAM,yBAGJqB,EAAY,CAAC,CACf5E,MAAO,UACPuD,KAAM,UACNsB,SAAU,CAAC,KACZ,CACC7E,MAAO,YACPuD,KAAM,YACNsB,SAAU,CAAC,mBAGTC,EAAkB,CAAC,CACrB9E,MAAO,UACPuD,KAAM,UACNsB,SAAU,CAAC,MAGTE,EAAW,CAAC,CACd/E,MAAO,mBACPuD,KAAM,aACP,CACCvD,MAAO,mBACPuD,KAAM,aACP,CACCvD,MAAO,iBACPuD,KAAM,WACP,CACCvD,MAAO,mBACPuD,KAAM,WAGV,MAAMyB,UAAsB5L,YAAW,eAAD,oBAElC8E,MAAQ,CACJqE,QAAS,IAHqB,KAmDlC0C,eAAkBC,IAAiB,IAE3B5E,EAGAhH,KAAKC,MAHL+G,eAIA6E,EAAeJ,EAASrK,IAAIqF,GAAUA,EAAOwD,MACjDjK,KAAKC,MAAM6L,QAAQC,KAAnB,uBAAwC/E,EAAxC,YAA0D4E,EAAY3B,KAAtE,YAA8E4B,EAAa,MA1D7D,KA6DlCG,UAAaC,IAAS,IAAD,EAKbjM,KAAKC,MAHL+G,EAFa,EAEbA,eACAhC,EAHa,EAGbA,SAGJhF,KAAKC,MAAM6L,QAAQC,KAAnB,uBAAwC/E,EAAxC,YAA0DhC,EAA1D,YAAsEiH,EAAIhC,QAnE5C,KAsElCiC,gBAAkB,KAAO,IAAD,EAKhBlM,KAAKC,MAHL+G,EAFgB,EAEhBA,eACAhC,EAHgB,EAGhBA,SAGJ,OACI,yBAAKrE,UAAU,kBACU,kBAAnBqG,EAAqCsE,EAAYE,GAAiBpK,IAAI,CAACwK,EAAatK,IAClF,yBACIC,IAAKD,EACLX,UAAWqE,IAAa4G,EAAY3B,KAAO,4BAA8B,qBACzEpJ,QAAS,IAAMb,KAAK2L,eAAeC,IAElCA,EAAYlF,UApFC,KA2FlCyF,QAAU,KAAO,IAIT1F,EACAzG,KAAKC,MADLwG,OAEJ,OACI,yBAAK9F,UAAU,kBACV8K,EAASrK,IAAI,CAAC6K,EAAK3K,IAChB,yBACIC,IAAKD,EACLX,UAAW8F,IAAWwF,EAAIhC,KAAO,qBAAuB,cACxDpJ,QAAS,IAAMb,KAAKgM,UAAUC,IAE7BA,EAAIvF,UAzGS,KAgHlC0F,oBAAuBzG,IACnB3F,KAAKyF,SAAS,CAAEwD,QAAStD,EAAMrD,OAAOnB,SAjHR,KAoHlCkL,gBAAmB1G,IACfA,EAAMI,iBADmB,IAEnBkD,EAAYjJ,KAAK4E,MAAjBqE,QAFmB,EAKrBjJ,KAAKC,MAFH+G,EAHmB,EAGnBA,eAAgBhC,EAHG,EAGHA,SAGtBhF,KAAKC,MAAM8I,sBAAsB,CAC7BC,SAAUhC,EACVhC,SAAUA,EAEVyB,OAAQwC,KA9HkB,KAkIlCqD,cAAiBC,IACb,IAAIvD,EAAWqC,EAAWxI,OAAOmG,GAAYA,EAASiB,OAASsC,GAC/D,OAAOvD,EAAS/H,OAAS,EAAI+H,EAAS,GAAGtC,MAAQ,IApInB,KAuIlC8F,cAAiBC,IACb,IAAIhG,EAASgF,EAAS5I,OAAO4D,GAAUA,EAAOwD,OAASwC,GACvD,OAAOhG,EAAOxF,OAAS,EAAIwF,EAAO,GAAGC,MAAQ,IAzIf,KA4IlCgG,uBAAyB,IAEjB,yBAAK/L,UAAU,8BACX,0BAAMA,UAAU,mBACZ,2BAAOA,UAAU,cAAciG,YAAY,WAAW1F,SAAUlB,KAAKoM,oBAAqBjL,MAAOnB,KAAK4E,MAAMqE,UAC5G,kBAAClC,EAAA,EAAD,CACIL,MAAM,SACNoC,KAAK,SACLlI,UAAWZ,KAAK4E,MAAMqE,QACtBpI,QAASb,KAAKqM,oBArJA,KA4JlCM,YAAc,IAAM,yBAAKhM,UAAU,aAAf,qDAtJpByF,oBAAqB,IAAD,EAC2BpG,KAAKC,MAA1C+G,EADU,EACVA,eAAgBhC,EADN,EACMA,SAAUyB,EADhB,EACgBA,OAC5BmG,EAAiBvB,EAAWjK,IAAI4H,GAAYA,EAASiB,MACzD,GAAI2C,EAAe1J,SAAS8D,GAAiB,CACzC,IAAI6F,EAAevB,EAAUlK,IAAI4D,GAAYA,EAASiF,MACtD,GAAI4C,EAAa3J,SAAS8B,GAAW,CACjC,IAAI6G,EAAeJ,EAASrK,IAAIqF,GAAUA,EAAOwD,MAC7C4B,EAAa3I,SAASuD,GACtBzG,KAAKC,MAAM8I,sBAAsB,CAC7BC,SAAUhC,EACVhC,WACAyB,WAGJzG,KAAKC,MAAM6L,QAAQC,KAAnB,uBAAwC/E,EAAxC,YAA0DhC,EAA1D,YAAsE6G,EAAa,UAGvF7L,KAAKC,MAAM6L,QAAQC,KAAnB,uBAAwC/E,EAAxC,YAA0D6F,EAAa,UAG3E7M,KAAKC,MAAM6L,QAAQC,KAAnB,uBAAwCa,EAAe,GAAvD,MAIRvG,0BAA0BpG,GAAQ,IAAD,EACcD,KAAKC,MAA1C+G,EADuB,EACvBA,eAAgBhC,EADO,EACPA,SAAUyB,EADH,EACGA,OAE5BO,IAAmB/G,EAAM+G,gBACzBhC,IAAa/E,EAAM+E,UACnByB,IAAWxG,EAAMwG,SAGjBzG,KAAKyF,SAAS,CAAEwD,QAAS,KACzBjJ,KAAKC,MAAM8I,sBAAsB,CAC7BC,SAAU/I,EAAM+G,eAChBhC,SAAU/E,EAAM+E,SAChByB,OAAQxG,EAAMwG,UAK1BH,uBACItG,KAAKC,MAAM6M,qBA8Gf/M,SAAU,IACAkJ,EAAYjJ,KAAK4E,MAAjBqE,QADD,QAEmEjJ,KAAKC,MAArE+G,EAFH,EAEGA,eAAgBhC,EAFnB,EAEmBA,SAAUyB,EAF7B,EAE6BA,OAAQsG,EAFrC,EAEqCA,aAAcC,EAFnD,EAEmDA,YAClDC,EAASjN,KAAKsM,cAActF,GAAmB,OAASiC,GAAWjJ,KAAKwM,cAAc/F,IAC5F,IAAIuD,EAAiBsB,EAAUzI,OAAOqK,GAAQA,EAAKjD,OAASjF,GAC5D,OACI,yBAAKrE,UAAU,4BACX,kBAACwM,EAAA,EAAD,CACIC,OAAQH,EACRrE,MAAOmE,GAAgBA,EAAanE,QAEvC5I,KAAKkM,mBACJjD,GAAWjJ,KAAKmM,UACjBnM,KAAK0M,yBACLK,GAAgBhM,MAAMC,QAAQ+L,EAAa7D,UAAY6D,EAAa7D,QAAQjI,OAAS,EAClF,kBAAC,EAAD,CACI0H,KAAMoE,EACN/F,eAAgBA,EAChBhC,SAAUA,EACVyB,OAAQA,EACRwC,QAASA,EACTE,cAAe6D,EACfxC,SAAU,GACVzB,sBAAuB/I,KAAKC,MAAM8I,sBAClC5C,wBAAyBnG,KAAKC,MAAMkG,wBAEpC6D,eAAgBA,EAAe/I,OAAS,GAAK+I,EAAe,GAC5DhE,YAAahG,KAAKC,MAAM+F,YACxB0E,qBAAsB1K,KAAKC,MAAMyK,qBACjCQ,YAAalL,KAAKC,MAAMoN,kBACxBvC,8BAA+B9K,KAAKC,MAAM6K,8BAC1CG,UAAWjL,KAAKC,MAAMgL,YAE1BjL,KAAK2M,gBA4BVW,sBApBS,CAAC1I,EAAO2I,KACrB,CACHR,aAAcnI,EAAM4I,eAAeC,YACnCT,YAAapI,EAAM4I,eAAeR,YAClChH,YAAapB,EAAMoB,cAIC0H,GACjBC,YAAmB,CACtB5E,0BACA5C,4BACA2G,uBACApC,yBACA2C,sBACAvC,kCACAG,eACDyC,GAGQJ,CAA6C5B","file":"static/js/11.be78168d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nclass PaginationComponent extends Component {\r\n    render() {\r\n        let { offset, limit, total, onPrevClick, onNextClick, dropDownValues, onLimitChange, filtered, filteredData } = this.props;\r\n        return (\r\n            <div className=\"pagination-container\">\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset === 0 ? true : false}\r\n                    onClick={() => onPrevClick(\"prev\")}>\r\n                    <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <div className=\"pagination-text\">{offset} to {offset + limit <= total ? offset + limit : total} of {total}</div>\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset + limit >= total ? true : false}\r\n                    onClick={() => onNextClick(\"next\")}>\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                {Array.isArray(dropDownValues) && dropDownValues.length > 0 && <select className=\"custom-dropdown\" onChange={onLimitChange} value={limit}>\r\n                    {dropDownValues.map((option, index) => <option key={index} value={option}>{option}</option>)}\r\n                </select>}\r\n\r\n                {Array.isArray(filtered) &&\r\n                    filtered.length > 0 &&\r\n                    Array.isArray(filteredData) &&\r\n                    filteredData.length > 0 &&\r\n                    <div className=\"matched-records-data\"><b>Matched Records :</b> {filteredData.length}</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPaginationComponent.defaultProps = {\r\n    offset: 0,\r\n    limit: 0,\r\n    total: 0,\r\n    dropDownValues: []\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n    offset: PropTypes.number.isRequired,\r\n    limit: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    onPrevClick: PropTypes.func.isRequired,\r\n    onNextClick: PropTypes.func.isRequired,\r\n    dropDownValues: PropTypes.array,\r\n    onLimitChange: PropTypes.func\r\n}\r\n\r\nexport default PaginationComponent;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./style.scss\";\r\nimport { getReasonById } from '../../../../../config/returnReplacement';\r\nimport { getDateTime } from '../../../../../config/time';\r\n\r\nconst apiURL = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEV : process.env.REACT_APP_API_URL_PROD;\r\n\r\nclass ReturnDetails extends Component {\r\n    render() {\r\n        let rowInfo = this.props.rowInfo.original;\r\n        let reason = getReasonById(rowInfo.return_reason_id);\r\n        return (\r\n            <div className=\"customer-return-request-details\">\r\n                <div className=\"break-word\"><b>Type:</b> {rowInfo.rnr_request_type} Request</div>\r\n                <div className=\"break-word\"><b>Reason:</b> {reason.name}</div>\r\n                <div className=\"break-word\"><b>Comments:</b> {rowInfo.return_comments}</div>\r\n                <div className=\"break-word\">\r\n                    <b>Attachments:</b>\r\n                    {rowInfo.return_attachments &&\r\n                        rowInfo.return_attachments.split(\",\")\r\n                            .map((attachment, index) =>\r\n                                <div key={`Attachment-${index}`} className=\"attachment-container\"><a className=\"custom-badge\" rel=\"noopener noreferrer\" target=\"_blank\" href={`${apiURL}static/rnr_attachments/${attachment}`}>\r\n                                    Attachment {index + 1}\r\n                                </a></div>\r\n                            )\r\n                    }\r\n                </div>\r\n                <div className=\"break-word\"><b>Created By:</b> {rowInfo.return_created_by}</div>\r\n                <div className=\"break-word\"><b>Create at:</b> {getDateTime(rowInfo.return_requested_on)}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const returnDetailsFilter = (filter, row) => {\r\n    return String(row._original[\"rnr_request_type\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(getReasonById(row._original[\"return_reason_id\"]).name).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"return_comments\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"return_created_by\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(getDateTime(row._original[\"return_requested_on\"])).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row[filter.id]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nReturnDetails.propTypes = {\r\n    rowInfo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ReturnDetails;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./style.scss\";\r\nimport { getReturnStatusById } from '../../../../../config/returnReplacement';\r\nimport { getDateTime } from '../../../../../config/time';\r\n\r\nclass ResolutionDetails extends Component {\r\n    render() {\r\n        let rowInfo = this.props.rowInfo.original;\r\n        return (\r\n            <div className=\"returns-resolution-desc\">\r\n                <div className=\"break-word\"><b>Resolution Type:</b> {getReturnStatusById(rowInfo.rnr_resolution_type).name}</div>\r\n                <div className=\"break-word\"><b>Comments:</b> {rowInfo.cet_returns_request_action_comments}</div>\r\n                <div className=\"break-word\"><b>Resolved By:</b> {rowInfo.rnr_resolution_update_by_email}</div>\r\n                <div className=\"break-word\"><b>Resolved at:</b> {getDateTime(rowInfo.rnr_resolution_update_timestamp)}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const resolutionDetailsFilter = (filter, row) => {\r\n    return String(getReturnStatusById(row._original.rnr_resolution_type).name).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"cet_returns_request_action_comments\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"rnr_resolution_update_by_email\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(getDateTime(row._original[\"rnr_resolution_update_timestamp\"])).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nResolutionDetails.propTypes = {\r\n    rowInfo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ResolutionDetails;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./style.scss\";\r\nimport { getRefundStatusById } from '../../../../../config/returnReplacement';\r\nimport { getDateTime } from '../../../../../config/time';\r\nimport { convertCurrency } from '../../../../../utilities/commaSeperation';\r\n\r\nclass RefundDetails extends Component {\r\n    render() {\r\n        let rowInfo = this.props.rowInfo.original;\r\n        let refund = rowInfo.refund_details;\r\n        return (\r\n            <div className=\"refund-details\">\r\n                <div className=\"break-word\"><b>Status:</b> {getRefundStatusById(refund.refund_status).name}</div>\r\n                <div className=\"break-word\"><b>Refund Type:</b> {refund.refund_type}</div>\r\n                <div className=\"break-word\"><b>Refund Amount:</b> {convertCurrency(refund.amount || 0)}</div>\r\n                <div className=\"break-word\"><b>Refund Comments:</b> {refund.comments}</div>\r\n                {(refund.account_holder_name || refund.account_number || refund.ifsc_code || refund.bank_name) && <hr />}\r\n                {refund.account_holder_name && <div><b>Account Holder Name: </b>{refund.account_holder_name}</div>}\r\n                {refund.account_number && <div><b>Account Number: </b>{refund.account_number}</div>}\r\n                {refund.ifsc_code && <div><b>IFSC Code: </b>{refund.ifsc_code}</div>}\r\n                {refund.bank_name && <div><b>Bank Name: </b>{refund.bank_name}</div>}\r\n                <div className=\"break-word\"><b>Refund Initiated By:</b> {refund.created_by_email}</div>\r\n                <div className=\"break-word\"><b>Refund Initiated at:</b> {getDateTime(refund.create_timestamp)}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const refundDetailsFilter = (filter, row) => {\r\n    return String(getRefundStatusById(row._original[\"refund_details\"][\"refund_status\"]).name).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"refund_details\"][\"refund_type\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"refund_details\"][\"amount\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"refund_details\"][\"comments\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"refund_details\"][\"created_by_email\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(getDateTime(row._original[\"refund_details\"][\"create_timestamp\"])).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nRefundDetails.propTypes = {\r\n    rowInfo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default RefundDetails;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./style.scss\";\r\nimport { getTroubleReasons, getRefundStatuses, getRefundStatusById } from '../../../../../config/refundDetails';\r\nimport Button from '../../../../../components/Button';\r\nimport { getDateTime } from '../../../../../config/time';\r\nimport { getPaymentResourcesToShow, getPaymentResourceById } from '../../../../../config/payments';\r\n\r\nclass ProcessRefundsDetails extends Component {\r\n\r\n    state = {\r\n        fields: {\r\n            // id: \"\",\r\n            refund_status: \"1\",\r\n            comments: \"\",\r\n            refund_trouble_reason: \"1\",\r\n            // trouble_comments: \"\",\r\n            refund_amount: \"\",\r\n            // refund_comments: \"\",\r\n            platform: \"\",\r\n            reference_id: \"\",\r\n            // refund_by: \"\"\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        let rowInfo = this.props.rowInfo.original;\r\n        let refundDetails = rowInfo.refund_details;\r\n        if (refundDetails && Object.keys(refundDetails).length > 0) {\r\n            this.setData(rowInfo);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        let rowInfo = props.rowInfo.original;\r\n        if (this.props.rowInfo && this.props.rowInfo.original && this.props.rowInfo.index !== props.rowInfo.index) {\r\n            let refundDetails = rowInfo.refund_details;\r\n            if (refundDetails && Object.keys(refundDetails).length > 0) {\r\n                this.setData(rowInfo);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({ fields: {} });\r\n    }\r\n\r\n    setData = (rowInfo) => {\r\n        let { fields } = this.state;\r\n        let refundDetails = rowInfo.refund_details;\r\n        if (refundDetails && Object.keys(refundDetails).length > 0) {\r\n            fields.refund_status = refundDetails.refund_status;\r\n            fields.comments = Number(refundDetails.refund_status) === 3 ? refundDetails.trouble_comments : refundDetails.refund_comments;\r\n            fields.refund_trouble_reason = refundDetails.refund_trouble_reason;\r\n            fields.refund_amount = refundDetails.amount;\r\n            fields.platform = refundDetails.refund_type;\r\n            fields.reference_id = refundDetails.reference_id;\r\n        }\r\n        this.setState({ fields });\r\n    }\r\n\r\n    handleChnage = (event) => {\r\n        let fieldName = event.target.name;\r\n        let fieldValue = event.target.value;\r\n        let { fields } = this.state;\r\n        switch (fieldName) {\r\n            case \"refund_status\":\r\n                fields[fieldName] = fieldValue;\r\n                if (Number(fields.refund_status) === 3) {\r\n                    fields[\"refund_trouble_reason\"] = 1;\r\n                } else {\r\n                    fields[\"refund_trouble_reason\"] = \"\";\r\n                }\r\n                break;\r\n\r\n            default:\r\n                fields[fieldName] = fieldValue;\r\n                break;\r\n        }\r\n\r\n        this.setState({ fields });\r\n    }\r\n\r\n    submitRefund = (event) => {\r\n        event.preventDefault();\r\n        let { fields } = this.state;\r\n        let { userDetails } = this.props;\r\n        let rowInfo = this.props.rowInfo.original;\r\n\r\n        let payload = {};\r\n\r\n        payload[\"id\"] = rowInfo.refund_details.id;\r\n        payload[\"refund_status\"] = Number(fields.refund_status);\r\n        if ([1, 4].includes(Number(fields.refund_status))) {        //  1 - Initiated, 4 - Cancel\r\n            payload[\"refund_comments\"] = fields.comments || rowInfo.refund_details.comments;\r\n        } else if (Number(fields.refund_status) === 3) {            //  3 - Trouble\r\n            payload[\"refund_trouble_reason\"] = fields.refund_trouble_reason || rowInfo.refund_details.refund_trouble_reason;\r\n            payload[\"trouble_comments\"] = fields.comments || rowInfo.refund_details.comments;\r\n        } else if (Number(fields.refund_status) === 2) {            //  2 - Processed\r\n            payload[\"refund_amount\"] = fields.refund_amount || rowInfo.refund_details.amount;\r\n            payload[\"refund_comments\"] = fields.comments || rowInfo.refund_details.comments;\r\n            payload[\"platform\"] = Number(fields.platform || rowInfo.refund_details.platform);\r\n            payload[\"reference_id\"] = fields.reference_id || rowInfo.refund_details.reference_id;\r\n            payload[\"refund_by\"] = userDetails.login_id;\r\n        }\r\n\r\n        this.props.editRefundDetailsAction(payload);\r\n    }\r\n\r\n    render() {\r\n        let rowInfo = this.props.rowInfo.original;\r\n        let { fields } = this.state;\r\n        return (\r\n            <div id={`process-refunds-${rowInfo.order_id}-${rowInfo.id}`}>\r\n                {rowInfo.refund_details && [1, 3].includes(rowInfo.refund_details.refund_status) ? <div className=\"process-refunds\">\r\n                    <div className=\"field-container\" id={`process-refunds-fields-${rowInfo.order_id}-${rowInfo.id}`}>\r\n                        <b>Status</b>\r\n                        <div className=\"payment-section\">\r\n                            <select\r\n                                name=\"refund_status\"\r\n                                className=\"custom-dropdown\"\r\n                                onChange={(event) => this.handleChnage(event, rowInfo)}\r\n                                value={fields.refund_status}\r\n                            >\r\n                                {getRefundStatuses().map((status, index) => <option key={`refund-${index}`} value={status.id}>{status.label}</option>)}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Troubel Condition */}\r\n                    {Number(fields.refund_status) === 3 && <div className=\"field-container\">\r\n                        <b>Refund Trouble Reason</b>\r\n                        <div className=\"payment-section\">\r\n                            <select\r\n                                name=\"refund_trouble_reason\"\r\n                                className=\"custom-dropdown\"\r\n                                onChange={(event) => this.handleChnage(event, rowInfo)}\r\n                                value={fields.refund_trouble_reason}\r\n                            >\r\n                                {getTroubleReasons().map(reason => <option value={reason.id}>{reason.label}</option>)}\r\n                            </select>\r\n                        </div>\r\n                    </div>}\r\n\r\n                    {fields.refund_status === \"2\" && <div className=\"field-container\">\r\n                        <b>Amount</b>\r\n                        <input\r\n                            name=\"refund_amount\"\r\n                            className=\"input-field\"\r\n                            placeholder=\"Amount\"\r\n                            onChange={(event) => this.handleChnage(event, this.props.rowInfo)}\r\n                            value={fields.refund_amount}\r\n                        />\r\n                    </div>}\r\n\r\n                    {fields.refund_status === \"2\" && <div className=\"field-container\">\r\n                        <b>Payment Via</b>\r\n                        <div className=\"payment-section\">\r\n                            <select\r\n                                name=\"platform\"\r\n                                className=\"custom-dropdown\"\r\n                                onChange={(event) => this.handleChnage(event, rowInfo)}\r\n                                value={fields.platform}\r\n                            >\r\n                                <option value=\"\">Select Source</option>\r\n                                {getPaymentResourcesToShow('refundPlatform').map((platform, index) => <option key={`platform-${index}`} value={platform.id}>{platform.name}</option>)}\r\n                            </select>\r\n                        </div>\r\n                    </div>}\r\n\r\n                    {fields.refund_status === \"2\" && <div className=\"field-container\">\r\n                        <b>Reference ID</b>\r\n                        <input\r\n                            name=\"reference_id\"\r\n                            className=\"input-field\"\r\n                            placeholder=\"Reference Id\"\r\n                            onChange={(event) => this.handleChnage(event, this.props.rowInfo)}\r\n                            value={fields.reference_id}\r\n                        />\r\n                    </div>}\r\n\r\n                    <div className=\"field-container\">\r\n                        <b>Comments</b>\r\n                        <textarea\r\n                            id={`refund-comments-${rowInfo.order_id}-${rowInfo.id}`}\r\n                            className=\"fields input-field custom-text-area\"\r\n                            name=\"comments\"\r\n                            rows={5}\r\n                            placeholder=\"Comments\"\r\n                            onChange={(event) => this.handleChnage(event, rowInfo)}\r\n                            value={fields.comments}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-container\">\r\n                        <Button\r\n                            label={(this.props.refundCategory === \"return-orders\" && !rowInfo.rts_timestamp && ![2, 3].includes(rowInfo.reverse_pickup_status)) ? \"Don't Process Refund\" : \"Procced\"}\r\n                            disabled={(this.props.refundCategory === \"return-orders\" && !rowInfo.rts_timestamp && ![2, 3].includes(rowInfo.reverse_pickup_status))}\r\n                            onClick={this.submitRefund}\r\n                        />\r\n                    </div>\r\n                </div> :\r\n                    <div className=\"refund-details-description\">\r\n                        <div className=\"break-word\"><b>Status: </b> {getRefundStatusById(rowInfo.refund_details.refund_status).label}</div>\r\n                        <div className=\"break-word\"><b>Refund Amount: </b>{rowInfo.refund_details.refund_amount}</div>\r\n                        <div className=\"break-word\"><b>Comment: </b> {rowInfo.refund_details.refund_comments}</div>\r\n                        <div className=\"break-word\"><b>Refund Type: </b> {rowInfo.refund_details.refund_type}</div>\r\n                        <div className=\"break-word\"><b>Platform: </b> {getPaymentResourceById(rowInfo.refund_details.platform).name}</div>\r\n                        <div className=\"break-word\"><b>Reference Id: </b> {rowInfo.refund_details.reference_id}</div>\r\n                        <div className=\"break-word\">{rowInfo.refund_details.refund_by_name}</div>\r\n                        {rowInfo.refund_details && rowInfo.refund_details.refund_timestamp && <div className=\"break-word\">{getDateTime(rowInfo.refund_details.refund_timestamp)}</div>}\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const processRefundsDetailsFilter = (filter, row) => {\r\n    return String(getRefundStatusById(row._original[\"refund_details\"][\"refund_status\"]).label).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"refund_details\"][\"refund_amount\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"refund_details\"][\"refund_comments\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"refund_details\"][\"refund_type\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(getPaymentResourceById(row._original[\"refund_details\"][\"platform\"]).name).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"refund_details\"][\"reference_id\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"refund_details\"][\"refund_by_name\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(String(getDateTime(String(row._original[\"refund_details\"][\"refund_timestamp\"])))).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row[filter.id]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nProcessRefundsDetails.propTypes = {\r\n    rowInfo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProcessRefundsDetails;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./style.scss\";\r\nimport { getDateTime } from '../../../../../config/time';\r\n\r\nclass CouponDetails extends Component {\r\n    render() {\r\n        let rowInfo = this.props.rowInfo.original;\r\n        let saleBenefitDetails = rowInfo.sale_benefits;\r\n        return (\r\n            <div>\r\n                {saleBenefitDetails && <div className=\"refund-details\">\r\n                    {saleBenefitDetails && Object.keys(saleBenefitDetails.old_coupon_details).length > 0 && <div>\r\n                        <div className=\"break-word\"><b>Old Coupon Details</b></div>\r\n                        <div className=\"break-word\"><b>Old Coupon:</b> {saleBenefitDetails.old_coupon_details && saleBenefitDetails.old_coupon_details.coupon_code}</div>\r\n                        <div className=\"break-word\"><b>Old Percentage :</b> {saleBenefitDetails.old_coupon_details && saleBenefitDetails.old_coupon_details.coupon_percentage}%</div>\r\n                        <hr />\r\n                    </div>}\r\n                    <div className=\"break-word\"><b>New Coupon Details</b></div>\r\n                    <div className=\"break-word\"><b>New Coupon:</b> {saleBenefitDetails.new_coupon_details && saleBenefitDetails.new_coupon_details.coupon_code}</div>\r\n                    <div className=\"break-word\"><b>New Discount :</b> {saleBenefitDetails.new_coupon_details && saleBenefitDetails.new_coupon_details.coupon_percentage}%</div>\r\n                    <div className=\"break-word\"><b>coupon Issued by:</b></div>\r\n                    <div className=\"break-word\">{saleBenefitDetails.issued_by_name}</div>\r\n                    <div className=\"break-word\">{getDateTime(saleBenefitDetails.issued_on)}</div>\r\n                    <div className=\"break-word\"><b>Applied on</b></div>\r\n                    {/* <div className=\"break-word\">{saleBenefitDetails.applied_by_name}</div> */}\r\n                    <div className=\"break-word\">{getDateTime(saleBenefitDetails.applied_on)}</div>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const couponDetailsFilter = (filter, row) => {\r\n    return String(row._original.sale_benefits.old_coupon_details.coupon_code).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original.sale_benefits.old_coupon_details.coupon_percentage).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original.sale_benefits.new_coupon_details.coupon_code).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original.sale_benefits.new_coupon_details.coupon_percentage).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"sale_benefits\"][\"issued_by_name\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(getDateTime(row._original[\"sale_benefits\"][\"issued_on\"])).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(getDateTime(row._original[\"sale_benefits\"][\"applied_on\"])).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nCouponDetails.propTypes = {\r\n    rowInfo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CouponDetails;\r\n","import React from 'react';\r\nimport { getReturnDocketStatusById } from '../../../../../config/returnReplacement';\r\n\r\nexport const DocketDetails = (props) => {\r\n    let rowInfo = props.rowInfo && props.rowInfo.original;\r\n    return (\r\n        <div className=\"break-word\">\r\n            {rowInfo && (rowInfo.rts_timestamp ? <div>\r\n                <div><b>Status: </b>Return Reached Warehouse</div>\r\n                <div className=\"text-green\">Since it is RTS Order, you can process the refund. <strong>Please process it</strong></div>\r\n            </div>\r\n                : [0, 1, 2, 3, 4].includes(rowInfo.reverse_pickup_status) && <div>\r\n                    <div><b>Status: </b>{getReturnDocketStatusById(rowInfo.reverse_pickup_status).label}</div>\r\n                    <div className={[2, 3].includes(rowInfo.reverse_pickup_status) ? \"text-green\" : \"text-red\"}>{getReturnDocketStatusById(rowInfo.reverse_pickup_status).text}</div>\r\n                </div>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const refundDocketFilter = (filter, row) => {\r\n    return String(\r\n        (row._original.rts_timestamp && \"Return Reached Warehouse\") ||\r\n        (getReturnDocketStatusById(row._original[\"reverse_pickup_status\"]).label)\r\n    ).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(\r\n            (row._original.rts_timestamp && \"Since it is RTS Order, you can process the refund. Please process it\") ||\r\n            (getReturnDocketStatusById(row._original[\"reverse_pickup_status\"]).text)\r\n        ).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n        String(row._original[\"reverse_pickup_status\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport './style.scss';\r\nimport OrderId, { orderIdColumnFilter } from '../../../Dashboard/components/OrderId';\r\nimport affiliateIdFormatter, { affiliateIdFilter } from '../../../Dashboard/components/AffiliateId';\r\nimport CartDetails, { cartDetailsFilter } from '../../../Dashboard/components/CartDetails';\r\nimport CustomerDetails, { customerDetailFilter } from '../../../Dashboard/components/CustomerDetails';\r\n\r\nimport ReturnDetails, { returnDetailsFilter } from '../commonComponents/ReturnDetails';\r\nimport ResolutionDetails, { resolutionDetailsFilter } from '../commonComponents/ReturnResolution';\r\nimport RefundDetails, { refundDetailsFilter } from '../commonComponents/RefundDetails';\r\nimport ProcessRefundsDetails, { processRefundsDetailsFilter } from '../commonComponents/ProcessRefunds';\r\nimport CouponDetails, { couponDetailsFilter } from '../commonComponents/CouponDetails';\r\nimport PaginationComponent from '../../../../components/PaginationComponent';\r\nimport { DocketDetails, refundDocketFilter } from '../commonComponents/DocketDetails';\r\n\r\nconst dropDownValues = [10, 25, 50, 100, 150, 200];\r\n\r\nclass ReturnOrdersTable extends React.Component {\r\n    state = {\r\n        // For Pagination\r\n        offset: 1,\r\n        limit: 50,\r\n        total: 0,\r\n    }\r\n\r\n    resetTable = () => {\r\n        console.log(\"Reseting...\");\r\n        this.setState({\r\n            offset: 1,\r\n            limit: 50,\r\n            total: this.props.data.count || 0\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.data.results) {\r\n            this.setState({\r\n                total: this.props.data.count\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (\r\n            this.props.refundCategory !== props.refundCategory ||\r\n            this.props.platform !== props.platform ||\r\n            this.props.status !== props.status\r\n        ) {\r\n            this.resetTable();\r\n        }\r\n        if (\r\n            props.refreshOrders\r\n        ) {\r\n            let { limit, offset } = this.state;\r\n            // props.refreshOrders && this.resetTable();\r\n            this.props.getRefundOrdersAction({\r\n                category: props.refundCategory,\r\n                platform: props.platform,\r\n                status: props.orderId || props.status,\r\n                limit,\r\n                offset\r\n            });\r\n        }\r\n        if (props.data && props.data.results) {\r\n            this.setState({\r\n                total: props.data.count\r\n            });\r\n        }\r\n    }\r\n\r\n    onLimitChange = (event) => {\r\n        this.setState({ limit: Number(event.target.value) }, () => this.handleClick(\"reset\"));\r\n    }\r\n\r\n    handleClick = (type) => {\r\n        let { limit, offset, total } = this.state;\r\n\r\n        this.setState({\r\n            offset: type === \"next\" ?\r\n                offset + limit < total ? offset + limit : offset\r\n                :\r\n                type === \"prev\" && offset - limit >= 0 ? offset - limit : 0\r\n        }, () => {\r\n            let { limit, offset } = this.state;\r\n            this.props.getRefundOrdersAction({\r\n                category: this.props.refundCategory,\r\n                platform: this.props.platform,\r\n                status: this.props.orderId || this.props.status,\r\n                limit,\r\n                offset\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { data, orderId } = this.props;\r\n        let tableData = data && data.results ? data.results : [];\r\n        return (\r\n            <div className=\"finance-table-container\">\r\n                <ReactTable\r\n                    data={tableData}\r\n                    filterable\r\n                    minRows={0}\r\n                    pageSize={999}\r\n                    PaginationComponent={() =>\r\n                        <PaginationComponent\r\n                            dropDownValues={dropDownValues}\r\n                            onLimitChange={this.onLimitChange}\r\n                            offset={this.state.offset}\r\n                            total={this.state.total}\r\n                            limit={this.state.limit}\r\n                            onPrevClick={this.handleClick}\r\n                            onNextClick={this.handleClick}\r\n                        />\r\n                    }\r\n                    NoDataComponent={() => null}\r\n                    defaultFilterMethod={(filter, row) =>\r\n                        String(row[filter.id]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())}\r\n                    columns={[{\r\n                        Header: 'S.No',\r\n                        id: 'row',\r\n                        maxWidth: 50,\r\n                        filterable: false,\r\n                        Cell: (row) => <div>{row.index + 1}</div>\r\n                    }, {\r\n                        Header: \"Affiliate\",\r\n                        accessor: \"affiliate_id\",\r\n                        show: this.props.activePlatform && this.props.activePlatform.slug === \"affiliate\",\r\n                        minWidth: 80,\r\n                        Cell: affiliateIdFormatter,\r\n                        filterMethod: affiliateIdFilter\r\n                    }, {\r\n                        Header: \"Order ID\",\r\n                        accessor: \"order_random_id\",\r\n                        minWidth: 210,\r\n                        Cell: (props) =>\r\n                            <OrderId\r\n                                rowInfo={props}\r\n                                orderIdSearch={orderId}\r\n                                userRole={this.props.userRole}\r\n                                activePlatform={this.props.activePlatform}\r\n                                userDetails={this.props.userDetails}\r\n                                updateCustomer={this.props.submitPaymentTrackId}\r\n                            />,\r\n                        filterMethod: orderIdColumnFilter\r\n                    }, {\r\n                        Header: \"Cart Details\",\r\n                        accessor: \"item_sku\",\r\n                        show: this.props.refundCategory !== \"sale-benefit-orders\",\r\n                        minWidth: 250,\r\n                        Cell: (props) =>\r\n                            <CartDetails\r\n                                allOrders={tableData}\r\n                                rowInfo={props}\r\n                                userDetails={this.props.userDetails}\r\n                                getMoreModifiedHistoryByOrder={this.props.getMoreModifiedHistoryByOrder}\r\n                            />,\r\n                        filterMethod: cartDetailsFilter\r\n                    }, {\r\n                        Header: \"User Details\",\r\n                        accessor: \"customer_details\",\r\n                        minWidth: 250,\r\n                        Cell: (props) =>\r\n                            <CustomerDetails\r\n                                rowInfo={props}\r\n                                userDetails={this.props.userDetails}\r\n                                showPopup={this.props.showPopup}\r\n                                clickToCall={this.props.clickToCall}\r\n                            />,\r\n                        filterMethod: customerDetailFilter\r\n                    }, {\r\n                        Header: \"Coupon Details\",\r\n                        accessor: \"item_sku\",\r\n                        show: this.props.refundCategory === \"sale-benefit-orders\",\r\n                        minWidth: 250,\r\n                        Cell: (props) =>\r\n                            <CouponDetails\r\n                                rowInfo={props}\r\n                            />,\r\n                        filterMethod: couponDetailsFilter\r\n                    }, {\r\n                        Header: \"Cutomer Return Details\",\r\n                        accessor: \"customer_return_details\",\r\n                        minWidth: 250,\r\n                        show: this.props.refundCategory === \"return-orders\",\r\n                        Cell: (props) =>\r\n                            <ReturnDetails\r\n                                rowInfo={props}\r\n                            />,\r\n                        filterMethod: returnDetailsFilter\r\n                    }, {\r\n                        Header: \"Resolution Details\",\r\n                        accessor: \"resolution_details\",\r\n                        minWidth: 250,\r\n                        show: this.props.refundCategory === \"return-orders\",\r\n                        Cell: (props) =>\r\n                            <ResolutionDetails\r\n                                rowInfo={props}\r\n                            />,\r\n                        filterMethod: resolutionDetailsFilter\r\n                    }, {\r\n                        Header: \"Refund Request Details\",\r\n                        accessor: \"refund_request_details\",\r\n                        minWidth: 250,\r\n                        Cell: (props) =>\r\n                            <RefundDetails\r\n                                rowInfo={props}\r\n                            />,\r\n                        filterMethod: refundDetailsFilter\r\n                    }, {\r\n                        Header: \"Return Info\",\r\n                        accessor: \"return_info_details\",\r\n                        minWidth: 250,\r\n                        show: this.props.refundCategory === \"return-orders\",\r\n                        Cell: (props) =>\r\n                            <DocketDetails\r\n                                rowInfo={props}\r\n                            />,\r\n                        filterMethod: refundDocketFilter\r\n                    }, {\r\n                        Header: \"Process Refunds\",\r\n                        accessor: \"process_refund\",\r\n                        minWidth: 250,\r\n                        Cell: (props) =>\r\n                            <ProcessRefundsDetails\r\n                                rowInfo={props}\r\n                                userDetails={this.props.userDetails}\r\n                                refundCategory={this.props.refundCategory}\r\n                                editRefundDetailsAction={this.props.editRefundDetailsAction}\r\n                            />,\r\n                        filterMethod: processRefundsDetailsFilter\r\n                    }]}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReturnOrdersTable;\r\n","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport ReturnOrders from './components/ReturnOrdersTable';\r\nimport { getRefundOrdersAction, editRefundDetailsAction, resetRefundDetails } from './action';\r\nimport { submitPaymentTrackId, clickToCallAction } from '../Dashboard/action';\r\nimport { getMoreModifiedHistoryByOrder } from '../OcModule/action';\r\nimport { showPopup } from '../../components/Popup/action';\r\nimport Button from '../../components/Button';\r\n\r\nconst categories = [{\r\n    label: \"Return Refunds\",\r\n    slug: \"return-orders\"\r\n}, {\r\n    label: \"Sale Benefit Refunds\",\r\n    slug: \"sale-benefit-orders\"\r\n}, {\r\n    label: \"Cancellation Refunds\",\r\n    slug: \"cancelled-orders\"\r\n}, {\r\n    label: \"Price Drop Refunds\",\r\n    slug: \"price-drop-orders\"\r\n}, {\r\n    label: \"Customization Refunds\",\r\n    slug: \"customization-orders\"\r\n}];\r\n\r\nconst platforms = [{\r\n    label: \"Wakefit\",\r\n    slug: \"wakefit\",\r\n    showOnly: [\"\"]\r\n}, {\r\n    label: \"Affiliate\",\r\n    slug: \"affiliate\",\r\n    showOnly: [\"return-orders\"]\r\n}];\r\n\r\nconst platformsOthers = [{\r\n    label: \"Wakefit\",\r\n    slug: \"wakefit\",\r\n    showOnly: [\"\"]\r\n}];\r\n\r\nconst statuses = [{\r\n    label: \"Refund Initiated\",\r\n    slug: \"initiated\"\r\n}, {\r\n    label: \"Refund Processed\",\r\n    slug: \"processed\"\r\n}, {\r\n    label: \"Refund Trouble\",\r\n    slug: \"trouble\"\r\n}, {\r\n    label: \"Refund Cancelled\",\r\n    slug: \"cancel\"\r\n}];\r\n\r\nclass FinanceModule extends Component {\r\n\r\n    state = {\r\n        orderId: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { refundCategory, platform, status } = this.props;\r\n        let categoriesKeys = categories.map(category => category.slug);\r\n        if (categoriesKeys.includes(refundCategory)) {\r\n            let platformKeys = platforms.map(platform => platform.slug);\r\n            if (platformKeys.includes(platform)) {\r\n                let statusesKeys = statuses.map(status => status.slug);\r\n                if (statusesKeys.includes(status)) {\r\n                    this.props.getRefundOrdersAction({\r\n                        category: refundCategory,\r\n                        platform,\r\n                        status\r\n                    });\r\n                } else {\r\n                    this.props.history.push(`/refund-list/${refundCategory}/${platform}/${statusesKeys[0]}`);\r\n                }\r\n            } else {\r\n                this.props.history.push(`/refund-list/${refundCategory}/${platformKeys[0]}`);\r\n            }\r\n        } else {\r\n            this.props.history.push(`/refund-list/${categoriesKeys[0]}/`);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        let { refundCategory, platform, status } = this.props;\r\n        if (\r\n            refundCategory !== props.refundCategory ||\r\n            platform !== props.platform ||\r\n            status !== props.status\r\n            // props.refreshData\r\n        ) {\r\n            this.setState({ orderId: \"\" });\r\n            this.props.getRefundOrdersAction({\r\n                category: props.refundCategory,\r\n                platform: props.platform,\r\n                status: props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetRefundDetails();\r\n    }\r\n\r\n    changePlatform = (platformTab) => {\r\n        let {\r\n            refundCategory,\r\n            // platform,\r\n            // status\r\n        } = this.props;\r\n        let statusesKeys = statuses.map(status => status.slug);\r\n        this.props.history.push(`/refund-list/${refundCategory}/${platformTab.slug}/${statusesKeys[0]}`);\r\n    }\r\n\r\n    changeTab = (tab) => {\r\n        let {\r\n            refundCategory,\r\n            platform,\r\n            // status\r\n        } = this.props;\r\n        this.props.history.push(`/refund-list/${refundCategory}/${platform}/${tab.slug}`);\r\n    }\r\n\r\n    getPlatformTabs = () => {\r\n        let {\r\n            refundCategory,\r\n            platform,\r\n            // status\r\n        } = this.props;\r\n        return (\r\n            <div className=\"platform-tabs\">\r\n                {(refundCategory === \"return-orders\" ? platforms : platformsOthers).map((platformTab, index) =>\r\n                    <div\r\n                        key={index}\r\n                        className={platform === platformTab.slug ? \"tab-invert pointer active\" : \"tab-invert pointer\"}\r\n                        onClick={() => this.changePlatform(platformTab)}\r\n                    >\r\n                        {platformTab.label}\r\n                    </div>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getTabs = () => {\r\n        let {\r\n            // refundCategory,\r\n            // platform,\r\n            status\r\n        } = this.props;\r\n        return (\r\n            <div className=\"menu-container\">\r\n                {statuses.map((tab, index) =>\r\n                    <div\r\n                        key={index}\r\n                        className={status === tab.slug ? \"tab pointer active\" : \"tab pointer\"}\r\n                        onClick={() => this.changeTab(tab)}\r\n                    >\r\n                        {tab.label}\r\n                    </div>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleOrderIdChange = (event) => {\r\n        this.setState({ orderId: event.target.value });\r\n    }\r\n\r\n    searchByOrderId = (event) => {\r\n        event.preventDefault();\r\n        let { orderId } = this.state;\r\n        let { refundCategory, platform,\r\n            // status\r\n        } = this.props;\r\n        this.props.getRefundOrdersAction({\r\n            category: refundCategory,\r\n            platform: platform,\r\n            // status: status\r\n            status: orderId\r\n        });\r\n    }\r\n\r\n    getRefundType = (newCategory) => {\r\n        let category = categories.filter(category => category.slug === newCategory);\r\n        return category.length > 0 ? category[0].label : \"\";\r\n    }\r\n\r\n    getStatusName = (newStatus) => {\r\n        let status = statuses.filter(status => status.slug === newStatus);\r\n        return status.length > 0 ? status[0].label : \"\";\r\n    }\r\n\r\n    orderIdSearchComponent = () => {\r\n        return (\r\n            <div className=\"finance-additional-feature\">\r\n                <form className=\"order-id-serach\">\r\n                    <input className=\"input-field\" placeholder=\"Order ID\" onChange={this.handleOrderIdChange} value={this.state.orderId} />\r\n                    <Button\r\n                        label=\"Search\"\r\n                        type=\"submit\"\r\n                        disabled={!this.state.orderId}\r\n                        onClick={this.searchByOrderId}\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoOrders = () => <div className=\"no-orders\">There is No Orders, Please Try After Some Time...</div>\r\n\r\n    render() {\r\n        let { orderId } = this.state;\r\n        const { refundCategory, platform, status, refundOredrs, refreshData } = this.props;\r\n        const title = (this.getRefundType(refundCategory)) + \" - \" + (orderId || this.getStatusName(status));\r\n        let activePlatform = platforms.filter(item => item.slug === platform);\r\n        return (\r\n            <div className=\"finance-module-container\">\r\n                <PageHeader\r\n                    header={title}\r\n                    count={refundOredrs && refundOredrs.count}\r\n                />\r\n                {this.getPlatformTabs()}\r\n                {!orderId && this.getTabs()}\r\n                {this.orderIdSearchComponent()}\r\n                {refundOredrs && Array.isArray(refundOredrs.results) && refundOredrs.results.length > 0 ?\r\n                    <ReturnOrders\r\n                        data={refundOredrs}\r\n                        refundCategory={refundCategory}\r\n                        platform={platform}\r\n                        status={status}\r\n                        orderId={orderId}\r\n                        refreshOrders={refreshData}\r\n                        userRole={\"\"}\r\n                        getRefundOrdersAction={this.props.getRefundOrdersAction}\r\n                        editRefundDetailsAction={this.props.editRefundDetailsAction}\r\n\r\n                        activePlatform={activePlatform.length > 0 && activePlatform[0]}\r\n                        userDetails={this.props.userDetails}\r\n                        submitPaymentTrackId={this.props.submitPaymentTrackId}\r\n                        clickToCall={this.props.clickToCallAction}\r\n                        getMoreModifiedHistoryByOrder={this.props.getMoreModifiedHistoryByOrder}\r\n                        showPopup={this.props.showPopup}\r\n                    /> :\r\n                    this.getNoOrders()\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        refundOredrs: state.financeDetails.financeData,\r\n        refreshData: state.financeDetails.refreshData,\r\n        userDetails: state.userDetails\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        getRefundOrdersAction,\r\n        editRefundDetailsAction,\r\n        resetRefundDetails,\r\n        submitPaymentTrackId,\r\n        clickToCallAction,\r\n        getMoreModifiedHistoryByOrder,\r\n        showPopup\r\n    }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FinanceModule);\r\n"],"sourceRoot":""}