{"version":3,"sources":["containers/Dashboard/components/Timestamp/index.js","components/PaginationComponent/index.js","config/products.js","containers/ProductReviewAndQA/action.js","containers/ProductReviewAndQA/components/reviewAndQAOrderTable/index.js","containers/ProductReviewAndQA/index.js"],"names":["timestampFilter","filter","row","_original","id","String","getDateTime","toLocaleLowerCase","includes","value","Timestamp","props","PaginationComponent","Component","render","this","offset","limit","total","onPrevClick","onNextClick","dropDownValues","onLimitChange","filtered","filteredData","className","disabled","onClick","aria-hidden","Array","isArray","length","onChange","map","option","index","key","defaultProps","products","label","possibleProductToShow","possibleProductToReplace","isRnrResolution","skuTypes","sku","name","getProductNameBySKU","originalSku","split_sku","split","productName","skuTypeExtension","selectedType","type","product","toLocaleUpperCase","getProductById","getPossibleProductsBySku","extractedSku","matchedProducts","getPossibleProductsForReplacement","getAllReviewOrdersAction","data","dispatch","showLoader","getAllReviewOrders","then","response","GET_REVIEW_ORDERS_DATA","getReviewOrdersSuccess","hideLoader","message","toast","success","GET_UPDATED_REVIEW_ORDERS_DATA","catch","error","handleError","resetReviewData","RESET_REVIEW_ORDERS_DATA","ListAllReviewOrderTable","constructor","super","resetPagination","setState","tableData","count","resetTable","console","log","event","Number","target","handleClick","state","requestType","activePlatform","request_type","action","slug","listActions","rowInfo","original","reveiw_id","qa_id","to","is_published","handleSubmit","actions","window","confirm","payload","handleChange","fieldName","fieldValue","userDetails","user_name","user_email_address","user_mobile_number","is_verified_purchase","productType","item_sku","userDetailsFilter","commonFilter","componentDidMount","componentWillReceiveProps","refreshOrders","componentWillUnmount","results","filterable","minRows","pageSize","NoDataComponent","defaultFilterMethod","columns","Header","maxWidth","Cell","accessor","minWidth","filterMethod","show","question","answer","title","description","rating","getNoOrders","Reviewplatforms","isActive","url","ProductReview","getRequestType","location","pathname","platforms","platform","newPlatform","iterationPlatform","history","push","changePlatformTab","changePlatform","getPlatformTabs","tab","productReviewOrder","PageHeader","header","showPopup","connect","ownProps","ProductReviewDetails","reviewOrders","refreshData","bindActionCreators"],"mappings":"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","file":"static/js/16.268f8194.chunk.js","sourcesContent":["import React from 'react';\r\nimport { getDateTime } from '../../../../config/time';\r\n\r\nconst Timestamp = (props) => {\r\n    if (props.value) {\r\n        return <div>{getDateTime(props.value)}</div>\r\n    }\r\n    return \"\"\r\n}\r\n\r\nexport const timestampFilter = (filter, row) => {\r\n    return row._original[filter.id] && String(getDateTime(String(row._original[filter.id]))).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nexport default Timestamp;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nclass PaginationComponent extends Component {\r\n    render() {\r\n        let { offset, limit, total, onPrevClick, onNextClick, dropDownValues, onLimitChange, filtered, filteredData } = this.props;\r\n        return (\r\n            <div className=\"pagination-container\">\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset === 0 ? true : false}\r\n                    onClick={() => onPrevClick(\"prev\")}>\r\n                    <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <div className=\"pagination-text\">{offset} to {offset + limit <= total ? offset + limit : total} of {total}</div>\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset + limit >= total ? true : false}\r\n                    onClick={() => onNextClick(\"next\")}>\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                {Array.isArray(dropDownValues) && dropDownValues.length > 0 && <select className=\"custom-dropdown\" onChange={onLimitChange} value={limit}>\r\n                    {dropDownValues.map((option, index) => <option key={index} value={option}>{option}</option>)}\r\n                </select>}\r\n\r\n                {Array.isArray(filtered) &&\r\n                    filtered.length > 0 &&\r\n                    Array.isArray(filteredData) &&\r\n                    filteredData.length > 0 &&\r\n                    <div className=\"matched-records-data\"><b>Matched Records :</b> {filteredData.length}</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPaginationComponent.defaultProps = {\r\n    offset: 0,\r\n    limit: 0,\r\n    total: 0,\r\n    dropDownValues: []\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n    offset: PropTypes.number.isRequired,\r\n    limit: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    onPrevClick: PropTypes.func.isRequired,\r\n    onNextClick: PropTypes.func.isRequired,\r\n    dropDownValues: PropTypes.array,\r\n    onLimitChange: PropTypes.func\r\n}\r\n\r\nexport default PaginationComponent;","export const products = [{\r\n    id: 1,\r\n    key: \"WOMFM\",\r\n    label: \"Wakefit Orthopaedic Memory Foam Mattress\",\r\n    possibleProductToShow: [1, 2, 3],\r\n    possibleProductToReplace: [1, 2, 3]\r\n}, {\r\n    id: 2,\r\n    key: \"WDCM\",\r\n    label: \"Wakefit Dual Comfort Mattress\",\r\n    possibleProductToShow: [1, 2, 3],\r\n    possibleProductToReplace: [1, 2, 3]\r\n}, {\r\n    id: 3,\r\n    key: \"WHRFM\",\r\n    label: \"Wakefit Full HR Foam Mattress\",\r\n    possibleProductToShow: [1, 2, 3],\r\n    possibleProductToReplace: [1, 2, 3]\r\n}, {\r\n    id: 4,\r\n    key: \"WSWB\",\r\n    label: \"Wakefit Sheesham Wood Bed\",\r\n    possibleProductToShow: [4],\r\n    possibleProductToReplace: [4]\r\n}, {\r\n    id: 5,\r\n    key: \"WSPS\",\r\n    label: \"Wakefit Sleeping Pillow - Single (Height Adjustable)\",\r\n    possibleProductToShow: [27],\r\n    possibleProductToReplace: [27]\r\n}, {\r\n    id: 6,\r\n    key: \"WSPD\",\r\n    label: \"Wakefit Sleeping Pillow - Set of 2 (Height Adjustable)\",\r\n    possibleProductToShow: [27],\r\n    possibleProductToReplace: [27]\r\n}, {\r\n    id: 7,\r\n    key: \"WMFP\",\r\n    label: \"Wakefit Memory Foam Sleeping Pillow\",\r\n    possibleProductToShow: [7],\r\n    possibleProductToReplace: [27]\r\n}, {\r\n    id: 8,\r\n    key: \"WMP\",\r\n    label: \"Wakefit Water Proof Mattress Protector\",\r\n    possibleProductToShow: [8],\r\n    possibleProductToReplace: [8, 11]\r\n}, {\r\n    id: 9,\r\n    key: \"WTNP\",\r\n    label: \"WakeFit Travel Neck Pillow\",\r\n    possibleProductToShow: [9],\r\n    possibleProductToReplace: [9]\r\n}, {\r\n    id: 10,\r\n    key: \"WBSC\",\r\n    label: \"Wakefit Back Rest Support Pillow\",\r\n    possibleProductToShow: [10],\r\n    possibleProductToReplace: [10, 11, 8]\r\n}, {\r\n    id: 11,\r\n    key: \"WFB\",\r\n    label: \"Wakefit Fitted Bedsheets\",\r\n    possibleProductToShow: [11],\r\n    possibleProductToReplace: [11]\r\n}, {\r\n    id: 12,\r\n    key: \"WSMRC\",\r\n    label: \"Wakefit - Siliconised Microfibre Reversible Comforter\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 13,\r\n    key: \"WFTHR\",\r\n    label: \"Wakefit - HR Foam Topper\",\r\n    possibleProductToShow: [14],\r\n    possibleProductToReplace: [14]\r\n}, {\r\n    id: 14,\r\n    // key: \"WFTOPPER\",\r\n    key: \"WFT\",\r\n    label: \"Wakefit - Mattress Topper\",\r\n    possibleProductToShow: [14],\r\n    possibleProductToReplace: [14]\r\n}, {\r\n    id: 15,\r\n    key: \"WFBLEAFY\",\r\n    label: \"Wakefit Fitted Bedsheets - (Leafy Bliss)\",\r\n    possibleProductToShow: [11],\r\n    possibleProductToReplace: [11]\r\n}, {\r\n    id: 16,\r\n    key: \"WFBBUBBLES\",\r\n    label: \"Wakefit Fitted Bedsheets - (Dreamy Bubbles)\",\r\n    possibleProductToShow: [11],\r\n    possibleProductToReplace: [11]\r\n}, {\r\n    id: 17,\r\n    key: \"WFBFLORA\",\r\n    label: \"Wakefit Fitted Bedsheets - (Serene Flora)\",\r\n    possibleProductToShow: [11],\r\n    possibleProductToReplace: [11]\r\n}, {\r\n    id: 18,\r\n    key: \"WSMRCBBS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Brown & Beige) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 19,\r\n    key: \"WSMRCGTS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Green & Teal) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 20,\r\n    key: \"WSMRCNGS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Navy Blue & Grey) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 34,\r\n    key: \"WSMRCFLORAS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Serene Flora) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 35,\r\n    key: \"WSMRCLEAFYS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Leafy Bliss) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 36,\r\n    key: \"WSMRCBUBBLESS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Dreamy Bubbles) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 21,\r\n    key: \"WFTMF\",\r\n    label: \"Wakefit Memory Foam Topper\",\r\n    possibleProductToShow: [14],\r\n    possibleProductToReplace: [14]\r\n}, {\r\n    id: 22,\r\n    key: \"WFTSF\",\r\n    label: \"Wakefit Super Soft (SS) Foam Topper\",\r\n    possibleProductToShow: [14],\r\n    possibleProductToReplace: [14]\r\n}, {\r\n    id: 23,\r\n    key: \"WFTCF\",\r\n    label: \"Wakefit Cool Fit Foam Topper\",\r\n    possibleProductToShow: [14],\r\n    possibleProductToReplace: [14]\r\n}, {\r\n    id: 24,\r\n    key: \"WFPACK\",\r\n    label: \"Wakefit Packaging Material\",\r\n    possibleProductToShow: [24],\r\n    possibleProductToReplace: [24]\r\n}, {\r\n    id: 25,\r\n    key: \"WFOCOVER\",\r\n    label: \"Wakefit Outer Cover\",\r\n    possibleProductToShow: [25],\r\n    isRnrResolution: 5,             // show when rnr_resolution_type === 5\r\n    possibleProductToReplace: [25]\r\n}, {\r\n    id: 26,\r\n    key: \"WMPMAROON\",\r\n    label: \"Wakefit Water Proof Mattress Protector - Maroon\",\r\n    possibleProductToShow: [8],\r\n    possibleProductToReplace: [8, 11]\r\n}, {\r\n    id: 27,\r\n    key: \"WSP\",\r\n    label: \"WakeFit Sleeping Pillow - (Height Adjustable)\",\r\n    possibleProductToShow: [27],\r\n    possibleProductToReplace: [27]\r\n}, {\r\n    id: 28,\r\n    key: \"WSMRCBBD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Brown & Beige) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 29,\r\n    key: \"WSMRCGTD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Green & Teal) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 30,\r\n    key: \"WSMRCNGD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Navy Blue & Grey) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 37,\r\n    key: \"WSMRCFLORAD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Serene Flora) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 38,\r\n    key: \"WSMRCLEAFYD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Leafy Bliss) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 39,\r\n    key: \"WSMRCBUBBLESD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Dreamy Bubbles) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 31,\r\n    key: \"WFOCOVERW\",\r\n    label: \"Wakefit Outer Cover - White\",\r\n    possibleProductToShow: [25],\r\n    possibleProductToReplace: [25]\r\n}, {\r\n    id: 32,\r\n    key: \"WFOCOVERG\",\r\n    label: \"Wakefit Outer Cover - Grey\",\r\n    possibleProductToShow: [25],\r\n    possibleProductToReplace: [25]\r\n}, {\r\n    id: 33,\r\n    key: \"WMPGREY\",\r\n    label: \"Wakefit Water Proof Mattress Protector - Grey\",\r\n    possibleProductToShow: [8],\r\n    possibleProductToReplace: [8, 11]\r\n}, {\r\n    id: 40,\r\n    key: \"WSMRCWD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (White) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 41,\r\n    key: \"WSMRCWS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (White) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}];\r\n\r\nconst skuTypes = [{\r\n    sku: \"SAUG\",\r\n    name: \"Wakefit - Auriga Sheesham Bed with Storage\"\r\n}, {\r\n    sku: \"SAMD\",\r\n    name: \"Wakefit - Andromeda Sheesham Bed with Storage\"\r\n}, {\r\n    sku: \"AUG\",\r\n    name: \"Wakefit - Auriga Sheesham Bed\"\r\n}, {\r\n    sku: \"AMD\",\r\n    name: \"Wakefit - Andromeda Sheesham Bed\"\r\n}, {\r\n    sku: \"LEAFY\",\r\n    name: \"Wakefit Fitted Bedsheets - (Leafy Bliss)\"\r\n}, {\r\n    sku: \"BUBBLES\",\r\n    name: \"Wakefit Fitted Bedsheets - (Dreamy Bubbles)\"\r\n}, {\r\n    sku: \"FLORA\",\r\n    name: \"Wakefit Fitted Bedsheets - (Serene Flora)\"\r\n}, {\r\n    sku: \"WHITE\",\r\n    name: \"Wakefit Fitted Bedsheets - (White)\"\r\n}];\r\n\r\n\r\nexport const getProductNameBySKU = (sku = \"\", originalSku = \"\") => {\r\n    let split_sku = sku.split(/(\\d+)/);\r\n    let productName = \"\";\r\n    // console.log(split_sku, sku);\r\n\r\n    if (((split_sku[0] === \"WSWB\" && !split_sku[split_sku.length - 1].includes(\"COMBO\")) || split_sku[0] === \"WFB\") && (split_sku.length > 2 && split_sku[2] !== \"\")) {\r\n        let skuTypeExtension = split_sku[split_sku.length - 1].split('-');\r\n        let selectedType = skuTypes.filter(type => type.sku === skuTypeExtension[0]);\r\n        selectedType = selectedType.length > 0 ? selectedType[0] : {};\r\n        productName = (selectedType.name + (skuTypeExtension && skuTypeExtension.length > 1 ? skuTypeExtension[1] === 'COVER' ? ' - (Cover)' : '' : '')) || \"\";\r\n    } else {\r\n        let product = products.filter(product => product.key === split_sku[0]);\r\n        product = product.length > 0 ? product[0] : {}\r\n        productName = product.label || \"\";\r\n    }\r\n\r\n    if (split_sku[split_sku.length - 1].includes(\"COMBO\")) {\r\n        productName = productName + \" - COMBO\";\r\n    }\r\n    if (originalSku.includes(\"WDCM\") && sku.includes(\"WDCM\")) {\r\n        if (originalSku.includes(\"-COVER\")) productName += \" - (Cover)\";\r\n        else if (originalSku.includes(\"-ZIPPER\")) productName += \" - (Zipper)\";\r\n    }\r\n\r\n    if (sku.toLocaleUpperCase() === \"WFSBDCM78605\") {\r\n        productName = \"Wakefit Sleep Box with sleep accessories and 5 inch Queen High Resilience (HR) Foam Mattress 78 inch SBDCM78605 60 inch\";\r\n    } else if (sku.toLocaleUpperCase() === \"WFSBDCM78725\") {\r\n        productName = \"Wakefit Sleep Box with sleep accessories and 5 inch Queen High Resilience (HR) Foam Mattress 78 inch SBDCM78725 72 inch\";\r\n    }\r\n\r\n    // if (sku.toLocaleUpperCase().includes(\"WFSBDCM\") || sku.toLocaleUpperCase().includes(\"WFSBDCM\")) {\r\n    //     productName = `Wakefit Sleep Box with sleep accessories and ${sku.toLocaleUpperCase().includes('7872') ? \"King\" : sku.toLocaleUpperCase().includes('7860') ? 'Queen' : ''} ${sku.toLocaleUpperCase().includes('DC') ? 'High Resilience Foam (HR)' : sku.toLocaleUpperCase().includes('MF') ? 'Memory Foam (MF)' : ''} Mattress ${sku}`;\r\n    // }\r\n\r\n    // console.log(sku, split_sku, productName);\r\n\r\n    return productName // product.label || \"\";\r\n}\r\n\r\nexport const getProductById = (id) => {\r\n    return products.filter(product => product.id === id).length > 0 ? products.filter(product => product.id === id)[0] : {};\r\n}\r\n\r\nexport const getPossibleProductsBySku = (sku) => {\r\n    let extractedSku = sku.split(/(\\d+)/)[0];\r\n    let matchedProducts = products\r\n        .filter(product => product.key === extractedSku);\r\n    let possibleProducts = matchedProducts.length > 0 ?\r\n        matchedProducts[0].possibleProductToShow\r\n            .map(id => getProductById(id))\r\n        : [];\r\n    return possibleProducts\r\n}\r\n\r\nexport const getPossibleProductsForReplacement = (sku) => {\r\n    let matchedProducts = products.filter(product => sku.includes(product.key));\r\n    let possibleProducts = matchedProducts.length > 0 ?\r\n        matchedProducts[0].possibleProductToReplace.map(id => getProductById(id))\r\n        : [];\r\n    // console.log(sku, matchedProducts, possibleProducts);\r\n    return possibleProducts;\r\n}\r\n","import { hideLoader, showLoader } from \"../../components/Loader/action\";\r\nimport handleError from \"../../errorHandler\";\r\nimport { getAllReviewOrders } from \"../../api\";\r\nimport { GET_REVIEW_ORDERS_DATA, GET_UPDATED_REVIEW_ORDERS_DATA, RESET_REVIEW_ORDERS_DATA } from \"./constants\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport function getAllReviewOrdersAction(data) {\r\n    return (dispatch) => {\r\n        dispatch(showLoader());\r\n        getAllReviewOrders(data)\r\n            .then(response => {\r\n                dispatch(getReviewOrdersSuccess(response.data));\r\n                dispatch(hideLoader());\r\n                response.data.message && toast.success(response.data.message) && dispatch(getUpdatedReviewOrders())\r\n            })\r\n            .catch(error => {\r\n                handleError(error, dispatch);\r\n            });\r\n    };\r\n}\r\n\r\nexport function getReviewOrdersSuccess(data) {\r\n    return {\r\n        type: GET_REVIEW_ORDERS_DATA,\r\n        data\r\n    }\r\n}\r\n\r\nexport function getUpdatedReviewOrders() {\r\n    return {\r\n        type: GET_UPDATED_REVIEW_ORDERS_DATA\r\n    }\r\n}\r\n\r\nexport function resetReviewData() {\r\n    return {\r\n        type: RESET_REVIEW_ORDERS_DATA\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactTable from 'react-table';\r\nimport Timestamp, { timestampFilter } from '../../../Dashboard/components/Timestamp';\r\nimport PaginationComponent from '../../../../components/PaginationComponent';\r\nimport { getProductNameBySKU } from '../../../../config/products';\r\n\r\nconst dropDownValues = [50, 100, 150, 200, 300, 400];\r\nclass ListAllReviewOrderTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            offset: 0,\r\n            limit: 100,\r\n            total: 0,\r\n            data: {\r\n                is_verified_purchase: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.tableData && this.props.tableData.count && Number(this.props.tableData.count) !== Number(this.state.total)) {\r\n            this.setState({\r\n                total: this.props.tableData.count\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        let {\r\n            limit,\r\n            offset,\r\n            // total\r\n        } = this.state;\r\n        let { getAllReviewOrdersAction, requestType, activePlatform } = props;\r\n        console.log(props)\r\n        if (props.tableData && props.tableData.count && Number(props.tableData.count) !== Number(this.state.total)) {\r\n            this.setState({\r\n                total: props.tableData.count\r\n            });\r\n        }\r\n        if (props.refreshOrders) {\r\n            getAllReviewOrdersAction && getAllReviewOrdersAction({\r\n                limit, offset, request_type: requestType,\r\n                action: activePlatform.slug,\r\n            });\r\n        } else if ((this.props.activePlatform && this.props.activePlatform.slug !== props.activePlatform.slug)) {\r\n            this.resetPagination();\r\n            this.resetTable();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.resetTable();\r\n    }\r\n\r\n    resetPagination = () => {\r\n        this.setState({\r\n            offset: 0,\r\n            limit: 100,\r\n            total: this.props.tableData.count || 0,\r\n        })\r\n    }\r\n\r\n    resetTable = () => {\r\n        console.log(\"Reseting...\");\r\n    }\r\n\r\n    onLimitChange = (event) => {\r\n        this.setState({ limit: Number(event.target.value) }, () => this.handleClick(\"reset\"));\r\n    }\r\n\r\n    handleClick = (type) => {\r\n        let { limit, offset, total } = this.state;\r\n        let { getAllReviewOrdersAction, requestType, activePlatform } = this.props;\r\n        this.setState({\r\n            offset: type === \"next\" ?\r\n                offset + limit < total ? offset + limit : offset\r\n                :\r\n                type === \"prev\" && offset - limit >= 0 ? offset - limit : 0\r\n        }, () => {\r\n            let { limit, offset } = this.state;\r\n            getAllReviewOrdersAction && getAllReviewOrdersAction({\r\n                limit, offset, request_type: requestType,\r\n                action: activePlatform.slug,\r\n            });\r\n        });\r\n    }\r\n\r\n    listActions = (row) => {\r\n        let rowInfo = row.original;\r\n        let { requestType } = this.props;\r\n        return (\r\n            <div className=\"actions\">\r\n                {rowInfo &&\r\n                    (rowInfo.reveiw_id || rowInfo.qa_id) &&\r\n                    <div className=\"edit\"><Link to={`/user-${requestType}-edit/${rowInfo.id}`} target=\"_blank\">Edit</Link></div>}\r\n                <div>{Number(rowInfo.is_published) === 1 ?\r\n                    <div className=\"cursor-pointer custom-badge\" onClick={() => this.handleSubmit(rowInfo, 'is_published', 0)}>Un-Publish</div> :\r\n                    <div className=\"cursor-pointer custom-badge\" onClick={() => this.handleSubmit(rowInfo, 'is_published', 1)}>Publish</div>}\r\n                </div>\r\n                <div className=\"cursor-pointer custom-badge\" onClick={() => this.handleSubmit(rowInfo, \"is_delete\", 1)}>Delete</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleSubmit = (rowInfo, key, value) => {\r\n        let { limit, offset } = this.state;\r\n        let { requestType } = this.props;\r\n        let actions = (key === \"is_published\" ? \"update\" :\r\n            key === \"is_delete\" ? \"delete\" : \"\");\r\n        // console.log(rowInfo, key, value);\r\n        let check = window.confirm(`Are you sure want to ${actions}?`);\r\n        if (check) {\r\n            let payload = {\r\n                id: rowInfo.id,\r\n                limit,\r\n                offset,\r\n                [key]: value,\r\n                action: actions,\r\n                request_type: requestType\r\n            }\r\n            console.log(payload)\r\n            this.props.getAllReviewOrdersAction(payload);\r\n        }\r\n    }\r\n\r\n    handleChange = (event, rowInfo) => {\r\n        let { limit, offset } = this.state;\r\n        let { requestType } = this.props;\r\n        let Check = window.confirm(\"Are you sure want to update?\");\r\n        if (Check) {\r\n            let fieldName = event.target.name;\r\n            let fieldValue = event.target.value;\r\n            let payload = {\r\n                id: rowInfo.id,\r\n                [fieldName]: fieldValue,\r\n                limit,\r\n                offset,\r\n                action: \"update\",\r\n                request_type: requestType,\r\n            }\r\n            this.props.getAllReviewOrdersAction(payload);\r\n        }\r\n    }\r\n\r\n    userDetails = (row) => {\r\n        let rowInfo = row.original;\r\n        let { requestType, activePlatform } = this.props;\r\n        return <div className=\"user-details break-word\">\r\n            <div className=\"break-word\"><b>Name :</b> {rowInfo.user_name}</div>\r\n            <div className=\"break-word\"><b>Email :</b> {rowInfo.user_email_address}</div>\r\n            <div className=\"break-word\"><b>Mobile Number :</b> {rowInfo.user_mobile_number}</div>\r\n            {activePlatform &&\r\n                activePlatform.slug &&\r\n                activePlatform.slug === \"list\" &&\r\n                requestType === \"review\" &&\r\n                < div className=\"break-word\"><b>Verification of Purchase :</b>\r\n                    <select className=\"custom-dropdown\"\r\n                        name=\"is_verified_purchase\"\r\n                        onChange={(event) => this.handleChange(event, rowInfo)}\r\n                        value={rowInfo.is_verified_purchase}\r\n                    >\r\n                        <option value={1}>Verified</option>\r\n                        <option value={0}>Not Verified</option>\r\n                    </select>\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n    productType = (row) => {\r\n        let rowInfo = row.original;\r\n        return <div className=\"break-word\">\r\n            {getProductNameBySKU(rowInfo.item_sku)}\r\n        </div>\r\n    }\r\n\r\n    userDetailsFilter = (filter, row) => {\r\n        return (row._original[\"user_name\"] && String(row._original[\"user_name\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())) ||\r\n            (row._original[\"user_email_address\"] && String(row._original[\"user_email_address\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())) ||\r\n            (row._original[\"user_mobile_number\"] && String(row._original[\"user_mobile_number\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()))\r\n    }\r\n\r\n    commonFilter = (filter, row) => {\r\n        return (row._original[\"description\"] && String(row._original[\"description\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()))\r\n    }\r\n\r\n    render() {\r\n        let { tableData } = this.props;\r\n        console.log(this.props);\r\n\r\n        return (\r\n            <div className=\"review-order-table-container\">\r\n                {tableData.results &&\r\n                    Array.isArray(tableData.results) &&\r\n                    tableData.results.length > 0\r\n                    ? <ReactTable\r\n                        data={tableData.results}\r\n                        filterable\r\n                        minRows={0}\r\n                        pageSize={999}\r\n                        PaginationComponent={() =>\r\n                            <PaginationComponent\r\n                                dropDownValues={dropDownValues}\r\n                                onLimitChange={this.onLimitChange}\r\n                                offset={this.state.offset}\r\n                                total={this.state.total}\r\n                                limit={this.state.limit}\r\n                                onPrevClick={this.handleClick}\r\n                                onNextClick={this.handleClick}\r\n                            />\r\n                        }\r\n                        NoDataComponent={() => null}\r\n                        defaultFilterMethod={(filter, row) =>\r\n                            String(row[filter.id]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())}\r\n                        columns={[{\r\n                            Header: 'S.No',\r\n                            id: 'row',\r\n                            maxWidth: 50,\r\n                            filterable: false,\r\n                            Cell: (row) => <div>{row.index + 1}</div>\r\n                        }, {\r\n                            Header: \"Product\",\r\n                            accessor: \"product\",\r\n                            minWidth: 165,\r\n                            Cell: this.productType,\r\n                            filterMethod: (filter, row) => {\r\n                                return (String(getProductNameBySKU(row._original[\"item_sku\"])).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()))\r\n                            }\r\n                        }, {\r\n                            Header: \"User Details\",\r\n                            accessor: \"userDetails\",\r\n                            minWidth: 220,\r\n                            Cell: this.userDetails,\r\n                            filterMethod: this.userDetailsFilter\r\n                        }, {\r\n                            Header: \"Question\",\r\n                            accessor: \"Question\",\r\n                            minWidth: 250,\r\n                            show: this.props.requestType === \"qa\",\r\n                            filterMethod: (filter, row) => {\r\n                                return (row._original[\"question\"] && String(row._original[\"question\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()))\r\n                            },\r\n                            Cell: (row) => <div>\r\n                                {row.original && <div className=\"break-word\">\r\n                                    {row.original.question}</div>}\r\n                            </div>\r\n                        }, {\r\n                            Header: \"Answer\",\r\n                            accessor: \"Answer\",\r\n                            minWidth: 300,\r\n                            show: this.props.requestType === \"qa\",\r\n                            filterMethod: (filter, row) => {\r\n                                return (row._original[\"answer\"] && String(row._original[\"answer\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()))\r\n                            },\r\n                            Cell: (row) => <div>\r\n                                {row.original && <div className=\"break-word\">\r\n                                    {row.original.answer}</div>}\r\n                            </div>\r\n                        }, {\r\n                            Header: \"Title\",\r\n                            accessor: \"Title\",\r\n                            minWidth: 175,\r\n                            show: this.props.requestType === \"review\",\r\n                            filterMethod: (filter, row) => {\r\n                                return (row._original[\"title\"] && String(row._original[\"title\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()))\r\n                            },\r\n                            Cell: (row) => <div>\r\n                                {row.original && <div className=\"break-word\">\r\n                                    {row.original.title}</div>}\r\n                            </div>\r\n                        }, {\r\n                            Header: \"Description\",\r\n                            accessor: \"Description\",\r\n                            minWidth: 250,\r\n                            show: this.props.requestType === \"review\",\r\n                            filterMethod: (filter, row) => {\r\n                                return (row._original[\"description\"] && String(row._original[\"description\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()))\r\n                            },\r\n                            Cell: (row) => <div>\r\n                                {row.original && <div className=\"break-word\">\r\n                                    {row.original.description}</div>}\r\n                            </div>\r\n                        }, {\r\n                            Header: \"Rating\",\r\n                            accessor: \"Rating\",\r\n                            minWidth: 80,\r\n                            show: this.props.requestType === \"review\",\r\n                            filterMethod: (filter, row) => (row._original[\"rating\"] && String(row._original[\"rating\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())),\r\n                            Cell: (row) => <div>{row.original && <div className=\"break-word\">{row.original.rating + ' stars'}</div>}</div>\r\n                        }, {\r\n                            Header: \"Created Timestamp\",\r\n                            accessor: \"created_timestamp\",\r\n                            minWidth: 150,\r\n                            Cell: Timestamp,\r\n                            filterMethod: timestampFilter\r\n                        }, {\r\n                            Header: \"Updated Timestamp\",\r\n                            accessor: \"updated_timestamp\",\r\n                            minWidth: 150,\r\n                            Cell: Timestamp,\r\n                            filterMethod: timestampFilter\r\n                        }, {\r\n                            Header: \"Actions\",\r\n                            accessor: \"actions\",\r\n                            filterable: false,\r\n                            minWidth: 135,\r\n                            show: this.props.activePlatform && this.props.activePlatform.slug === \"list\",\r\n                            Cell: this.listActions\r\n                        }]}\r\n                    /> :\r\n                    this.props.getNoOrders()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListAllReviewOrderTable;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport './style.scss';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport { getAllReviewOrdersAction } from './action';\r\nimport ListAllReviewOrderTable from \"./components/reviewAndQAOrderTable\";\r\nimport { showPopup } from '../../components/Popup/action';\r\n\r\nconst Reviewplatforms = [{\r\n    id: 1,\r\n    label: \"All\",\r\n    slug: \"list\",\r\n    isActive: 1\r\n}, {\r\n    id: 2,\r\n    label: \"Deleted\",\r\n    slug: \"listdeleted\",\r\n    isActive: 1\r\n}];\r\n\r\nconst url = {\r\n    'qa': '/list-of-qa-orders/',\r\n    'review': '/list-of-review-orders/'\r\n}\r\n\r\nclass ProductReview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            platforms: [],\r\n            requestType: ''\r\n        }\r\n    }\r\n\r\n    getRequestType = () => {\r\n        return (\r\n            this.props.location.pathname.includes('/list-of-qa-orders/') ?\r\n                'qa' : this.props.location.pathname.includes('/list-of-review-orders/') ?\r\n                    'review' : ''\r\n        );\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let requestType = this.getRequestType();\r\n        if (requestType) {\r\n            this.setState({ requestType }, () => {\r\n                let { platforms } = this.state;\r\n                let { platform } = this.props;\r\n                // console.log(this.props.location.pathname)\r\n                let newPlatform = Reviewplatforms.filter(iterationPlatform => iterationPlatform.slug === platform);\r\n                if (newPlatform.length === 0) {\r\n                    this.props.history.push(url[requestType] + Reviewplatforms[0].slug);\r\n                }\r\n                this.setState({\r\n                    platforms,\r\n                    activePlatform: newPlatform[0] || Reviewplatforms[0],\r\n                }, () => {\r\n                    this.changePlatformTab(this.state.activePlatform)\r\n                });\r\n            });\r\n        } else {\r\n            this.props.history.push('/list-of-review-orders/');\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if ((this.props.location.pathname.includes('/list-of-qa-orders/') &&\r\n            props.location.pathname.includes('/list-of-review-orders/')) ||\r\n            (props.location.pathname.includes('/list-of-qa-orders/') &&\r\n                this.props.location.pathname.includes('/list-of-review-orders/'))\r\n        ) {\r\n            let requestType = this.getRequestType();\r\n            this.props.history.push(url[requestType]);\r\n        }\r\n    }\r\n\r\n    changePlatformTab = (activePlatform) => {\r\n        let { platform } = this.props;\r\n        let { requestType } = this.state;\r\n        if (activePlatform.slug !== platform) {\r\n            this.props.history.push(`${url[requestType]}${activePlatform.slug}`);\r\n        }\r\n        this.props.getAllReviewOrdersAction({\r\n            request_type: requestType,\r\n            action: activePlatform.slug,\r\n            limit: 100,\r\n            offset: 0\r\n        })\r\n    }\r\n\r\n    changePlatform = (activePlatform) => {\r\n        this.setState({ activePlatform }, () => this.changePlatformTab(activePlatform));\r\n    }\r\n\r\n    getPlatformTabs = () =>\r\n        <div className=\"menu-container\">\r\n            {Reviewplatforms.map((tab, index) =>\r\n                <div\r\n                    key={index}\r\n                    className={this.state.activePlatform && this.state.activePlatform.slug === tab.slug ? \"tab pointer active\" : \"tab pointer\"}\r\n                    onClick={() => this.changePlatform(tab)}\r\n                >\r\n                    {tab.label}\r\n                </div>)\r\n            }\r\n        </div>\r\n\r\n    getNoOrders = () => <div className=\"no-orders\">There is No Review Order, Please Try After Some Time...</div>\r\n\r\n    render() {\r\n        let { productReviewOrder, refreshOrders, userDetails, getAllReviewOrdersAction } = this.props;\r\n        let { activePlatform, requestType } = this.state;\r\n        let titleName = requestType === \"qa\" ? \"Question Answers\" : requestType === \"review\" ? \"Product Review\" : \"\";\r\n        let title = `${titleName} list ${(productReviewOrder && productReviewOrder.count ? `- (${productReviewOrder.count})` : '')}`;\r\n        console.log(this.props);\r\n\r\n        return (\r\n            <div className=\"qa-review-container\">\r\n                <PageHeader\r\n                    header={title}\r\n                />\r\n                {this.getPlatformTabs()}\r\n                {productReviewOrder &&\r\n                    <ListAllReviewOrderTable\r\n                        userDetails={userDetails}\r\n                        requestType={requestType}\r\n                        activePlatform={activePlatform}\r\n                        tableData={productReviewOrder}\r\n                        refreshOrders={refreshOrders}\r\n                        getNoOrders={this.getNoOrders}\r\n                        getAllReviewOrdersAction={getAllReviewOrdersAction}\r\n                        showPopup={showPopup}\r\n                    />\r\n                }\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        userDetails: state.userDetails,\r\n        productReviewOrder: state.ProductReviewDetails.reviewOrders,\r\n        refreshOrders: state.ProductReviewDetails.refreshData\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        getAllReviewOrdersAction\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductReview);"],"sourceRoot":""}