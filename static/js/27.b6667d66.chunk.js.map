{"version":3,"sources":["containers/Dashboard/components/Timestamp/index.js","components/PaginationComponent/index.js","containers/CetActivityList/action.js","containers/CetActivityList/index.js"],"names":["timestampFilter","filter","row","_original","id","String","getDateTime","toLocaleLowerCase","includes","value","Timestamp","props","PaginationComponent","Component","render","this","offset","limit","total","onPrevClick","onNextClick","dropDownValues","onLimitChange","filtered","filteredData","className","disabled","onClick","aria-hidden","Array","isArray","length","onChange","map","option","index","key","defaultProps","getCetSalesActivityAction","dispatch","showLoader","getCetSalesActivity","then","response","data","hideLoader","type","GET_CET_SALES_ACTIVITY","catch","error","handleError","resetCetSalesActivity","RESET_CET_SALES_ACTIVITY","CetActivityList","constructor","super","userIdDetails","rowInfo","original","name","email","mobile","showActivity","loginId","getActivitiesAction","currentSatusFormatter","status","login_id","getNoDataComponent","event","setState","Number","target","handleClick","state","componentWillMount","componentWillUnmount","componentWillReceiveProps","membersActivity","count","console","log","PageHeader","header","Button","label","results","filterable","minRows","pageSize","NoDataComponent","defaultFilterMethod","columns","Header","maxWidth","Cell","accessor","minWidth","filterMethod","connect","ownProps","cetActivity","bindActionCreators"],"mappings":"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","file":"static/js/27.b6667d66.chunk.js","sourcesContent":["import React from 'react';\r\nimport { getDateTime } from '../../../../config/time';\r\n\r\nconst Timestamp = (props) => {\r\n    if (props.value) {\r\n        return <div>{getDateTime(props.value)}</div>\r\n    }\r\n    return \"\"\r\n}\r\n\r\nexport const timestampFilter = (filter, row) => {\r\n    return row._original[filter.id] && String(getDateTime(String(row._original[filter.id]))).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nexport default Timestamp;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nclass PaginationComponent extends Component {\r\n    render() {\r\n        let { offset, limit, total, onPrevClick, onNextClick, dropDownValues, onLimitChange, filtered, filteredData } = this.props;\r\n        return (\r\n            <div className=\"pagination-container\">\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset === 0 ? true : false}\r\n                    onClick={() => onPrevClick(\"prev\")}>\r\n                    <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <div className=\"pagination-text\">{offset} to {offset + limit <= total ? offset + limit : total} of {total}</div>\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset + limit >= total ? true : false}\r\n                    onClick={() => onNextClick(\"next\")}>\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                {Array.isArray(dropDownValues) && dropDownValues.length > 0 && <select className=\"custom-dropdown\" onChange={onLimitChange} value={limit}>\r\n                    {dropDownValues.map((option, index) => <option key={index} value={option}>{option}</option>)}\r\n                </select>}\r\n\r\n                {Array.isArray(filtered) &&\r\n                    filtered.length > 0 &&\r\n                    Array.isArray(filteredData) &&\r\n                    filteredData.length > 0 &&\r\n                    <div className=\"matched-records-data\"><b>Matched Records :</b> {filteredData.length}</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPaginationComponent.defaultProps = {\r\n    offset: 0,\r\n    limit: 0,\r\n    total: 0,\r\n    dropDownValues: []\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n    offset: PropTypes.number.isRequired,\r\n    limit: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    onPrevClick: PropTypes.func.isRequired,\r\n    onNextClick: PropTypes.func.isRequired,\r\n    dropDownValues: PropTypes.array,\r\n    onLimitChange: PropTypes.func\r\n}\r\n\r\nexport default PaginationComponent;","import { GET_CET_SALES_ACTIVITY, RESET_CET_SALES_ACTIVITY } from \"./constants\";\r\nimport { showLoader, hideLoader } from \"../../components/Loader/action\";\r\nimport handleError from \"../../errorHandler\";\r\nimport { getCetSalesActivity } from \"../../api\";\r\n\r\nexport function getCetSalesActivityAction(limit, offset) {\r\n    return (dispatch) => {\r\n        dispatch(showLoader());\r\n        getCetSalesActivity(limit, offset)\r\n            .then(response => {\r\n                dispatch(hideLoader());\r\n                dispatch(getCetSalesActivitySuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                handleError(error, dispatch);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getCetSalesActivitySuccess(data) {\r\n    return {\r\n        type: GET_CET_SALES_ACTIVITY,\r\n        data\r\n    }\r\n}\r\n\r\nexport function resetCetSalesActivity() {\r\n    return {\r\n        type: RESET_CET_SALES_ACTIVITY\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport { getCetSalesActivityAction, resetCetSalesActivity } from './action';\r\nimport { getActivitiesAction } from '../Activity/action';\r\nimport Timestamp, { timestampFilter } from '../Dashboard/components/Timestamp';\r\nimport Button from '../../components/Button';\r\nimport PaginationComponent from '../../components/PaginationComponent';\r\n\r\nconst dropDownValues = [100, 150, 200, 250, 300];\r\nclass CetActivityList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            offset: 0,\r\n            limit: 100,\r\n            total: 0,\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getCetSalesActivityAction();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetCetSalesActivity();\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        // console.log(props)\r\n        if (props.membersActivity) {\r\n            this.setState({\r\n                total: props.membersActivity.count\r\n            });\r\n        }\r\n    }\r\n\r\n    userIdDetails = (props) => {\r\n        let rowInfo = props.original;\r\n        return <div>\r\n            <div>{rowInfo.name}</div>\r\n            <div>{rowInfo.email}</div>\r\n            <div>{rowInfo.mobile}</div>\r\n        </div>\r\n    }\r\n\r\n    showActivity = (loginId) => {\r\n        this.props.getActivitiesAction(loginId);\r\n    }\r\n\r\n    currentSatusFormatter = (props) => {\r\n        let rowInfo = props.original;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <b>Status : </b> {rowInfo.status ? <span className=\"activity-status\" onClick={() => this.showActivity(rowInfo.login_id)}>{rowInfo.status}</span> : \"NA\"}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoDataComponent = () => <div>No Data...</div>\r\n\r\n    onLimitChange = (event) => {\r\n        this.setState({ limit: Number(event.target.value) }, () => this.handleClick(\"reset\"));\r\n    }\r\n\r\n    handleClick = (type) => {\r\n        let { limit, offset, total } = this.state;\r\n        this.setState({\r\n            offset: type === \"next\" ?\r\n                offset + limit < total ? offset + limit : offset\r\n                :\r\n                type === \"prev\" && offset - limit >= 0 ? offset - limit : 0\r\n        }, () => {\r\n            let { limit, offset } = this.state;\r\n            this.props.getCetSalesActivityAction(limit, offset);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { membersActivity } = this.props;\r\n        console.log(this.props);\r\n        return (\r\n            <div className=\"cet-sales-activity-container\">\r\n                <PageHeader\r\n                    header={\"CET/Sales Team - Activity Status\"}\r\n                    count={membersActivity && membersActivity.count}\r\n                />\r\n                <div className=\"additional-feature\">\r\n                    <Button label=\"Refresh\"\r\n                        className=\"refresh-button\"\r\n                        onClick={() => this.props.getCetSalesActivityAction()}\r\n                    />\r\n                </div>\r\n                {membersActivity && Array.isArray(membersActivity.results) ? <ReactTable\r\n                    data={membersActivity.results} // verify once API is ready\r\n                    filterable\r\n                    minRows={0}\r\n                    pageSize={999}\r\n                    PaginationComponent={() =>\r\n                        <PaginationComponent\r\n                            dropDownValues={dropDownValues}\r\n                            onLimitChange={this.onLimitChange}\r\n                            offset={this.state.offset}\r\n                            total={this.state.total}\r\n                            limit={this.state.limit}\r\n                            onPrevClick={this.handleClick}\r\n                            onNextClick={this.handleClick}\r\n                        />\r\n                    }\r\n                    // PaginationComponent={() => null}\r\n                    NoDataComponent={() => null}\r\n                    defaultFilterMethod={(filter, row) =>\r\n                        String(row[filter.id]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())}\r\n                    columns={[{\r\n                        Header: 'S.No',\r\n                        id: 'row',\r\n                        maxWidth: 50,\r\n                        filterable: false,\r\n                        Cell: (row) => <div>{row.index + 1}</div>\r\n                    }, {\r\n                        Header: \"Type\",\r\n                        accessor: \"member_type\",\r\n                        minWidth: 150,\r\n                    }, {\r\n                        Header: \"User Details\",\r\n                        accessor: \"user_detail\",\r\n                        minWidth: 250,\r\n                        Cell: this.userIdDetails,\r\n                        filterMethod: (filter, row) => {\r\n                            return (row._original[\"name\"] && String(row._original[\"name\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())) ||\r\n                                (row._original[\"email\"] && String(row._original[\"email\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())) ||\r\n                                (row._original[\"mobile\"] && String(row._original[\"mobile\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())) ||\r\n                                (row[filter.id] && String(row[filter.id]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()))\r\n                        }\r\n                    }, {\r\n                        Header: \"Current Status\",\r\n                        accessor: \"status\",\r\n                        minWidth: 250,\r\n                        Cell: this.currentSatusFormatter\r\n                    }, {\r\n                        Header: \"History\",\r\n                        accessor: \"last_activity_timestamp\",\r\n                        minWidth: 250,\r\n                        Cell: Timestamp,\r\n                        filterMethod: timestampFilter\r\n                    }]}\r\n                /> :\r\n                    this.getNoDataComponent()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        membersActivity: state.cetActivity.cetActivity\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ getCetSalesActivityAction, resetCetSalesActivity, getActivitiesAction }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CetActivityList);\r\n"],"sourceRoot":""}