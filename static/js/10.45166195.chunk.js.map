{"version":3,"sources":["containers/Dashboard/components/Timestamp/index.js","components/PaginationComponent/index.js","../node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js","../node_modules/@material-ui/core/esm/utils/useControlled.js","config/constants.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","config/platforms.js","config/helpdeskTicketStatuses.js","containers/Dashboard/components/CustomerComments/index.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","containers/RTModule/components/Table.js","containers/RTModule/index.js"],"names":["timestampFilter","filter","row","_original","id","String","getDateTime","toLocaleLowerCase","includes","value","Timestamp","props","PaginationComponent","Component","render","this","offset","limit","total","onPrevClick","onNextClick","dropDownValues","onLimitChange","filtered","filteredData","className","disabled","onClick","aria-hidden","Array","isArray","length","onChange","map","option","index","key","defaultProps","createSvgIcon","path","displayName","React","ref","SvgIcon","_extends","muiName","useControlled","_ref","controlled","defaultProp","default","isControlled","name","undefined","current","_React$useState","valueState","setValue","newValue","paginationDropdownValues","paginationDefaultSize","_slicedToArray","arr","i","arrayWithHoles","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","_s","_i","next","done","push","err","nonIterableRest","_arrayWithHoles","_nonIterableRest","TypeError","platforms","label","slug","role","getPlatformsByRole","platform","helpDeskTickets","isActive","CustomerCommentsDetails","rowInfo","original","tickets","ticket","Tooltip","title","placement","arrow","href","process","target","without","rel","status","getHelpdeskTicketStatusById","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","classes","defaultChecked","disabledProp","icon","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","type","other","_objectWithoutProperties","_useControlled","Boolean","_useControlled2","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","component","clsx","root","event","input","newChecked","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","color","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","concat","capitalize","theme","typography","caption","button","overline","srOnly","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","FormControlLabel","control","_props$labelPlacement","labelPlacement","controlProps","forEach","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","fontSize","backgroundColor","fade","action","hoverOpacity","Table","constructor","super","resetTable","console","log","setState","bulkOrder","isUpdatingBulk","orderStatusData","resetPagination","data","count","Number","handleClick","state","activePlatform","activeTab","userRole","cetId","userDetails","getAllOrdersByRole","getAllOrdersByRoleByCet","statusFilter","status_detail","selectCart","keys","order_random_id","affiliate_id","orm_order_status","order","selectBulk","style","getFbaStatusCanBeUpdated","currentStatusId","possibleStatusToShow","getOrderStatusById","getComments","requestDataForComments","order_id","cart_id","getCommentsByOrder","statusFormatter","today","getTodayDate","orderData","cell","statuses","getPossibleStatusCanBeUpdated","updatedOrmOrderStatus","hasOwnProperty","delivered_timestamp","getShipmentStatus","getLockedStatus","handleOrderStatusChange","rows","cols","placeholder","min","Button","handleSubmitOrderStatus","window","confirm","submitOrderStatus","status_comments","status_date","fieldName","fieldValue","editingIndex","editingObj","updateOrders","searchByOrderId","preventDefault","orderId","serachByOrderId","handleOrderIdChange","componentWillReceiveProps","refreshOrders","currentRole","results","componentWillUnmount","orderIdSearch","tableData","getNoOrders","filterable","minRows","pageSize","NoDataComponent","defaultFilterMethod","columns","Header","maxWidth","Cell","accessor","show","affiliateIdFormatter","filterMethod","affiliateIdFilter","OrderId","isRTModule","updateCustomer","submitPaymentTrackId","orderIdColumnFilter","CartDetails","allOrders","getMoreModifiedHistoryByOrder","cartDetailsFilter","CustomerDetails","showPopup","clickToCall","customerDetailFilter","FBAtabs","accessibleByRole","RTModule","changePlatform","tabs","getStatusTabsByRole","changeTab","history","resetOrders","getPlatformTabs","tab","orders","Badge","badgeContent","getTabs","componentDidMount","newPlatform","iterationPlatform","newTab","iterationtab","platformSlug","tabSlug","clickToCallAction","PageHeader","header","connect","ownProps","general","ordersData","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/10.45166195.chunk.js","sourcesContent":["import React from 'react';\r\nimport { getDateTime } from '../../../../config/time';\r\n\r\nconst Timestamp = (props) => {\r\n    if (props.value) {\r\n        return <div>{getDateTime(props.value)}</div>\r\n    }\r\n    return \"\"\r\n}\r\n\r\nexport const timestampFilter = (filter, row) => {\r\n    return row._original[filter.id] && String(getDateTime(String(row._original[filter.id]))).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nexport default Timestamp;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nclass PaginationComponent extends Component {\r\n    render() {\r\n        let { offset, limit, total, onPrevClick, onNextClick, dropDownValues, onLimitChange, filtered, filteredData } = this.props;\r\n        return (\r\n            <div className=\"pagination-container\">\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset === 0 ? true : false}\r\n                    onClick={() => onPrevClick(\"prev\")}>\r\n                    <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <div className=\"pagination-text\">{offset} to {offset + limit <= total ? offset + limit : total} of {total}</div>\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset + limit >= total ? true : false}\r\n                    onClick={() => onNextClick(\"next\")}>\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                {Array.isArray(dropDownValues) && dropDownValues.length > 0 && <select className=\"custom-dropdown\" onChange={onLimitChange} value={limit}>\r\n                    {dropDownValues.map((option, index) => <option key={index} value={option}>{option}</option>)}\r\n                </select>}\r\n\r\n                {Array.isArray(filtered) &&\r\n                    filtered.length > 0 &&\r\n                    Array.isArray(filteredData) &&\r\n                    filteredData.length > 0 &&\r\n                    <div className=\"matched-records-data\"><b>Matched Records :</b> {filteredData.length}</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPaginationComponent.defaultProps = {\r\n    offset: 0,\r\n    limit: 0,\r\n    total: 0,\r\n    dropDownValues: []\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n    offset: PropTypes.number.isRequired,\r\n    limit: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    onPrevClick: PropTypes.func.isRequired,\r\n    onNextClick: PropTypes.func.isRequired,\r\n    dropDownValues: PropTypes.array,\r\n    onLimitChange: PropTypes.func\r\n}\r\n\r\nexport default PaginationComponent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport SvgIcon from '../../SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({}, props, {\n      ref: ref\n    }), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default value of an uncontrolled \".concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","export const paginationDropdownValues = [10, 25, 50, 75, 100];\r\nexport const paginationDefaultSize = 25;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export const platforms = [{\r\n    label: \"Wakefit\",\r\n    slug: \"wakefit\",\r\n    role: [\"OC\", \"RT\", \"C\"]\r\n}, {\r\n    label: \"Affiliate\",\r\n    slug: \"affiliate\",\r\n    role: [\"OC\", \"RT\", \"C\"]\r\n}, {\r\n    label: \"Affiliate FBA\",\r\n    slug: \"affiliate_fba\",\r\n    role: [\"RT\"]\r\n}];\r\n\r\nexport const getPlatforms = () => {\r\n    return platforms;\r\n}\r\n\r\nexport const getPlatformsByRole = (role) => {\r\n    return platforms.filter((platform) => platform.role.includes(role));\r\n}","export const helpDeskTickets = [{\r\n    id: 1,\r\n    label: \"Open\",\r\n    isActive: 1\r\n}, {\r\n    id: 2,\r\n    label: \"Re-Open\",\r\n    isActive: 1\r\n}, {\r\n    id: 3,\r\n    label: \"Resolved\",\r\n    isActive: 1\r\n}, {\r\n    id: 4,\r\n    label: \"Closed\",\r\n    isActive: 1\r\n}, {\r\n    id: 5,\r\n    label: \"Duplicate\",\r\n    isActive: 1\r\n}, {\r\n    id: 6,\r\n    label: \"Inprogress\",\r\n    isActive: 1\r\n}, {\r\n    id: 7,\r\n    label: \"Pending\",\r\n    isActive: 1\r\n}, {\r\n    id: 8,\r\n    label: \"Internal\",\r\n    isActive: 1\r\n}];\r\n\r\nexport const getHelpdeskTicketStatuses = () => {\r\n    return helpDeskTickets;\r\n}\r\n\r\nexport const getHelpdeskTicketStatusById = (id) => {\r\n    let status = helpDeskTickets.filter(status => status.id === id);\r\n    status = status.length > 0 ? status[0] : {};\r\n    return status;\r\n}","import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { getHelpdeskTicketStatusById } from '../../../../config/helpdeskTicketStatuses';\r\nconst helpdeskUrl = process.env.REACT_APP_HELPDESK_URL;\r\n\r\nexport const CustomerCommentsDetails = (props) => {\r\n    let rowInfo = props.original;\r\n    return (\r\n        <div>\r\n            <div className=\"break-word comment-color\">{props.value}</div>\r\n            <div className=\"tickets-container\">\r\n                {rowInfo.tickets && Array.isArray(rowInfo.tickets) && rowInfo.tickets.map((ticket, index) =>\r\n                    <Tooltip title={ticket.title || \"\"} placement=\"top\" arrow>\r\n                        <a\r\n                            className=\"custom-badge\"\r\n                            key={`ticket-${index}-id-${ticket.id}`}\r\n                            href={`${helpdeskUrl}helpdesk/tickets/${ticket.id}`}\r\n                            target=\"_blank\"\r\n                            without rel=\"noopener noreferrer\"\r\n                        >Wakefit - {ticket.id} - {getHelpdeskTicketStatusById(ticket.status).label}</a>\r\n                    </Tooltip>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different DOM element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport './style.scss';\r\n\r\nimport Button from '../../../components/Button';\r\nimport PaginationComponent from '../../../components/PaginationComponent';\r\n\r\nimport { getPossibleStatusCanBeUpdated, getOrderStatusById } from '../../../config/orderStatus';\r\nimport CartDetails, { cartDetailsFilter } from '../../Dashboard/components/CartDetails';\r\nimport CustomerDetails, { customerDetailFilter } from '../../Dashboard/components/CustomerDetails';\r\nimport Timestamp, { timestampFilter } from '../../Dashboard/components/Timestamp';\r\nimport affiliateIdFormatter, { affiliateIdFilter } from '../../Dashboard/components/AffiliateId';\r\nimport OrderId, { orderIdColumnFilter } from '../../Dashboard/components/OrderId';\r\nimport { getTodayDate, getDateTime } from '../../../config/time';\r\nimport { CustomerCommentsDetails } from '../../Dashboard/components/CustomerComments';\r\nimport { getShipmentStatus, getLockedStatus } from '../../../utilities/common';\r\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\r\nimport { paginationDropdownValues, paginationDefaultSize } from '../../../config/constants';\r\n\r\nclass Table extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // For Pagination\r\n            offset: 0,\r\n            limit: paginationDefaultSize,\r\n            total: 0,\r\n\r\n            bulkOrder: [],\r\n            isUpdatingBulk: false,\r\n            orderStatusData: {}\r\n        }\r\n    }\r\n\r\n    resetTable = () => {\r\n        console.log(\"Reseting...\");\r\n        this.setState({\r\n            // offset: 1,\r\n            // limit: paginationDefaultSize,\r\n            // total: this.props.data.count || 0,\r\n            bulkOrder: [],\r\n            isUpdatingBulk: false,\r\n            orderStatusData: {}\r\n        });\r\n    }\r\n\r\n\r\n    resetPagination = () => {\r\n        this.setState({\r\n            offset: 0,\r\n            limit: paginationDefaultSize,\r\n            total: this.props.data.count || 0,\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        // if ((this.props.activeTab && this.props.activeTab.id !== props.activeTab.id) || props.refreshOrders) {\r\n        if (((this.props.activePlatform && this.props.activePlatform.slug !== props.activePlatform.slug) && (this.props.activeTab && this.props.activeTab.id !== props.activeTab.id)) || props.refreshOrders) {\r\n            this.resetTable();\r\n            console.log(\"Reseting...\");\r\n            !this.props.cetId && this.props.activePlatform && this.props.activeTab &&\r\n                this.props.getAllOrdersByRole(props.activePlatform.slug, props.activeTab.slug, this.props.userRole, this.state.limit, this.state.offset);\r\n            this.props.cetId &&\r\n                this.props.getAllOrdersByRoleByCet(this.props.cetId, props.activePlatform.slug, props.activeTab.slug, this.props.userDetails.role.includes(\"TEAML\") ? \"TEAML\" : this.props.currentRole, this.state.limit, this.state.offset);\r\n        }\r\n        else if ((this.props.activePlatform && this.props.activePlatform.slug !== props.activePlatform.slug) || (this.props.activeTab && this.props.activeTab.id !== props.activeTab.id)) {\r\n            this.resetPagination();\r\n            this.resetTable();\r\n\r\n        }\r\n        if (props.data.results) {\r\n            this.setState({\r\n                total: props.data.count\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.resetTable();\r\n    }\r\n\r\n    onLimitChange = (event) => {\r\n        this.setState({ limit: Number(event.target.value) }, () => this.handleClick(\"reset\"));\r\n    }\r\n\r\n    // handleClick = (type) => {\r\n    //     let { limit, offset, total } = this.state;\r\n    //     let { userRole } = this.props;\r\n\r\n    //     this.setState({\r\n    //         offset: type === \"next\" ?\r\n    //             offset + limit < total ? offset + limit : offset\r\n    //             :\r\n    //             type === \"prev\" && offset - limit >= 0 ? offset - limit : 0\r\n    //     }, () => {\r\n    //         let { limit, offset } = this.state;\r\n    //         this.props.getAllOrdersByRole(this.props.activePlatform.slug, this.props.activeTab.slug, userRole, limit, offset);\r\n    //     });\r\n    // }\r\n\r\n    handleClick = (type) => {\r\n        let { limit, offset, total } = this.state;\r\n        let { activePlatform, activeTab, userRole, cetId, userDetails } = this.props;\r\n        this.setState({\r\n            offset: type === \"next\" ?\r\n                offset + limit < total ? offset + limit : offset\r\n                :\r\n                type === \"prev\" && offset - limit >= 0 ? offset - limit : 0\r\n        }, () => {\r\n            let { limit, offset } = this.state;\r\n            // console.log(this.props.activePlatform.slug, this.props.activeTab.slug, userRole, limit, offset, this.state, this.props);\r\n            // this.props.getAllOrdersByRole(this.props.activePlatform.slug, this.props.activeTab.slug, userRole, limit, offset);\r\n            !cetId && this.props.getAllOrdersByRole(activePlatform.slug, activeTab.slug, userRole, limit, offset);\r\n            cetId && this.props.getAllOrdersByRoleByCet(cetId, activePlatform.slug, activeTab.slug, userDetails.role.includes(\"TEAML\") ? \"TEAML\" : userRole, limit, offset);\r\n        });\r\n    }\r\n\r\n    statusFilter = (filter, row) => {\r\n        return String(row._original.status_detail[\"status_comments\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase()) ||\r\n            String(row._original.status_detail[\"status_date\"]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n    }\r\n\r\n    selectCart = (event, row) => {\r\n        let index = Number(event.target.value);\r\n        let { bulkOrder, orderStatusData } = this.state;\r\n        console.log(this.state);\r\n        if (event.target.checked) {\r\n            if (orderStatusData && Object.keys(orderStatusData).length > 0) {\r\n                bulkOrder.push({\r\n                    index,\r\n                    \"order_id\": row.order_random_id,\r\n                    \"affiliate_id\": row.affiliate_id,\r\n                    \"cart_id\": row.id,\r\n                    \"orm_order_status\": row.orm_order_status || \"\",\r\n                    \"status_comments\": row.status_detail[\"status_comments\"] || \"\", // verify?\r\n                    \"status_date\": row.status_detail[\"status_date\"] || \"\", // verify\r\n\r\n                    ...orderStatusData\r\n                });\r\n                orderStatusData = {};\r\n            } else {\r\n                bulkOrder.push({\r\n                    index,\r\n                    \"order_id\": row.order_random_id,\r\n                    \"affiliate_id\": row.affiliate_id,\r\n                    \"cart_id\": row.id,\r\n                    \"orm_order_status\": row.orm_order_status || \"\",\r\n                    \"status_comments\": row.status_detail[\"status_comments\"] || \"\", // verify?\r\n                    \"status_date\": row.status_detail[\"status_date\"] || \"\" // verify\r\n                });\r\n            }\r\n        } else {\r\n            bulkOrder = bulkOrder.filter(order => order.index !== index);\r\n        }\r\n        this.setState({ orderStatusData, bulkOrder, isUpdatingBulk: bulkOrder.length > 0 }, () => console.log(this.state));\r\n    }\r\n\r\n    selectBulk = (props) => {\r\n        let row = props.original;\r\n        let { bulkOrder } = this.state;\r\n        return (\r\n            <FormControlLabel\r\n                style={{ margin: '0px' }}\r\n                control={\r\n                    <Checkbox\r\n                        checked={bulkOrder.filter(order => props.index === Number(order.index)).length > 0}\r\n                        onChange={(event) => this.selectCart(event, row)}\r\n                        value={props.index}\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"\"\r\n            />\r\n        );\r\n    }\r\n\r\n    getFbaStatusCanBeUpdated = (currentStatusId) => {\r\n        let { activeTab } = this.props;\r\n        // console.log(activeTab)\r\n        let possibleStatusToShow = activeTab.possibleStatusToShow && activeTab.possibleStatusToShow.length > 0 ? activeTab.possibleStatusToShow : [];\r\n        let newStatuses = possibleStatusToShow.length > 0 ? possibleStatusToShow.map(id => getOrderStatusById(id)) : []\r\n        return newStatuses;\r\n    }\r\n\r\n    getComments = (rowInfo) => {\r\n        let requestDataForComments = {\r\n            affiliate_id: this.props.activePlatform &&\r\n                this.props.activePlatform.slug === 'affiliate_fba' ? -1 :\r\n                rowInfo.affiliate_id,\r\n            order_id: rowInfo.order_random_id,\r\n            cart_id: rowInfo.id\r\n        };\r\n\r\n        this.props.getCommentsByOrder &&\r\n            this.props.getCommentsByOrder(requestDataForComments);\r\n    }\r\n\r\n    statusFormatter = (props) => {\r\n        let today = getTodayDate();\r\n        let {\r\n            activePlatform,\r\n            // userDetails, activeTab\r\n        } = this.props;\r\n        let { orderStatusData, bulkOrder, isUpdatingBulk } = this.state;\r\n        let orderData = bulkOrder.filter(order => order.index === props.index);\r\n        let cell = props.original;\r\n        // let statuses = getPossibleStatusCanBeUpdated(cell.orm_order_status);\r\n        let statuses = activePlatform.slug === \"affiliate_fba\" ? this.getFbaStatusCanBeUpdated(cell.orm_order_status) : getPossibleStatusCanBeUpdated(cell.orm_order_status);\r\n        // console.log(getDateTime(cell.delivered_timestamp), activePlatform)\r\n\r\n        let updatedOrmOrderStatus = isUpdatingBulk ?\r\n            orderData[\"orm_order_status\"]\r\n            : (orderStatusData.hasOwnProperty(\"orm_order_status\") && orderStatusData[\"index\"] === props.index) ?\r\n                orderStatusData[\"orm_order_status\"]\r\n                : cell.orm_order_status;\r\n\r\n        return <div className=\"status-formatter\">\r\n            {cell.delivered_timestamp && activePlatform.slug === \"affiliate_fba\" &&\r\n                <div className=\"break-word delivery-timestamp\"><b>Delivered: </b>{getDateTime(cell.delivered_timestamp)}</div>\r\n            }\r\n\r\n            {getShipmentStatus(cell)}\r\n\r\n            {getLockedStatus(cell)}\r\n\r\n            <select\r\n                name=\"orm_order_status\"\r\n                className=\"change-order-dropdown\"\r\n                value={updatedOrmOrderStatus}\r\n                onChange={(event) => this.handleOrderStatusChange(event, props)}\r\n            >\r\n                {statuses.map((status, index) =>\r\n                    <option key={index} value={status.id}>{status.label}</option>\r\n                )}\r\n            </select>\r\n            <textarea\r\n                name=\"status_comments\"\r\n                className=\"input-field comments\"\r\n                rows=\"3\"\r\n                cols=\"50\"\r\n                placeholder=\"Comments\"\r\n                onChange={(event) => this.handleOrderStatusChange(event, props)}\r\n                value={isUpdatingBulk ?\r\n                    orderData[\"status_comments\"]\r\n                    : (orderStatusData.hasOwnProperty(\"status_comments\") && orderStatusData[\"index\"] === props.index) ?\r\n                        orderStatusData[\"status_comments\"]\r\n                        : (cell.status_detail && cell.status_detail[\"status_comments\"]) || \"\"}\r\n            />\r\n            <div className=\"update-status-form\">\r\n                {updatedOrmOrderStatus && <p style={{ textAlign: \"left\" }}>{getOrderStatusById(Number(updatedOrmOrderStatus)).label} Date</p>}\r\n                <input\r\n                    name=\"status_date\"\r\n                    className=\"input-field\"\r\n                    type=\"date\"\r\n                    min={today}\r\n                    onChange={(event) => this.handleOrderStatusChange(event, props)}\r\n                    value={isUpdatingBulk ?\r\n                        orderData[\"status_date\"]\r\n                        : (orderStatusData.hasOwnProperty(\"status_date\") && orderStatusData[\"index\"] === props.index) ?\r\n                            orderStatusData[\"status_date\"]\r\n                            : (cell.status_detail && cell.status_detail[\"status_date\"]) || \"\"}\r\n                />\r\n                <Button\r\n                    label=\"Update\"\r\n                    onClick={(event) => this.handleSubmitOrderStatus(event, props)}\r\n                    disabled={this.state.bulkOrder.length > 0 || orderStatusData.index !== props.index}\r\n                // onClick={() => this.props.submitOrderStatus({\r\n                //     \"role\": userDetails.role.includes(\"TEAML\") ? \"TEAML\" : this.props.userRole,\r\n                //     \"orders\": [{\r\n                //         \"order_id\": cell.order_random_id,\r\n                //         \"cart_id\": cell.id,\r\n                //         \"affiliate_id\": cell.affiliate_id,\r\n                //         \"orm_order_status\": cell.orm_order_status,\r\n                //         \"status_comments\": cell.status_detail.status_comments || \"\",\r\n                //         \"status_date\": cell.status_detail.status_date || \"\",\r\n                //         ...this.state.orderStatusData\r\n                //     }]\r\n                // })}\r\n                />\r\n            </div>\r\n\r\n            <div\r\n                className=\"custom-badge\"\r\n                onClick={() => this.getComments(cell)}\r\n            >Comments</div>\r\n        </div >\r\n    }\r\n\r\n    handleSubmitOrderStatus = (event, rowInfo) => {\r\n        let row = rowInfo.original;\r\n        let { userDetails, activePlatform } = this.props;\r\n        console.log(activePlatform);\r\n        let Check = window.confirm(\"Are you sure want to change Order Status?\");\r\n        if (Check) {\r\n            this.props.submitOrderStatus({\r\n                \"role\": userDetails.role.includes(\"TEAML\") ? \"TEAML\" : this.props.userRole,\r\n                type: activePlatform.slug === \"affiliate_fba\" ? \"affiliate_fba\" : \"\",\r\n                \"orders\": [{\r\n                    \"order_id\": row.order_random_id,\r\n                    \"cart_id\": row.id,\r\n                    \"affiliate_id\": row.affiliate_id,\r\n                    \"orm_order_status\": row.orm_order_status,\r\n                    \"status_comments\": row.status_detail.status_comments || \"\",\r\n                    \"status_date\": row.status_detail.status_date || \"\",\r\n                    ...this.state.orderStatusData\r\n                }]\r\n            })\r\n            // activePlatform === \"affiliate_fba\" ? this.props.submitFbaOrderStatus(data) : this.props.submitOrderStatus(data);\r\n        } else {\r\n            this.setState({ orderStatusData: {} })\r\n        }\r\n    }\r\n\r\n    handleOrderStatusChange = (event, row) => {\r\n        let fieldName = event.target.name;\r\n        let fieldValue = event.target.value;\r\n        let { orderStatusData, bulkOrder, isUpdatingBulk } = this.state;\r\n        if (!isUpdatingBulk) {\r\n            if (orderStatusData.index === row.index) {\r\n                switch (fieldName) {\r\n                    default: orderStatusData[fieldName] = fieldValue;\r\n                }\r\n            } else {\r\n                orderStatusData = {};\r\n                orderStatusData[\"index\"] = row.index;\r\n                orderStatusData[\"orm_order_status\"] = row.original.orm_order_status;\r\n                orderStatusData[\"status_comments\"] = (row.original.status_detail && row.original.status_detail.status_comments) || \"\";\r\n                orderStatusData[\"status_date\"] = (row.original.status_detail && row.original.status_detail.status_date) || \"\";\r\n                switch (fieldName) {\r\n                    default: orderStatusData[fieldName] = fieldValue;\r\n                }\r\n            }\r\n        } else {\r\n            if (isUpdatingBulk) {\r\n                let editingIndex, editingObj;\r\n                bulkOrder.filter((order, index) => {\r\n                    if (Number(order.index) === row.index) {\r\n                        editingIndex = index;\r\n                        editingObj = order;\r\n                    }\r\n                    return order;\r\n                });\r\n                if (editingObj && Object.keys(editingObj).length > 0) {\r\n                    switch (fieldName) {\r\n                        default: editingObj[fieldName] = fieldValue;\r\n                    }\r\n                    bulkOrder[editingIndex] = editingObj;\r\n                } else {\r\n                    //  Adding the unselected cart to bulk once user starts typing in it.\r\n                    orderStatusData = {};\r\n                    orderStatusData[\"index\"] = row.index;\r\n                    orderStatusData[\"affiliate_id\"] = row.original.affiliate_id || 0;\r\n                    orderStatusData[\"cart_id\"] = row.original.id;\r\n                    orderStatusData[\"orm_order_status\"] = row.original.orm_order_status;\r\n                    orderStatusData[\"status_comments\"] = (row.original.status_detail && row.original.status_detail.status_comments) || \"\";\r\n                    orderStatusData[\"status_date\"] = (row.original.status_detail && row.original.status_detail.status_date) || \"\";\r\n                    switch (fieldName) {\r\n                        default: orderStatusData[fieldName] = fieldValue;\r\n                    }\r\n                    bulkOrder.push(orderStatusData);\r\n                }\r\n            }\r\n        }\r\n        this.setState({ orderStatusData, bulkOrder });\r\n    }\r\n\r\n    updateOrders = () => {\r\n        let check = window.confirm(\"Are you sure want to do bulk Operations?\")\r\n        if (check) {\r\n            let { bulkOrder } = this.state;\r\n            let { activePlatform } = this.props;\r\n            let data = {\r\n                \"role\": this.props.userRole,\r\n                type: activePlatform.slug === \"affiliate_fba\" ? \"affiliate_fba\" : \"\",\r\n                \"orders\": bulkOrder,\r\n            }\r\n            this.props.submitOrderStatus(data);\r\n        }\r\n    }\r\n\r\n    searchByOrderId = (event) => {\r\n        event.preventDefault();\r\n        let { orderId } = this.state;\r\n        let { activePlatform, userRole } = this.props;\r\n        this.resetTable();\r\n        this.props.serachByOrderId(activePlatform.slug, orderId, userRole);\r\n    }\r\n\r\n    handleOrderIdChange = (event) => {\r\n        this.setState({ orderId: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        let { bulkOrder } = this.state;\r\n        let { data, orderIdSearch } = this.props;\r\n        let tableData = data && data.results ? data.results : [];\r\n        // console.log(this.props)\r\n        return (\r\n            <div className=\"rt-module-table\">\r\n                <div className=\"additional-feature\">\r\n                    <form className=\"order-id-serach\">\r\n                        <input className=\"input-field\" placeholder=\"Order ID / Phone Number / [A] Phone Number\" onChange={this.handleOrderIdChange} />\r\n                        <Button\r\n                            label=\"Search\"\r\n                            type=\"submit\"\r\n                            disabled={!this.state.orderId}\r\n                            onClick={this.searchByOrderId}\r\n                        />\r\n                    </form>\r\n                    <div className=\"update-bulk\">\r\n                        <p>Selected {bulkOrder.length} </p>\r\n                        <Button disabled={bulkOrder.length === 0} onClick={this.updateOrders} label=\"Update Bulk\" />\r\n                    </div>\r\n                </div>\r\n                {tableData.length === 0 ? this.props.getNoOrders() :\r\n                    <div>\r\n                        <ReactTable\r\n                            data={tableData}\r\n                            filterable\r\n                            minRows={0}\r\n                            pageSize={999}\r\n                            PaginationComponent={() =>\r\n                                <PaginationComponent\r\n                                    dropDownValues={paginationDropdownValues}\r\n                                    onLimitChange={this.onLimitChange}\r\n                                    offset={this.state.offset}\r\n                                    total={this.state.total}\r\n                                    limit={this.state.limit}\r\n                                    onPrevClick={this.handleClick}\r\n                                    onNextClick={this.handleClick}\r\n                                />\r\n                            }\r\n                            NoDataComponent={() => null}\r\n                            defaultFilterMethod={(filter, row) =>\r\n                                String(row[filter.id]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())}\r\n                            columns={[{\r\n                                Header: 'S.No',\r\n                                id: 'row',\r\n                                maxWidth: 50,\r\n                                filterable: false,\r\n                                Cell: (row) => <div>{row.index + 1}</div>\r\n                            }, {\r\n                                Header: \"Affiliate\",\r\n                                accessor: \"affiliate_id\",\r\n                                show: this.props.activePlatform && [\"affiliate_fba\", \"affiliate\"].includes(this.props.activePlatform.slug),\r\n                                width: 80,\r\n                                Cell: affiliateIdFormatter,\r\n                                filterMethod: affiliateIdFilter\r\n                            }, {\r\n                                Header: \"Order ID\",\r\n                                accessor: \"order_random_id\",\r\n                                width: 210,\r\n                                Cell: (props) =>\r\n                                    <OrderId\r\n                                        rowInfo={props}\r\n                                        isRTModule={true}\r\n                                        orderIdSearch={orderIdSearch}\r\n                                        userRole={this.props.userRole}\r\n                                        activePlatform={this.props.activePlatform}\r\n                                        userDetails={this.props.userDetails}\r\n                                        updateCustomer={this.props.submitPaymentTrackId}\r\n                                    />,\r\n                                filterMethod: orderIdColumnFilter\r\n                            }, {\r\n                                Header: \"Cart Details\",\r\n                                accessor: \"item_sku\",\r\n                                width: 240,\r\n                                Cell: (props) =>\r\n                                    <CartDetails\r\n                                        rowInfo={props}\r\n                                        allOrders={tableData}\r\n                                        userDetails={this.props.userDetails}\r\n                                        activePlatform={this.props.activePlatform}\r\n                                        getMoreModifiedHistoryByOrder={this.props.getMoreModifiedHistoryByOrder}\r\n                                    />,\r\n                                filterMethod: cartDetailsFilter\r\n                            }, {\r\n                                Header: \"User Details\",\r\n                                accessor: \"customer_details\",\r\n                                width: 240,\r\n                                Cell: (props) =>\r\n                                    <CustomerDetails\r\n                                        rowInfo={props}\r\n                                        userDetails={this.props.userDetails}\r\n                                        showPopup={this.props.showPopup}\r\n                                        clickToCall={this.props.clickToCall}\r\n                                    />,\r\n                                filterMethod: customerDetailFilter\r\n                            }, {\r\n                                Header: \"Customer Comments\",\r\n                                accessor: \"additional_comments\",\r\n                                width: 230,\r\n                                Cell: CustomerCommentsDetails\r\n                            }, {\r\n                                accessor: \"\",\r\n                                width: 55,\r\n                                filterable: false,\r\n                                Cell: this.selectBulk\r\n                            }, {\r\n                                Header: \"Order Status\",\r\n                                accessor: \"orm_order_status\",\r\n                                width: 235,\r\n                                Cell: this.statusFormatter,\r\n                                filterMethod: this.statusFilter\r\n                            }, {\r\n                                Header: \"Create Timestamp\",\r\n                                accessor: \"create_timestamp\",\r\n                                width: 175,\r\n                                Cell: Timestamp,\r\n                                filterMethod: timestampFilter\r\n                            }, {\r\n                                Header: \"Last Update Time\",\r\n                                accessor: \"update_timestamp\",\r\n                                width: 175,\r\n                                Cell: Timestamp,\r\n                                filterMethod: timestampFilter\r\n                            }]}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport './style.scss';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport RTTable from './components/Table';\r\nimport { getAllOrdersByRole, getAllOrdersByRoleByCet, resetOrders, submitOrderStatus, submitPaymentTrackId, clickToCallAction, serachByOrderId, getCommentsByOrder } from '../Dashboard/action';\r\nimport { getMoreModifiedHistoryByOrder } from '../OcModule/action';\r\nimport { showPopup } from '../../components/Popup/action';\r\nimport { getStatusTabsByRole } from '../../config/orderStatus';\r\nimport {\r\n    // getPlatforms,\r\n    getPlatformsByRole\r\n} from '../../config/platforms';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport { paginationDefaultSize } from '../../config/constants';\r\n\r\nconst currentRole = \"RT\";\r\n\r\nconst FBAtabs = [{\r\n    id: 11,\r\n    label: \"Review Due\",\r\n    slug: \"feedback-call-done\",\r\n    isActive: 1,\r\n    // orderBy: 11,\r\n    accessibleByRole: [\"RT\"],\r\n    // orderByRT: 4,\r\n    possibleStatusToShow: [11, 12, 15, 16]\r\n}, {\r\n    id: 12,\r\n    label: \"Review Received\",\r\n    slug: \"review-received\",\r\n    isActive: 1,\r\n    // orderBy: 12,\r\n    accessibleByRole: [\"RT\"],\r\n    // orderByRT: 5,\r\n    possibleStatusToShow: [12, 15, 16]\r\n}, {\r\n    id: 15,\r\n    label: \"Closed Cases\",\r\n    slug: \"closed\",\r\n    isActive: 1,\r\n    // orderBy: 15,\r\n    accessibleByRole: [\"RT\"],\r\n    // orderByRT: 7,\r\n    possibleStatusToShow: [15]\r\n}, {\r\n    id: 16,\r\n    label: \"Follow Up\",\r\n    slug: \"followup\",\r\n    isActive: 1,\r\n    // orderBy: 16,\r\n    accessibleByRole: [\"RT\"],\r\n    // orderByRT: 8,\r\n    possibleStatusToShow: [11, 12, 15, 16]\r\n}];\r\n\r\nclass RTModule extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            platforms: [],\r\n            tabs: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { platform, slug, cetId } = this.props;\r\n        let platforms = getPlatformsByRole(\"RT\");\r\n        // let tabs = getStatusTabsByRole(currentRole);\r\n\r\n        let tabs = platform === \"affiliate_fba\" ? FBAtabs : getStatusTabsByRole(currentRole);\r\n\r\n        let newPlatform = platforms.filter(iterationPlatform => iterationPlatform.slug === platform);\r\n\r\n        let newTab = tabs.filter(iterationtab => iterationtab.slug === slug);\r\n\r\n        if (cetId) {\r\n            if (newPlatform.length === 0 || newTab.length === 0) {\r\n                let platformSlug = newPlatform.length > 0 ?\r\n                    newPlatform[0].slug : platforms.length > 0 ?\r\n                        platforms[0].slug : \"\";\r\n\r\n                let tabSlug = newTab.length > 0 ?\r\n                    newTab[0].slug : tabs.length > 0 ?\r\n                        tabs[0].slug : \"\";\r\n\r\n                this.props.history.push(`/relationship-team/${cetId}/${platformSlug}/${tabSlug}`);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            platforms,\r\n            tabs,\r\n            activePlatform: newPlatform[0] || platforms[0],\r\n            activeTab: newTab[0] || tabs[0]\r\n        }, () => {\r\n            this.changeTab(this.state.activeTab);\r\n            console.log(this.state, this.props, tabs, newTab)\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.refreshOrders) {\r\n            console.log(\"Reload orders...\");\r\n            // let { cetId, userDetails } = this.props;\r\n            // let { activePlatform, activeTab } = this.state;\r\n            // !cetId && this.props.getAllOrdersByRole(this.state.activePlatform.slug, activeTab.slug, currentRole);\r\n            // cetId && this.props.getAllOrdersByRoleByCet(cetId, this.state.activePlatform.slug, activeTab.slug, userDetails.role.includes(\"TEAML\") ? \"TEAML\" : currentRole);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetOrders();\r\n    }\r\n\r\n    changePlatform = (activePlatform) => {\r\n        //   console.log(activePlatform, this.state.tabs);\r\n        let tabs = activePlatform.slug === \"affiliate_fba\" ? FBAtabs : getStatusTabsByRole(currentRole);\r\n        this.setState({ activePlatform, tabs }, () => this.changeTab(this.state.tabs[0]));\r\n    }\r\n\r\n    changeTab = (activeTab) => {\r\n        let { platform, slug, cetId, userDetails } = this.props;\r\n        let { activePlatform } = this.state;\r\n        if (activePlatform.slug !== platform || activeTab.slug !== slug) {\r\n            if (cetId)\r\n                this.props.history.push(`/relationship-team/${cetId}/${activePlatform.slug}/${activeTab.slug}`);\r\n            else\r\n                this.props.history.push(`/relationship-team/${activePlatform.slug}/${activeTab.slug}`);\r\n        }\r\n        this.setState({ activeTab }, () => {\r\n            this.props.resetOrders();\r\n            !cetId && this.props.getAllOrdersByRole(this.state.activePlatform.slug, activeTab.slug, currentRole, paginationDefaultSize, 0);\r\n            cetId && this.props.getAllOrdersByRoleByCet(cetId, this.state.activePlatform.slug, activeTab.slug, userDetails.role.includes(\"TEAML\") ? \"TEAML\" : currentRole, paginationDefaultSize, 0);\r\n        });\r\n    }\r\n\r\n    getPlatformTabs = () =>\r\n        <div className=\"platform-tabs\">\r\n            {this.state.platforms.map((tab, index) =>\r\n                <div\r\n                    key={index}\r\n                    className={this.state.activePlatform && this.state.activePlatform.slug === tab.slug ? \"tab-invert pointer active\" : \"tab-invert pointer\"}\r\n                    onClick={() => this.changePlatform(tab)}\r\n                >\r\n                    {tab.label}\r\n                    {this.props.orders.count && this.props.orderIdSearch &&\r\n                        this.state.activePlatform && this.state.activePlatform.slug === tab.slug &&\r\n                        <Badge\r\n                            className=\"custom-badge search-badge\"\r\n                            color=\"secondary\"\r\n                            badgeContent={this.props.orders.count}></Badge>\r\n                    }\r\n                </div>)\r\n            }\r\n        </div>\r\n\r\n    getTabs = () =>\r\n        // console.log(this.state.activePlatform);\r\n        <div className=\"menu-container\">\r\n            {this.state.tabs.map((tab, index) =>\r\n                <div\r\n                    key={index}\r\n                    className={this.state.activeTab && this.state.activeTab.slug === tab.slug ? \"tab pointer active\" : \"tab pointer\"}\r\n                    onClick={() => this.changeTab(tab)}\r\n                >\r\n                    {tab.label}\r\n                </div>)\r\n            }\r\n        </div>\r\n\r\n    getNoOrders = () => <div className=\"no-orders\">There is No Orders, Please Try After Some Time...</div>\r\n\r\n    render() {\r\n        let { activePlatform, activeTab } = this.state;\r\n        let { orders, orderIdSearch, refreshOrders, userDetails, getAllOrdersByRole, getAllOrdersByRoleByCet,\r\n            clickToCallAction, getMoreModifiedHistoryByOrder, serachByOrderId, getCommentsByOrder,\r\n            submitPaymentTrackId, submitOrderStatus } = this.props;\r\n        let title = `Order ${orderIdSearch ? \"Id Search\" : `List  ${activeTab && `- ${activeTab.label}`}`}`;\r\n\r\n        return (\r\n            <div className=\"rtmodule-container\">\r\n                <PageHeader\r\n                    header={title}\r\n                    count={orders && orders.count}\r\n                />\r\n                {this.getPlatformTabs()}\r\n                {/* Check it out */}\r\n                {!orderIdSearch && this.getTabs()}\r\n                {/* {this.getTabs()} */}\r\n                {orders ?\r\n                    <RTTable\r\n                        userRole={currentRole}\r\n                        cetId={this.props.cetId}\r\n                        activePlatform={activePlatform}\r\n                        activeTab={activeTab}\r\n                        data={orders}\r\n                        orderIdSearch={this.props.orderIdSearch}\r\n                        userDetails={userDetails}\r\n                        clickToCall={clickToCallAction}\r\n                        getMoreModifiedHistoryByOrder={getMoreModifiedHistoryByOrder}\r\n                        serachByOrderId={serachByOrderId}\r\n                        getCommentsByOrder={getCommentsByOrder}\r\n                        submitPaymentTrackId={submitPaymentTrackId}\r\n                        submitOrderStatus={submitOrderStatus}\r\n                        getAllOrdersByRole={getAllOrdersByRole}\r\n                        getAllOrdersByRoleByCet={getAllOrdersByRoleByCet}\r\n                        refreshOrders={refreshOrders}\r\n                        getNoOrders={this.getNoOrders}\r\n                        showPopup={this.props.showPopup}\r\n                    /> :\r\n                    this.getNoOrders()\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        userDetails: state.userDetails,\r\n        refreshOrders: state.general.refreshOrders,\r\n        orders: state.general.ordersData,\r\n        orderIdSearch: state.general.orderIdSearch\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        getAllOrdersByRole,\r\n        getAllOrdersByRoleByCet,\r\n        resetOrders,\r\n        clickToCallAction,\r\n        getMoreModifiedHistoryByOrder,\r\n        serachByOrderId,\r\n        submitPaymentTrackId,\r\n        submitOrderStatus,\r\n        getCommentsByOrder,\r\n        showPopup\r\n    }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RTModule);\r\n"],"sourceRoot":""}