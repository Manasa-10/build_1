{"version":3,"sources":["containers/Dashboard/components/Timestamp/index.js","components/PaginationComponent/index.js","containers/Dashboard/components/AffiliateId/index.js","config/affiliate.js","containers/ProductionOrders/action.js","components/Download/index.js","containers/ProductionOrders/index.js"],"names":["timestampFilter","filter","row","_original","id","String","getDateTime","toLocaleLowerCase","includes","value","Timestamp","props","PaginationComponent","Component","render","this","offset","limit","total","onPrevClick","onNextClick","dropDownValues","onLimitChange","filtered","filteredData","className","disabled","onClick","aria-hidden","Array","isArray","length","onChange","map","option","index","key","defaultProps","affiliateIdFilter","getAffiliateById","label","affiliateIdFormatter","cell","affiliateTypes","slug","affiliate","getAllProductionOrderAction","dispatch","showLoader","getProductionOrders","then","response","data","hideLoader","type","GET_PRODUCTION_ORDERS","catch","error","handleError","resetProductionOrder","RESET_PRODUCTION_ORDERS","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Download","React","filename","fileExtension","columns","downloadContent","Button","element","name","col","columnsToDownload","ProductionOrders","constructor","super","event","setState","Number","target","handleClick","state","getDataToDownload","orders","order","affiliate_id","order_confirmed_on","create_timestamp","onFilteredChange","current","ReactTable","getResolvedState","sortedData","createRef","getNoOrders","style","paddingTop","fontSize","componentDidMount","componentWillUnmount","componentWillReceiveProps","count","PageHeader","header","results","filterable","minRows","ref","pageSize","NoDataComponent","defaultFilterMethod","Header","width","Cell","accessor","minWidth","filterMethod","connect","ownProps","productionOrders","bindActionCreators"],"mappings":"qGAAA,8DAGA,MAOaA,EAAkB,CAACC,EAAQC,IAC7BA,EAAIC,UAAUF,EAAOG,KAAOC,OAAOC,YAAYD,OAAOH,EAAIC,UAAUF,EAAOG,OAAOG,oBAAoBC,SAASP,EAAOQ,MAAMF,qBAGxHG,IAXIC,GACXA,EAAMF,MACC,6BAAMH,YAAYK,EAAMF,QAE5B,I,iCCPX,2BAIA,MAAMG,UAA4BC,YAC9BC,SAAU,IAAD,EAC2GC,KAAKJ,MAA/GK,EADD,EACCA,OAAQC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAOC,EADvB,EACuBA,YAAaC,EADpC,EACoCA,YAAaC,EADjD,EACiDA,eAAgBC,EADjE,EACiEA,cAAeC,EADhF,EACgFA,SAAUC,EAD1F,EAC0FA,aAC/F,OACI,yBAAKC,UAAU,wBACX,4BACIA,UAAU,4BACVC,SAAqB,IAAXV,EACVW,QAAS,IAAMR,EAAY,SAC3B,uBAAGM,UAAU,mBAAmBG,cAAY,UAEhD,yBAAKH,UAAU,mBAAmBT,EAAlC,OAA8CA,EAASC,GAASC,EAAQF,EAASC,EAAQC,EAAzF,OAAoGA,GACpG,4BACIO,UAAU,4BACVC,SAAUV,EAASC,GAASC,EAC5BS,QAAS,IAAMP,EAAY,SAC3B,uBAAGK,UAAU,oBAAoBG,cAAY,UAEhDC,MAAMC,QAAQT,IAAmBA,EAAeU,OAAS,GAAK,4BAAQN,UAAU,kBAAkBO,SAAUV,EAAeb,MAAOQ,GAC9HI,EAAeY,IAAI,CAACC,EAAQC,IAAU,4BAAQC,IAAKD,EAAO1B,MAAOyB,GAASA,KAG9EL,MAAMC,QAAQP,IACXA,EAASQ,OAAS,GAClBF,MAAMC,QAAQN,IACdA,EAAaO,OAAS,GACtB,yBAAKN,UAAU,wBAAuB,gDAAtC,IAAgED,EAAaO,UAMjGnB,EAAoByB,aAAe,CAC/BrB,OAAQ,EACRC,MAAO,EACPC,MAAO,EACPG,eAAgB,IAaLT,O,uDCrDf,+DAGA,MAKa0B,EAAoB,CAACrC,EAAQC,IAC/BG,OAAOkC,YAAiBrC,EAAID,EAAOG,KAAKoC,OAAS,IAAIjC,oBAAoBC,SAASP,EAAOQ,MAAMF,qBAG3FkC,IATe9B,IAC1B,IAAI+B,EAAO/B,EAAMF,MACjB,OAAO,6BAAM8B,YAAiBG,GAAMF,OAAS,M,iCCLjD,kCAAO,MAAMG,EAAiB,CAAC,CAC3BH,MAAO,UACPI,KAAM,UACNxC,GAAI,GACL,CACCoC,MAAO,SACPI,KAAM,SACNxC,GAAI,GACL,CACCoC,MAAO,YACPI,KAAM,YACNxC,GAAI,GACL,CACCoC,MAAO,WACPI,KAAM,WACNxC,GAAI,IAOKmC,EAAoBnC,GACtBuC,EAAe1C,OAAO4C,GAAaA,EAAUzC,KAAOA,GAAI,IAAM,I,iRClBlE,SAAS0C,EAA4B7B,EAAOD,GAC/C,OAAQ+B,IACJA,EAASC,eACTC,YAAoBhC,EAAOD,GACtBkC,KAAKC,IAUX,IAAmCC,EAT1BL,EAASM,eACTN,GAQ0BK,EARSD,EAASC,KASjD,CACHE,KAAMC,IACNH,YATKI,MAAMC,IACHC,YAAYD,EAAOV,MAY5B,SAASY,EAAqBP,GACjC,MAAO,CACHE,KAAMM,IACNR,Q,yECvBR,MAAMS,EAAYC,IAAYD,UACxBE,EAAaD,IAAYD,UAAUE,WACnCC,EAAcF,IAAYD,UAAUG,YAE1C,MAAMC,UAAiBC,IAAMrD,UACzBC,SAAU,IAAD,EAQDC,KAAKJ,MALL6B,EAHC,EAGDA,MACA2B,EAJC,EAIDA,SACAC,EALC,EAKDA,cACAC,EANC,EAMDA,QACAjB,EAPC,EAODA,KAEAkB,EAAkB,kBAACC,EAAA,EAAD,CAAQ/B,MAAOA,IACrC,OACI,yBAAKf,UAAU,sBACX,kBAACoC,EAAD,CAAWW,QAASF,EAAiBH,SAAUA,EAAUC,cAAeA,GACpE,kBAACL,EAAD,CAAYX,KAAMA,EAAMqB,KAAMN,GACzBE,EAAQpC,IAAI,CAACyC,EAAKvC,IAAU,kBAAC6B,EAAD,CAAaxB,MAAOkC,EAAIlC,MAAO/B,MAAOiE,EAAIjE,aAQ/FwD,EAAS5B,aAAe,CACpBiB,KAAM,GACNd,MAAO,WACP2B,SAAU,WACVC,cAAe,OACfC,QAAS,GACTjB,KAAM,IAYKa,Q,SCpCf,MAAM5C,EAAiB,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,KAC1CsD,EAAoB,CAAC,CACvBnC,MAAO,OACP/B,MAAO,QACR,CACC+B,MAAO,WACP/B,MAAO,mBACR,CACC+B,MAAO,YACP/B,MAAO,gBACR,CACC+B,MAAO,WACP/B,MAAO,YACR,CACC+B,MAAO,iBACP/B,MAAO,mBACR,CACC+B,MAAO,WACP/B,MAAO,iBACR,CACC+B,MAAO,qBACP/B,MAAO,sBACR,CACC+B,MAAO,mBACP/B,MAAO,qBAGX,MAAMmE,UAAyBV,IAAMrD,UACjCgE,YAAYlE,GACRmE,MAAMnE,GADS,KAgCnBW,cAAiByD,IACbhE,KAAKiE,SAAS,CAAE/D,MAAOgE,OAAOF,EAAMG,OAAOzE,QAAU,IAAMM,KAAKoE,YAAY,WAjC7D,KAoCnBA,YAAe7B,IAAU,IAAD,EACWvC,KAAKqE,MAA9BnE,EADc,EACdA,MAAOD,EADO,EACPA,OAAQE,EADD,EACCA,MAErBH,KAAKiE,SAAS,CACVzD,SAAU,GACVC,aAAc,KACdR,OAAiB,SAATsC,EACJtC,EAASC,EAAQC,EAAQF,EAASC,EAAQD,EAEjC,SAATsC,GAAmBtC,EAASC,GAAS,EAAID,EAASC,EAAQ,GAC/D,KAAO,IAAD,EACmBF,KAAKqE,MAAvBnE,EADD,EACCA,MAAOD,EADR,EACQA,OACbD,KAAKJ,MAAMmC,4BAA4B7B,EAAOD,MAhDnC,KAoDnBqE,kBAAqBC,IACjB,IAAIlC,EAAO,GAWX,OAVAA,EAAOkC,EAAOrD,IAAI,CAACsD,EAAOpD,IACf,aACH,KAAQA,EAAQ,GACboD,EAFP,CAII,aAAgBhD,YAAiBgD,EAAMC,cAAchD,OAAS,GAC9D,mBAAsBlC,YAAYiF,EAAME,oBACxC,iBAAoBnF,YAAYiF,EAAMG,qBAGvCtC,GAhEQ,KAmEnBuC,iBAAoBpE,IAChB,MAAMqE,EAAU7E,KAAK8E,WAAWD,QAEhC7E,KAAKiE,SAAS,CAAEzD,WAAUC,aAAcoE,EAAQE,mBAAmBC,cApEnEhF,KAAKqE,MAAQ,CACTpE,OAAQ,EACRC,MAAO,IACPC,MAAO,EACPK,SAAU,GACVC,aAAc,MAElBT,KAAK8E,WAAa3B,IAAM8B,YAG5BC,cACI,OAAO,yBAAKC,MAAO,CAAEC,WAAY,OAAQC,SAAU,SAA5C,qCAEXC,oBAAqB,IAAD,EACQtF,KAAKqE,MAAvBnE,EADU,EACVA,MAAOD,EADG,EACHA,OACbD,KAAKJ,MAAMmC,4BAA4B7B,EAAOD,GAGlDsF,uBACIvF,KAAKJ,MAAMgD,uBAGf4C,0BAA0B5F,GAClBA,EAAM2E,QACNvE,KAAKiE,SAAS,CACV9D,MAAOP,EAAM2E,OAAOkB,QA8ChC1F,SAAU,IACAwE,EAAWvE,KAAKJ,MAAhB2E,OADD,EAE4BvE,KAAKqE,MAAhC7D,EAFD,EAECA,SAAUC,EAFX,EAEWA,aAEhB,OACI,yBAAKC,UAAU,8BACX,kBAACgF,EAAA,EAAD,CACIC,OAJA,kCAKAF,MAAOlB,GAAUA,EAAOkB,QAE3BlB,GAAUA,EAAOkB,OAASvB,OAAOK,EAAOkB,OAAS,GAC9C,6BACI,kBAAC,EAAD,CACIlD,KAAM,QACNd,MAAO,WACP2B,SAAU,oBACVE,QAASM,EACTvB,KAAMrC,KAAKsE,kBAAkBtE,KAAKqE,MAAM5D,cAAgBT,KAAKJ,MAAM2E,OAAOqB,YAIrFrB,GACG,kBAAC,IAAD,CACIlC,KAAMkC,EAAOqB,QACbC,YAAU,EACVC,QAAS,EACTC,IAAK/F,KAAK8E,WACVkB,SAAU,KACVxF,SAAUR,KAAKqE,MAAM7D,SACrBoE,iBAAkB5E,KAAK4E,iBACvB/E,oBAAqB,IACjB,kBAACA,EAAA,EAAD,CACIS,eAAgBiE,GAAUA,EAAOkB,OAASvB,OAAOK,EAAOkB,OAAS,IAAM,IAAInF,EAAgBiE,EAAOkB,OAASnF,EAC3GC,cAAeP,KAAKO,cACpBN,OAAQD,KAAKqE,MAAMpE,OACnBE,MAAOH,KAAKqE,MAAMlE,MAClBD,MAAOF,KAAKqE,MAAMnE,MAClBE,YAAaJ,KAAKoE,YAClB/D,YAAaL,KAAKoE,YAClB5D,SAAUA,EACVC,aAAcA,IAGtBwF,gBAAiB,IAAM,KACvBC,oBAAqB,CAAChH,EAAQC,IAC1BG,OAAOH,EAAID,EAAOG,KAAKG,oBAAoBC,SAASP,EAAOQ,MAAMF,qBACrE8D,QACI,CAAC,CACG6C,OAAQ,OACR9G,GAAI,MACJ+G,MAAO,GACPP,YAAY,EACZQ,KAAOlH,GAAQ,6BAAMA,EAAIiC,MAAQ,IAClC,CACC+E,OAAQ,WACRG,SAAU,kBACVC,SAAU,KACX,CACCJ,OAAQ,YACRC,MAAO,IACPE,SAAU,eACVD,KAAM3E,IACN8E,aAAcjF,KACf,CACC4E,OAAQ,WACRG,SAAU,WACVC,SAAU,KACX,CACCJ,OAAQ,iBACRG,SAAU,kBACVF,MAAO,KACR,CACCD,OAAQ,WACRG,SAAU,gBACVF,MAAO,IACR,CACCD,OAAQ,qBACRG,SAAU,qBACVC,SAAU,IACVF,KAAM1G,IACN6G,aAAcvH,KACf,CACCkH,OAAQ,mBACRG,SAAU,mBACVC,SAAU,IACVF,KAAM1G,IACN6G,aAAcvH,UAwB/BwH,sBAbS,CAACpC,EAAOqC,KACrB,CACHnC,OAAQF,EAAMsC,iBAAiBpC,SAIXvC,GACjB4E,YAAmB,CACtBhE,uBACAb,+BACDC,GAGQyE,CAA6C5C","file":"static/js/13.fad7e40a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { getDateTime } from '../../../../config/time';\r\n\r\nconst Timestamp = (props) => {\r\n    if (props.value) {\r\n        return <div>{getDateTime(props.value)}</div>\r\n    }\r\n    return \"\"\r\n}\r\n\r\nexport const timestampFilter = (filter, row) => {\r\n    return row._original[filter.id] && String(getDateTime(String(row._original[filter.id]))).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nexport default Timestamp;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nclass PaginationComponent extends Component {\r\n    render() {\r\n        let { offset, limit, total, onPrevClick, onNextClick, dropDownValues, onLimitChange, filtered, filteredData } = this.props;\r\n        return (\r\n            <div className=\"pagination-container\">\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset === 0 ? true : false}\r\n                    onClick={() => onPrevClick(\"prev\")}>\r\n                    <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <div className=\"pagination-text\">{offset} to {offset + limit <= total ? offset + limit : total} of {total}</div>\r\n                <button\r\n                    className=\"navigation-button pointer\"\r\n                    disabled={offset + limit >= total ? true : false}\r\n                    onClick={() => onNextClick(\"next\")}>\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                {Array.isArray(dropDownValues) && dropDownValues.length > 0 && <select className=\"custom-dropdown\" onChange={onLimitChange} value={limit}>\r\n                    {dropDownValues.map((option, index) => <option key={index} value={option}>{option}</option>)}\r\n                </select>}\r\n\r\n                {Array.isArray(filtered) &&\r\n                    filtered.length > 0 &&\r\n                    Array.isArray(filteredData) &&\r\n                    filteredData.length > 0 &&\r\n                    <div className=\"matched-records-data\"><b>Matched Records :</b> {filteredData.length}</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPaginationComponent.defaultProps = {\r\n    offset: 0,\r\n    limit: 0,\r\n    total: 0,\r\n    dropDownValues: []\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n    offset: PropTypes.number.isRequired,\r\n    limit: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    onPrevClick: PropTypes.func.isRequired,\r\n    onNextClick: PropTypes.func.isRequired,\r\n    dropDownValues: PropTypes.array,\r\n    onLimitChange: PropTypes.func\r\n}\r\n\r\nexport default PaginationComponent;","import React from 'react';\r\nimport { getAffiliateById } from '../../../../config/affiliate';\r\n\r\nconst affiliateIdFormatter = (props) => {\r\n    let cell = props.value;\r\n    return <div>{getAffiliateById(cell).label || \"\"}</div>\r\n}\r\n\r\nexport const affiliateIdFilter = (filter, row) => {\r\n    return String(getAffiliateById(row[filter.id]).label || \"\").toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())\r\n}\r\n\r\nexport default affiliateIdFormatter","export const affiliateTypes = [{\r\n    label: \"Wakefit\",\r\n    slug: \"wakefit\",\r\n    id: 0\r\n}, {\r\n    label: \"Amazon\",\r\n    slug: \"amazon\",\r\n    id: 1\r\n}, {\r\n    label: \"Pepperfry\",\r\n    slug: \"pepperfry\",\r\n    id: 2\r\n}, {\r\n    label: \"Flipkart\",\r\n    slug: \"flipkart\",\r\n    id: 3\r\n}];\r\n\r\nexport const getAffiliates = () => {\r\n    return affiliateTypes;\r\n}\r\n\r\nexport const getAffiliateById = (id) => {\r\n    return affiliateTypes.filter(affiliate => affiliate.id === id)[0] || {};\r\n}","import { RESET_PRODUCTION_ORDERS, GET_PRODUCTION_ORDERS } from \"./constants\";\r\nimport handleError from \"../../errorHandler\";\r\nimport { hideLoader, showLoader } from \"../../components/Loader/action\";\r\nimport { getProductionOrders } from \"../../api\";\r\n\r\nexport function getAllProductionOrderAction(limit, offset) {\r\n    return (dispatch) => {\r\n        dispatch(showLoader());\r\n        getProductionOrders(limit, offset)\r\n            .then(response => {\r\n                dispatch(hideLoader());\r\n                dispatch(getProductionOrderSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                handleError(error, dispatch)\r\n            });\r\n    };\r\n}\r\n\r\nexport function getProductionOrderSuccess(data) {\r\n    return {\r\n        type: GET_PRODUCTION_ORDERS,\r\n        data\r\n    }\r\n}\r\n\r\nexport function resetProductionOrder(data) {\r\n    return {\r\n        type: RESET_PRODUCTION_ORDERS,\r\n        data\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './style.scss';\r\nimport PropTypes from 'prop-types';\r\nimport ReactExport from \"react-export-excel\";\r\nimport Button from \"../Button\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nclass Download extends React.Component {\r\n    render() {\r\n        let {\r\n            // type,\r\n            label,\r\n            filename,\r\n            fileExtension,\r\n            columns,\r\n            data\r\n        } = this.props;\r\n        let downloadContent = <Button label={label} />;\r\n        return (\r\n            <div className=\"download-container\">\r\n                <ExcelFile element={downloadContent} filename={filename} fileExtension={fileExtension}>\r\n                    <ExcelSheet data={data} name={filename}>\r\n                        {columns.map((col, index) => <ExcelColumn label={col.label} value={col.value} />)}\r\n                    </ExcelSheet>\r\n                </ExcelFile>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDownload.defaultProps = {\r\n    type: \"\",\r\n    label: \"Download\",\r\n    filename: \"download\",\r\n    fileExtension: \"xlsx\",\r\n    columns: [],\r\n    data: []\r\n}\r\n\r\nDownload.propTypes = {\r\n    type: PropTypes.string,\r\n    label: PropTypes.string,\r\n    filename: PropTypes.string,\r\n    fileExtension: PropTypes.string,\r\n    columns: PropTypes.array,\r\n    data: PropTypes.array\r\n}\r\n\r\nexport default Download;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport './style.scss';\r\nimport PaginationComponent from '../../components/PaginationComponent';\r\nimport { resetProductionOrder, getAllProductionOrderAction } from './action';\r\nimport affiliateIdFormatter, { affiliateIdFilter } from '../Dashboard/components/AffiliateId';\r\nimport Timestamp, { timestampFilter } from '../Dashboard/components/Timestamp';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport { getDateTime } from '../../config/time';\r\nimport Download from '../../components/Download';\r\nimport { getAffiliateById } from '../../config/affiliate';\r\n\r\nconst dropDownValues = [50, 100, 150, 200, 350, 500];\r\nconst columnsToDownload = [{\r\n    label: \"S.No\",\r\n    value: \"s_no\"\r\n}, {\r\n    label: \"Order Id\",\r\n    value: \"order_random_id\"\r\n}, {\r\n    label: \"Affiliate\",\r\n    value: \"affiliate_id\"\r\n}, {\r\n    label: \"Item SKU\",\r\n    value: \"item_sku\"\r\n}, {\r\n    label: \"Item Dimension\",\r\n    value: \"item_dimensions\"\r\n}, {\r\n    label: \"Item Qty\",\r\n    value: \"item_quantity\"\r\n}, {\r\n    label: \"Order Confirmed On\",\r\n    value: \"order_confirmed_on\"\r\n}, {\r\n    label: \"Create Timestamp\",\r\n    value: \"create_timestamp\"\r\n}];\r\n\r\nclass ProductionOrders extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            offset: 1,\r\n            limit: 100,\r\n            total: 0,\r\n            filtered: [],\r\n            filteredData: null\r\n        }\r\n        this.ReactTable = React.createRef();\r\n    }\r\n\r\n    getNoOrders() {\r\n        return <div style={{ paddingTop: \"15px\", fontSize: \"20px\" }}>No Production Data Available Now!</div>\r\n    }\r\n    componentDidMount() {\r\n        let { limit, offset } = this.state;\r\n        this.props.getAllProductionOrderAction(limit, offset);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetProductionOrder();\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.orders) {\r\n            this.setState({\r\n                total: props.orders.count\r\n            });\r\n        }\r\n    }\r\n\r\n    onLimitChange = (event) => {\r\n        this.setState({ limit: Number(event.target.value) }, () => this.handleClick(\"reset\"));\r\n    }\r\n\r\n    handleClick = (type) => {\r\n        let { limit, offset, total } = this.state;\r\n\r\n        this.setState({\r\n            filtered: [],\r\n            filteredData: null,\r\n            offset: type === \"next\" ?\r\n                offset + limit < total ? offset + limit : offset\r\n                :\r\n                type === \"prev\" && offset - limit >= 0 ? offset - limit : 0\r\n        }, () => {\r\n            let { limit, offset } = this.state;\r\n            this.props.getAllProductionOrderAction(limit, offset);\r\n        });\r\n    }\r\n\r\n    getDataToDownload = (orders) => {\r\n        let data = [];\r\n        data = orders.map((order, index) => {\r\n            return {\r\n                \"s_no\": index + 1,\r\n                ...order,\r\n\r\n                \"affiliate_id\": getAffiliateById(order.affiliate_id).label || \"\",\r\n                \"order_confirmed_on\": getDateTime(order.order_confirmed_on),\r\n                \"create_timestamp\": getDateTime(order.create_timestamp)\r\n            }\r\n        });\r\n        return data;\r\n    }\r\n\r\n    onFilteredChange = (filtered) => {\r\n        const current = this.ReactTable.current;\r\n        // console.log(current, current.getResolvedState());\r\n        this.setState({ filtered, filteredData: current.getResolvedState().sortedData });\r\n    }\r\n\r\n    render() {\r\n        let { orders } = this.props;\r\n        let { filtered, filteredData } = this.state;\r\n        let title = \"STUCK ORDERS - UNDER PRODUCTION\";\r\n        return (\r\n            <div className=\"production-order-container\">\r\n                <PageHeader\r\n                    header={title}\r\n                    count={orders && orders.count}\r\n                />\r\n                {orders && orders.count && Number(orders.count) > 0 &&\r\n                    <div>\r\n                        <Download\r\n                            type={\"excel\"}\r\n                            label={\"Download\"}\r\n                            filename={\"Production-Orders\"}\r\n                            columns={columnsToDownload}\r\n                            data={this.getDataToDownload(this.state.filteredData || this.props.orders.results)}\r\n                        />\r\n                    </div>}\r\n\r\n                {orders &&\r\n                    <ReactTable\r\n                        data={orders.results}\r\n                        filterable\r\n                        minRows={0}\r\n                        ref={this.ReactTable}\r\n                        pageSize={9999}\r\n                        filtered={this.state.filtered}\r\n                        onFilteredChange={this.onFilteredChange}\r\n                        PaginationComponent={() =>\r\n                            <PaginationComponent\r\n                                dropDownValues={orders && orders.count && Number(orders.count) > 500 ? [...dropDownValues, orders.count] : dropDownValues}\r\n                                onLimitChange={this.onLimitChange}\r\n                                offset={this.state.offset}\r\n                                total={this.state.total}\r\n                                limit={this.state.limit}\r\n                                onPrevClick={this.handleClick}\r\n                                onNextClick={this.handleClick}\r\n                                filtered={filtered}\r\n                                filteredData={filteredData}\r\n                            />\r\n                        }\r\n                        NoDataComponent={() => null}\r\n                        defaultFilterMethod={(filter, row) =>\r\n                            String(row[filter.id]).toLocaleLowerCase().includes(filter.value.toLocaleLowerCase())}\r\n                        columns={\r\n                            [{\r\n                                Header: 'S.No',\r\n                                id: 'row',\r\n                                width: 50,\r\n                                filterable: false,\r\n                                Cell: (row) => <div>{row.index + 1}</div>\r\n                            }, {\r\n                                Header: 'Order ID',\r\n                                accessor: 'order_random_id',\r\n                                minWidth: 150\r\n                            }, {\r\n                                Header: 'Affiliate',\r\n                                width: 100,\r\n                                accessor: 'affiliate_id',\r\n                                Cell: affiliateIdFormatter,\r\n                                filterMethod: affiliateIdFilter\r\n                            }, {\r\n                                Header: 'Item SKU',\r\n                                accessor: 'item_sku',\r\n                                minWidth: 200\r\n                            }, {\r\n                                Header: 'Item Dimension',\r\n                                accessor: 'item_dimensions',\r\n                                width: 200\r\n                            }, {\r\n                                Header: 'Item Qty',\r\n                                accessor: 'item_quantity',\r\n                                width: 80\r\n                            }, {\r\n                                Header: 'Order Confirmed On',\r\n                                accessor: 'order_confirmed_on',\r\n                                minWidth: 220,\r\n                                Cell: Timestamp,\r\n                                filterMethod: timestampFilter\r\n                            }, {\r\n                                Header: 'Create Timestamp',\r\n                                accessor: 'create_timestamp',\r\n                                minWidth: 220,\r\n                                Cell: Timestamp,\r\n                                filterMethod: timestampFilter\r\n                            }]\r\n                        }\r\n                    />\r\n                    // : this.getNoOrders()\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        orders: state.productionOrders.orders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        resetProductionOrder,\r\n        getAllProductionOrderAction\r\n    }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductionOrders);\r\n"],"sourceRoot":""}