{"version":3,"sources":["config/products.js","containers/ProductReviewAndQA/action.js","containers/ProductReviewAndQAEdit/index.js"],"names":["products","id","key","label","possibleProductToShow","possibleProductToReplace","isRnrResolution","skuTypes","sku","name","getProductNameBySKU","originalSku","split_sku","split","productName","length","includes","skuTypeExtension","selectedType","filter","type","product","toLocaleUpperCase","getProductById","getPossibleProductsBySku","extractedSku","matchedProducts","map","getPossibleProductsForReplacement","getAllReviewOrdersAction","data","dispatch","showLoader","getAllReviewOrders","then","response","GET_REVIEW_ORDERS_DATA","getReviewOrdersSuccess","hideLoader","message","toast","success","GET_UPDATED_REVIEW_ORDERS_DATA","catch","error","handleError","resetReviewData","RESET_REVIEW_ORDERS_DATA","ProductReviewEdit","Component","constructor","props","super","componentWillUnmount","this","resetData","setState","rating","title","description","question","answer","enableSubmit","handleChange","event","fieldName","target","fieldValue","value","state","validateForm","validForm","requestType","every","field","handleSubmit","updatePayload","request_type","action","ReveiwAndQAId","publishPayload","is_published","updateReviewDetails","className","onChange","rows","placeholder","updateQaDetails","componentDidMount","payload","componentWillReceiveProps","console","log","refreshOrders","productReviewOrder","render","reveiw_id","qa_id","header","item_sku","dimension","disabled","onClick","connect","ownProps","userDetails","ProductReviewDetails","refreshData","reviewOrders","bindActionCreators"],"mappings":"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","file":"static/js/36.860ecdfc.chunk.js","sourcesContent":["export const products = [{\r\n    id: 1,\r\n    key: \"WOMFM\",\r\n    label: \"Wakefit Orthopaedic Memory Foam Mattress\",\r\n    possibleProductToShow: [1, 2, 3],\r\n    possibleProductToReplace: [1, 2, 3]\r\n}, {\r\n    id: 2,\r\n    key: \"WDCM\",\r\n    label: \"Wakefit Dual Comfort Mattress\",\r\n    possibleProductToShow: [1, 2, 3],\r\n    possibleProductToReplace: [1, 2, 3]\r\n}, {\r\n    id: 3,\r\n    key: \"WHRFM\",\r\n    label: \"Wakefit Full HR Foam Mattress\",\r\n    possibleProductToShow: [1, 2, 3],\r\n    possibleProductToReplace: [1, 2, 3]\r\n}, {\r\n    id: 4,\r\n    key: \"WSWB\",\r\n    label: \"Wakefit Sheesham Wood Bed\",\r\n    possibleProductToShow: [4],\r\n    possibleProductToReplace: [4]\r\n}, {\r\n    id: 5,\r\n    key: \"WSPS\",\r\n    label: \"Wakefit Sleeping Pillow - Single (Height Adjustable)\",\r\n    possibleProductToShow: [27],\r\n    possibleProductToReplace: [27]\r\n}, {\r\n    id: 6,\r\n    key: \"WSPD\",\r\n    label: \"Wakefit Sleeping Pillow - Set of 2 (Height Adjustable)\",\r\n    possibleProductToShow: [27],\r\n    possibleProductToReplace: [27]\r\n}, {\r\n    id: 7,\r\n    key: \"WMFP\",\r\n    label: \"Wakefit Memory Foam Sleeping Pillow\",\r\n    possibleProductToShow: [7],\r\n    possibleProductToReplace: [27]\r\n}, {\r\n    id: 8,\r\n    key: \"WMP\",\r\n    label: \"Wakefit Water Proof Mattress Protector\",\r\n    possibleProductToShow: [8],\r\n    possibleProductToReplace: [8, 11]\r\n}, {\r\n    id: 9,\r\n    key: \"WTNP\",\r\n    label: \"WakeFit Travel Neck Pillow\",\r\n    possibleProductToShow: [9],\r\n    possibleProductToReplace: [9]\r\n}, {\r\n    id: 10,\r\n    key: \"WBSC\",\r\n    label: \"Wakefit Back Rest Support Pillow\",\r\n    possibleProductToShow: [10],\r\n    possibleProductToReplace: [10, 11, 8]\r\n}, {\r\n    id: 11,\r\n    key: \"WFB\",\r\n    label: \"Wakefit Fitted Bedsheets\",\r\n    possibleProductToShow: [11],\r\n    possibleProductToReplace: [11]\r\n}, {\r\n    id: 12,\r\n    key: \"WSMRC\",\r\n    label: \"Wakefit - Siliconised Microfibre Reversible Comforter\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 13,\r\n    key: \"WFTHR\",\r\n    label: \"Wakefit - HR Foam Topper\",\r\n    possibleProductToShow: [14],\r\n    possibleProductToReplace: [14]\r\n}, {\r\n    id: 14,\r\n    // key: \"WFTOPPER\",\r\n    key: \"WFT\",\r\n    label: \"Wakefit - Mattress Topper\",\r\n    possibleProductToShow: [14],\r\n    possibleProductToReplace: [14]\r\n}, {\r\n    id: 15,\r\n    key: \"WFBLEAFY\",\r\n    label: \"Wakefit Fitted Bedsheets - (Leafy Bliss)\",\r\n    possibleProductToShow: [11],\r\n    possibleProductToReplace: [11]\r\n}, {\r\n    id: 16,\r\n    key: \"WFBBUBBLES\",\r\n    label: \"Wakefit Fitted Bedsheets - (Dreamy Bubbles)\",\r\n    possibleProductToShow: [11],\r\n    possibleProductToReplace: [11]\r\n}, {\r\n    id: 17,\r\n    key: \"WFBFLORA\",\r\n    label: \"Wakefit Fitted Bedsheets - (Serene Flora)\",\r\n    possibleProductToShow: [11],\r\n    possibleProductToReplace: [11]\r\n}, {\r\n    id: 18,\r\n    key: \"WSMRCBBS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Brown & Beige) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 19,\r\n    key: \"WSMRCGTS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Green & Teal) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 20,\r\n    key: \"WSMRCNGS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Navy Blue & Grey) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 34,\r\n    key: \"WSMRCFLORAS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Serene Flora) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 35,\r\n    key: \"WSMRCLEAFYS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Leafy Bliss) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 36,\r\n    key: \"WSMRCBUBBLESS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Dreamy Bubbles) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 21,\r\n    key: \"WFTMF\",\r\n    label: \"Wakefit Memory Foam Topper\",\r\n    possibleProductToShow: [14],\r\n    possibleProductToReplace: [14]\r\n}, {\r\n    id: 22,\r\n    key: \"WFTSF\",\r\n    label: \"Wakefit Super Soft (SS) Foam Topper\",\r\n    possibleProductToShow: [14],\r\n    possibleProductToReplace: [14]\r\n}, {\r\n    id: 23,\r\n    key: \"WFTCF\",\r\n    label: \"Wakefit Cool Fit Foam Topper\",\r\n    possibleProductToShow: [14],\r\n    possibleProductToReplace: [14]\r\n}, {\r\n    id: 24,\r\n    key: \"WFPACK\",\r\n    label: \"Wakefit Packaging Material\",\r\n    possibleProductToShow: [24],\r\n    possibleProductToReplace: [24]\r\n}, {\r\n    id: 25,\r\n    key: \"WFOCOVER\",\r\n    label: \"Wakefit Outer Cover\",\r\n    possibleProductToShow: [25],\r\n    isRnrResolution: 5,             // show when rnr_resolution_type === 5\r\n    possibleProductToReplace: [25]\r\n}, {\r\n    id: 26,\r\n    key: \"WMPMAROON\",\r\n    label: \"Wakefit Water Proof Mattress Protector - Maroon\",\r\n    possibleProductToShow: [8],\r\n    possibleProductToReplace: [8, 11]\r\n}, {\r\n    id: 27,\r\n    key: \"WSP\",\r\n    label: \"WakeFit Sleeping Pillow - (Height Adjustable)\",\r\n    possibleProductToShow: [27],\r\n    possibleProductToReplace: [27]\r\n}, {\r\n    id: 28,\r\n    key: \"WSMRCBBD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Brown & Beige) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 29,\r\n    key: \"WSMRCGTD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Green & Teal) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 30,\r\n    key: \"WSMRCNGD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Navy Blue & Grey) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 37,\r\n    key: \"WSMRCFLORAD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Serene Flora) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 38,\r\n    key: \"WSMRCLEAFYD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Leafy Bliss) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 39,\r\n    key: \"WSMRCBUBBLESD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (Dreamy Bubbles) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 31,\r\n    key: \"WFOCOVERW\",\r\n    label: \"Wakefit Outer Cover - White\",\r\n    possibleProductToShow: [25],\r\n    possibleProductToReplace: [25]\r\n}, {\r\n    id: 32,\r\n    key: \"WFOCOVERG\",\r\n    label: \"Wakefit Outer Cover - Grey\",\r\n    possibleProductToShow: [25],\r\n    possibleProductToReplace: [25]\r\n}, {\r\n    id: 33,\r\n    key: \"WMPGREY\",\r\n    label: \"Wakefit Water Proof Mattress Protector - Grey\",\r\n    possibleProductToShow: [8],\r\n    possibleProductToReplace: [8, 11]\r\n}, {\r\n    id: 40,\r\n    key: \"WSMRCWD\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (White) - Double\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}, {\r\n    id: 41,\r\n    key: \"WSMRCWS\",\r\n    label: \"Wakefit Siliconised Microfibre Reversible Comforter - (White) - Single\",\r\n    possibleProductToShow: [12],\r\n    possibleProductToReplace: [12]\r\n}];\r\n\r\nconst skuTypes = [{\r\n    sku: \"SAUG\",\r\n    name: \"Wakefit - Auriga Sheesham Bed with Storage\"\r\n}, {\r\n    sku: \"SAMD\",\r\n    name: \"Wakefit - Andromeda Sheesham Bed with Storage\"\r\n}, {\r\n    sku: \"AUG\",\r\n    name: \"Wakefit - Auriga Sheesham Bed\"\r\n}, {\r\n    sku: \"AMD\",\r\n    name: \"Wakefit - Andromeda Sheesham Bed\"\r\n}, {\r\n    sku: \"LEAFY\",\r\n    name: \"Wakefit Fitted Bedsheets - (Leafy Bliss)\"\r\n}, {\r\n    sku: \"BUBBLES\",\r\n    name: \"Wakefit Fitted Bedsheets - (Dreamy Bubbles)\"\r\n}, {\r\n    sku: \"FLORA\",\r\n    name: \"Wakefit Fitted Bedsheets - (Serene Flora)\"\r\n}, {\r\n    sku: \"WHITE\",\r\n    name: \"Wakefit Fitted Bedsheets - (White)\"\r\n}];\r\n\r\n\r\nexport const getProductNameBySKU = (sku = \"\", originalSku = \"\") => {\r\n    let split_sku = sku.split(/(\\d+)/);\r\n    let productName = \"\";\r\n    // console.log(split_sku, sku);\r\n\r\n    if (((split_sku[0] === \"WSWB\" && !split_sku[split_sku.length - 1].includes(\"COMBO\")) || split_sku[0] === \"WFB\") && (split_sku.length > 2 && split_sku[2] !== \"\")) {\r\n        let skuTypeExtension = split_sku[split_sku.length - 1].split('-');\r\n        let selectedType = skuTypes.filter(type => type.sku === skuTypeExtension[0]);\r\n        selectedType = selectedType.length > 0 ? selectedType[0] : {};\r\n        productName = (selectedType.name + (skuTypeExtension && skuTypeExtension.length > 1 ? skuTypeExtension[1] === 'COVER' ? ' - (Cover)' : '' : '')) || \"\";\r\n    } else {\r\n        let product = products.filter(product => product.key === split_sku[0]);\r\n        product = product.length > 0 ? product[0] : {}\r\n        productName = product.label || \"\";\r\n    }\r\n\r\n    if (split_sku[split_sku.length - 1].includes(\"COMBO\")) {\r\n        productName = productName + \" - COMBO\";\r\n    }\r\n    if (originalSku.includes(\"WDCM\") && sku.includes(\"WDCM\")) {\r\n        if (originalSku.includes(\"-COVER\")) productName += \" - (Cover)\";\r\n        else if (originalSku.includes(\"-ZIPPER\")) productName += \" - (Zipper)\";\r\n    }\r\n\r\n    if (sku.toLocaleUpperCase() === \"WFSBDCM78605\") {\r\n        productName = \"Wakefit Sleep Box with sleep accessories and 5 inch Queen High Resilience (HR) Foam Mattress 78 inch SBDCM78605 60 inch\";\r\n    } else if (sku.toLocaleUpperCase() === \"WFSBDCM78725\") {\r\n        productName = \"Wakefit Sleep Box with sleep accessories and 5 inch Queen High Resilience (HR) Foam Mattress 78 inch SBDCM78725 72 inch\";\r\n    }\r\n\r\n    // if (sku.toLocaleUpperCase().includes(\"WFSBDCM\") || sku.toLocaleUpperCase().includes(\"WFSBDCM\")) {\r\n    //     productName = `Wakefit Sleep Box with sleep accessories and ${sku.toLocaleUpperCase().includes('7872') ? \"King\" : sku.toLocaleUpperCase().includes('7860') ? 'Queen' : ''} ${sku.toLocaleUpperCase().includes('DC') ? 'High Resilience Foam (HR)' : sku.toLocaleUpperCase().includes('MF') ? 'Memory Foam (MF)' : ''} Mattress ${sku}`;\r\n    // }\r\n\r\n    // console.log(sku, split_sku, productName);\r\n\r\n    return productName // product.label || \"\";\r\n}\r\n\r\nexport const getProductById = (id) => {\r\n    return products.filter(product => product.id === id).length > 0 ? products.filter(product => product.id === id)[0] : {};\r\n}\r\n\r\nexport const getPossibleProductsBySku = (sku) => {\r\n    let extractedSku = sku.split(/(\\d+)/)[0];\r\n    let matchedProducts = products\r\n        .filter(product => product.key === extractedSku);\r\n    let possibleProducts = matchedProducts.length > 0 ?\r\n        matchedProducts[0].possibleProductToShow\r\n            .map(id => getProductById(id))\r\n        : [];\r\n    return possibleProducts\r\n}\r\n\r\nexport const getPossibleProductsForReplacement = (sku) => {\r\n    let matchedProducts = products.filter(product => sku.includes(product.key));\r\n    let possibleProducts = matchedProducts.length > 0 ?\r\n        matchedProducts[0].possibleProductToReplace.map(id => getProductById(id))\r\n        : [];\r\n    // console.log(sku, matchedProducts, possibleProducts);\r\n    return possibleProducts;\r\n}\r\n","import { hideLoader, showLoader } from \"../../components/Loader/action\";\r\nimport handleError from \"../../errorHandler\";\r\nimport { getAllReviewOrders } from \"../../api\";\r\nimport { GET_REVIEW_ORDERS_DATA, GET_UPDATED_REVIEW_ORDERS_DATA, RESET_REVIEW_ORDERS_DATA } from \"./constants\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport function getAllReviewOrdersAction(data) {\r\n    return (dispatch) => {\r\n        dispatch(showLoader());\r\n        getAllReviewOrders(data)\r\n            .then(response => {\r\n                dispatch(getReviewOrdersSuccess(response.data));\r\n                dispatch(hideLoader());\r\n                response.data.message && toast.success(response.data.message) && dispatch(getUpdatedReviewOrders())\r\n            })\r\n            .catch(error => {\r\n                handleError(error, dispatch);\r\n            });\r\n    };\r\n}\r\n\r\nexport function getReviewOrdersSuccess(data) {\r\n    return {\r\n        type: GET_REVIEW_ORDERS_DATA,\r\n        data\r\n    }\r\n}\r\n\r\nexport function getUpdatedReviewOrders() {\r\n    return {\r\n        type: GET_UPDATED_REVIEW_ORDERS_DATA\r\n    }\r\n}\r\n\r\nexport function resetReviewData() {\r\n    return {\r\n        type: RESET_REVIEW_ORDERS_DATA\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getAllReviewOrdersAction, resetReviewData } from \"../ProductReviewAndQA/action\";\r\nimport PageHeader from '../../components/PageHeader';\r\nimport Button from '../../components/Button';\r\nimport { getProductNameBySKU } from '../../config/products';\r\nimport './style.scss';\r\nclass ProductReviewEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {\r\n                rating: \"\",\r\n                title: \"\",\r\n                description: \"\",\r\n                question: \"\",\r\n                answer: \"\"\r\n            },\r\n            enableSubmit: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let payload = {\r\n            request_type: this.props.requestType,\r\n            action: 'show',\r\n            \"id\": this.props.ReveiwAndQAId\r\n        }\r\n        this.props.getAllReviewOrdersAction(payload);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.resetReviewData();\r\n        this.resetData();\r\n    }\r\n\r\n    resetData = () => {\r\n        this.setState({\r\n            data: {\r\n                rating: \"\",\r\n                title: \"\",\r\n                description: \"\",\r\n                question: \"\",\r\n                answer: \"\"\r\n            },\r\n            enableSubmit: false\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        let { data } = this.state;\r\n        console.log(props)\r\n        if (props.refreshOrders) {\r\n            let payload = {\r\n                request_type: this.props.requestType,\r\n                action: 'show',\r\n                \"id\": this.props.ReveiwAndQAId\r\n            }\r\n            this.props.getAllReviewOrdersAction(payload);\r\n        } else {\r\n            if (props.productReviewOrder) {\r\n                data[\"title\"] = props.productReviewOrder.title || \"\";\r\n                data[\"rating\"] = props.productReviewOrder.rating || \"\";\r\n                data[\"description\"] = props.productReviewOrder.description || \"\";\r\n                data[\"question\"] = props.productReviewOrder.question || \"\";\r\n                data[\"answer\"] = props.productReviewOrder.answer || \"\";\r\n            }\r\n            this.setState({ enableSubmit: false })\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let fieldName = event.target.name;\r\n        let fieldValue = event.target.value;\r\n        let { data } = this.state\r\n        switch (fieldName) {\r\n            default: data[fieldName] = fieldValue\r\n                break;\r\n        }\r\n        this.setState({ data },\r\n            () => this.validateForm()\r\n            // () => console.log(this.state)\r\n        )\r\n    }\r\n\r\n    validateForm = () => {\r\n        let { data } = this.state;\r\n        let { requestType } = this.props;\r\n        let validForm = false;\r\n        let requiredFields = requestType === \"review\" ? [\"rating\"] : [\"question\"]\r\n        validForm = requiredFields.every(field => data[field] !== \"\");\r\n        this.setState({ enableSubmit: validForm });\r\n    }\r\n\r\n    handleSubmit = (key) => {\r\n        // e.preventDefault();\r\n        let { data } = this.state;\r\n        let updatePayload = {}\r\n        if (this.props.requestType === \"review\") {\r\n            updatePayload = {\r\n                request_type: this.props.requestType,\r\n                action: 'update',\r\n                \"id\": this.props.ReveiwAndQAId,\r\n                rating: data.rating,\r\n                title: data.title,\r\n                description: data.description\r\n            }\r\n        } else if (this.props.requestType === \"qa\") {\r\n            updatePayload = {\r\n                request_type: this.props.requestType,\r\n                action: 'update',\r\n                \"id\": this.props.ReveiwAndQAId,\r\n                question: data.question,\r\n                answer: data.answer\r\n            }\r\n        }\r\n        let publishPayload = {\r\n            ...updatePayload,\r\n            is_published: 1\r\n        }\r\n        if (key === \"is_published\") {\r\n            // console.log(\"publishPayload\", publishPayload)\r\n            this.props.getAllReviewOrdersAction(publishPayload);\r\n        } else if (key === \"update\") {\r\n            // console.log(\"updatePAYLOAD\", updatePayload)\r\n            this.props.getAllReviewOrdersAction(updatePayload);\r\n        }\r\n    }\r\n\r\n    updateReviewDetails = () => {\r\n        let { data } = this.state;\r\n        return <div>\r\n            <div className=\"break-word\"><b>Rating :</b>\r\n                <select className=\"custom-dropdown\"\r\n                    name=\"rating\"\r\n                    onChange={this.handleChange}\r\n                    value={data.rating}\r\n                >\r\n                    <option value={\"\"}>Select Rating</option>\r\n                    <option value={1}>1 star</option>\r\n                    <option value={2}>2 star</option>\r\n                    <option value={3}>3 star</option>\r\n                    <option value={4}>4 star</option>\r\n                    <option value={5}>5 star</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"break-word\"><b>Title :</b>\r\n                <textarea\r\n                    name=\"title\"\r\n                    className=\"input-field\"\r\n                    rows={1}\r\n                    placeholder=\"Enter Title\"\r\n                    onChange={this.handleChange}\r\n                    value={data.title}\r\n                />\r\n            </div>\r\n            <div className=\"break-word\"><b>Description :</b>\r\n                <textarea\r\n                    name=\"description\"\r\n                    className=\"input-field\"\r\n                    rows={7}\r\n                    placeholder=\"Enter Description\"\r\n                    onChange={this.handleChange}\r\n                    value={data.description}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n    updateQaDetails = () => {\r\n        let { data } = this.state;\r\n        return <div>\r\n            <div className=\"break-word\"><b>Question :</b>\r\n                <textarea\r\n                    name=\"question\"\r\n                    className=\"input-field\"\r\n                    rows={1}\r\n                    placeholder=\"Enter Question\"\r\n                    onChange={this.handleChange}\r\n                    value={data.question}\r\n                />\r\n            </div>\r\n            <div className=\"break-word\"><b>Answer :</b>\r\n                <textarea\r\n                    name=\"answer\"\r\n                    className=\"input-field\"\r\n                    rows={7}\r\n                    placeholder=\"Enter Answer\"\r\n                    onChange={this.handleChange}\r\n                    value={data.answer}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        let { productReviewOrder, requestType,\r\n            // userDetails, getAllReviewOrdersAction\r\n        } = this.props;\r\n        // let { data } = this.state;\r\n        let { enableSubmit } = this.state;\r\n        let titleName = requestType === \"qa\" ? \"Question\" : requestType === \"review\" ? \"Review\" : \"\";\r\n        let title = `Edit ${titleName} ${(productReviewOrder && (productReviewOrder.reveiw_id || productReviewOrder.qa_id) ? `- ${productReviewOrder.reveiw_id || productReviewOrder.qa_id}` : '')}`;\r\n        console.log(this.props)\r\n\r\n        return (\r\n            productReviewOrder &&\r\n            <div className=\"review-edit-container\">\r\n                <PageHeader\r\n                    header={title}\r\n                />\r\n                <div className=\"review-edit-content\">\r\n                    {productReviewOrder && productReviewOrder.is_published === 1 &&\r\n                        <div className=\"publish-icon\">Published</div>\r\n                    }\r\n                    <div className=\"product-name break-word\"><b>Product Name : </b>{productReviewOrder && productReviewOrder.item_sku && getProductNameBySKU(productReviewOrder.item_sku)}{productReviewOrder && productReviewOrder.dimension && ` - ${productReviewOrder.dimension}`} </div>\r\n                    {requestType === \"review\" ?\r\n                        this.updateReviewDetails() : this.updateQaDetails()\r\n                    }\r\n                    <div className=\"edit-btn\">\r\n                        <Button\r\n                            label=\"Update\"\r\n                            className=\"btn\"\r\n                            disabled={!enableSubmit}\r\n                            onClick={() => this.handleSubmit(\"update\")}\r\n                        />\r\n                        <Button\r\n                            label=\"Publish\"\r\n                            className=\"btn\"\r\n                            disabled={!enableSubmit}\r\n                            onClick={() => this.handleSubmit(\"is_published\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        userDetails: state.userDetails,\r\n        refreshOrders: state.ProductReviewDetails.refreshData,\r\n        productReviewOrder: state.ProductReviewDetails.reviewOrders,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        getAllReviewOrdersAction,\r\n        resetReviewData\r\n    }, dispatch);\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductReviewEdit);"],"sourceRoot":""}